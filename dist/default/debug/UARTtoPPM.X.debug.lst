

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 22 04:48:22 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC12F1572 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  008C                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011D                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0197                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  028C                     	;# 
   151  030C                     	;# 
   152  038C                     	;# 
   153  0391                     	;# 
   154  0392                     	;# 
   155  0393                     	;# 
   156  0691                     	;# 
   157  0692                     	;# 
   158  0693                     	;# 
   159  0694                     	;# 
   160  0695                     	;# 
   161  0D8E                     	;# 
   162  0D8F                     	;# 
   163  0D90                     	;# 
   164  0D91                     	;# 
   165  0D91                     	;# 
   166  0D92                     	;# 
   167  0D93                     	;# 
   168  0D93                     	;# 
   169  0D94                     	;# 
   170  0D95                     	;# 
   171  0D95                     	;# 
   172  0D96                     	;# 
   173  0D97                     	;# 
   174  0D97                     	;# 
   175  0D98                     	;# 
   176  0D99                     	;# 
   177  0D99                     	;# 
   178  0D9A                     	;# 
   179  0D9B                     	;# 
   180  0D9C                     	;# 
   181  0D9C                     	;# 
   182  0D9D                     	;# 
   183  0D9D                     	;# 
   184  0D9E                     	;# 
   185  0D9F                     	;# 
   186  0DA0                     	;# 
   187  0DA1                     	;# 
   188  0DA1                     	;# 
   189  0DA2                     	;# 
   190  0DA3                     	;# 
   191  0DA3                     	;# 
   192  0DA4                     	;# 
   193  0DA5                     	;# 
   194  0DA5                     	;# 
   195  0DA6                     	;# 
   196  0DA7                     	;# 
   197  0DA7                     	;# 
   198  0DA8                     	;# 
   199  0DA9                     	;# 
   200  0DA9                     	;# 
   201  0DAA                     	;# 
   202  0DAB                     	;# 
   203  0DAC                     	;# 
   204  0DAC                     	;# 
   205  0DAD                     	;# 
   206  0DAD                     	;# 
   207  0DAE                     	;# 
   208  0DAF                     	;# 
   209  0DB0                     	;# 
   210  0DB1                     	;# 
   211  0DB1                     	;# 
   212  0DB2                     	;# 
   213  0DB3                     	;# 
   214  0DB3                     	;# 
   215  0DB4                     	;# 
   216  0DB5                     	;# 
   217  0DB5                     	;# 
   218  0DB6                     	;# 
   219  0DB7                     	;# 
   220  0DB7                     	;# 
   221  0DB8                     	;# 
   222  0DB9                     	;# 
   223  0DB9                     	;# 
   224  0DBA                     	;# 
   225  0DBB                     	;# 
   226  0DBC                     	;# 
   227  0DBC                     	;# 
   228  0DBD                     	;# 
   229  0DBD                     	;# 
   230  0DBE                     	;# 
   231  0DBF                     	;# 
   232  0DC0                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE8                     	;# 
   239  0FE9                     	;# 
   240  0FEA                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEE                     	;# 
   246  0FEF                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  008C                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  010C                     	;# 
   289  0111                     	;# 
   290  0112                     	;# 
   291  0115                     	;# 
   292  0116                     	;# 
   293  0117                     	;# 
   294  0118                     	;# 
   295  0119                     	;# 
   296  011D                     	;# 
   297  011D                     	;# 
   298  018C                     	;# 
   299  0191                     	;# 
   300  0191                     	;# 
   301  0192                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0194                     	;# 
   305  0195                     	;# 
   306  0196                     	;# 
   307  0197                     	;# 
   308  0199                     	;# 
   309  019A                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  028C                     	;# 
   318  030C                     	;# 
   319  038C                     	;# 
   320  0391                     	;# 
   321  0392                     	;# 
   322  0393                     	;# 
   323  0691                     	;# 
   324  0692                     	;# 
   325  0693                     	;# 
   326  0694                     	;# 
   327  0695                     	;# 
   328  0D8E                     	;# 
   329  0D8F                     	;# 
   330  0D90                     	;# 
   331  0D91                     	;# 
   332  0D91                     	;# 
   333  0D92                     	;# 
   334  0D93                     	;# 
   335  0D93                     	;# 
   336  0D94                     	;# 
   337  0D95                     	;# 
   338  0D95                     	;# 
   339  0D96                     	;# 
   340  0D97                     	;# 
   341  0D97                     	;# 
   342  0D98                     	;# 
   343  0D99                     	;# 
   344  0D99                     	;# 
   345  0D9A                     	;# 
   346  0D9B                     	;# 
   347  0D9C                     	;# 
   348  0D9C                     	;# 
   349  0D9D                     	;# 
   350  0D9D                     	;# 
   351  0D9E                     	;# 
   352  0D9F                     	;# 
   353  0DA0                     	;# 
   354  0DA1                     	;# 
   355  0DA1                     	;# 
   356  0DA2                     	;# 
   357  0DA3                     	;# 
   358  0DA3                     	;# 
   359  0DA4                     	;# 
   360  0DA5                     	;# 
   361  0DA5                     	;# 
   362  0DA6                     	;# 
   363  0DA7                     	;# 
   364  0DA7                     	;# 
   365  0DA8                     	;# 
   366  0DA9                     	;# 
   367  0DA9                     	;# 
   368  0DAA                     	;# 
   369  0DAB                     	;# 
   370  0DAC                     	;# 
   371  0DAC                     	;# 
   372  0DAD                     	;# 
   373  0DAD                     	;# 
   374  0DAE                     	;# 
   375  0DAF                     	;# 
   376  0DB0                     	;# 
   377  0DB1                     	;# 
   378  0DB1                     	;# 
   379  0DB2                     	;# 
   380  0DB3                     	;# 
   381  0DB3                     	;# 
   382  0DB4                     	;# 
   383  0DB5                     	;# 
   384  0DB5                     	;# 
   385  0DB6                     	;# 
   386  0DB7                     	;# 
   387  0DB7                     	;# 
   388  0DB8                     	;# 
   389  0DB9                     	;# 
   390  0DB9                     	;# 
   391  0DBA                     	;# 
   392  0DBB                     	;# 
   393  0DBC                     	;# 
   394  0DBC                     	;# 
   395  0DBD                     	;# 
   396  0DBD                     	;# 
   397  0DBE                     	;# 
   398  0DBF                     	;# 
   399  0DC0                     	;# 
   400  0FE4                     	;# 
   401  0FE5                     	;# 
   402  0FE6                     	;# 
   403  0FE7                     	;# 
   404  0FE8                     	;# 
   405  0FE8                     	;# 
   406  0FE9                     	;# 
   407  0FEA                     	;# 
   408  0FEA                     	;# 
   409  0FEB                     	;# 
   410  0FED                     	;# 
   411  0FEE                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  008C                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  010C                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011D                     	;# 
   464  011D                     	;# 
   465  018C                     	;# 
   466  0191                     	;# 
   467  0191                     	;# 
   468  0192                     	;# 
   469  0193                     	;# 
   470  0193                     	;# 
   471  0194                     	;# 
   472  0195                     	;# 
   473  0196                     	;# 
   474  0197                     	;# 
   475  0199                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019C                     	;# 
   480  019D                     	;# 
   481  019E                     	;# 
   482  019F                     	;# 
   483  020C                     	;# 
   484  028C                     	;# 
   485  030C                     	;# 
   486  038C                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0691                     	;# 
   491  0692                     	;# 
   492  0693                     	;# 
   493  0694                     	;# 
   494  0695                     	;# 
   495  0D8E                     	;# 
   496  0D8F                     	;# 
   497  0D90                     	;# 
   498  0D91                     	;# 
   499  0D91                     	;# 
   500  0D92                     	;# 
   501  0D93                     	;# 
   502  0D93                     	;# 
   503  0D94                     	;# 
   504  0D95                     	;# 
   505  0D95                     	;# 
   506  0D96                     	;# 
   507  0D97                     	;# 
   508  0D97                     	;# 
   509  0D98                     	;# 
   510  0D99                     	;# 
   511  0D99                     	;# 
   512  0D9A                     	;# 
   513  0D9B                     	;# 
   514  0D9C                     	;# 
   515  0D9C                     	;# 
   516  0D9D                     	;# 
   517  0D9D                     	;# 
   518  0D9E                     	;# 
   519  0D9F                     	;# 
   520  0DA0                     	;# 
   521  0DA1                     	;# 
   522  0DA1                     	;# 
   523  0DA2                     	;# 
   524  0DA3                     	;# 
   525  0DA3                     	;# 
   526  0DA4                     	;# 
   527  0DA5                     	;# 
   528  0DA5                     	;# 
   529  0DA6                     	;# 
   530  0DA7                     	;# 
   531  0DA7                     	;# 
   532  0DA8                     	;# 
   533  0DA9                     	;# 
   534  0DA9                     	;# 
   535  0DAA                     	;# 
   536  0DAB                     	;# 
   537  0DAC                     	;# 
   538  0DAC                     	;# 
   539  0DAD                     	;# 
   540  0DAD                     	;# 
   541  0DAE                     	;# 
   542  0DAF                     	;# 
   543  0DB0                     	;# 
   544  0DB1                     	;# 
   545  0DB1                     	;# 
   546  0DB2                     	;# 
   547  0DB3                     	;# 
   548  0DB3                     	;# 
   549  0DB4                     	;# 
   550  0DB5                     	;# 
   551  0DB5                     	;# 
   552  0DB6                     	;# 
   553  0DB7                     	;# 
   554  0DB7                     	;# 
   555  0DB8                     	;# 
   556  0DB9                     	;# 
   557  0DB9                     	;# 
   558  0DBA                     	;# 
   559  0DBB                     	;# 
   560  0DBC                     	;# 
   561  0DBC                     	;# 
   562  0DBD                     	;# 
   563  0DBD                     	;# 
   564  0DBE                     	;# 
   565  0DBF                     	;# 
   566  0DC0                     	;# 
   567  0FE4                     	;# 
   568  0FE5                     	;# 
   569  0FE6                     	;# 
   570  0FE7                     	;# 
   571  0FE8                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEA                     	;# 
   576  0FEB                     	;# 
   577  0FED                     	;# 
   578  0FEE                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  0011                     	;# 
   595  0012                     	;# 
   596  0013                     	;# 
   597  0015                     	;# 
   598  0016                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001B                     	;# 
   605  001C                     	;# 
   606  008C                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  009F                     	;# 
   622  010C                     	;# 
   623  0111                     	;# 
   624  0112                     	;# 
   625  0115                     	;# 
   626  0116                     	;# 
   627  0117                     	;# 
   628  0118                     	;# 
   629  0119                     	;# 
   630  011D                     	;# 
   631  011D                     	;# 
   632  018C                     	;# 
   633  0191                     	;# 
   634  0191                     	;# 
   635  0192                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0194                     	;# 
   639  0195                     	;# 
   640  0196                     	;# 
   641  0197                     	;# 
   642  0199                     	;# 
   643  019A                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019C                     	;# 
   647  019D                     	;# 
   648  019E                     	;# 
   649  019F                     	;# 
   650  020C                     	;# 
   651  028C                     	;# 
   652  030C                     	;# 
   653  038C                     	;# 
   654  0391                     	;# 
   655  0392                     	;# 
   656  0393                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0D8E                     	;# 
   663  0D8F                     	;# 
   664  0D90                     	;# 
   665  0D91                     	;# 
   666  0D91                     	;# 
   667  0D92                     	;# 
   668  0D93                     	;# 
   669  0D93                     	;# 
   670  0D94                     	;# 
   671  0D95                     	;# 
   672  0D95                     	;# 
   673  0D96                     	;# 
   674  0D97                     	;# 
   675  0D97                     	;# 
   676  0D98                     	;# 
   677  0D99                     	;# 
   678  0D99                     	;# 
   679  0D9A                     	;# 
   680  0D9B                     	;# 
   681  0D9C                     	;# 
   682  0D9C                     	;# 
   683  0D9D                     	;# 
   684  0D9D                     	;# 
   685  0D9E                     	;# 
   686  0D9F                     	;# 
   687  0DA0                     	;# 
   688  0DA1                     	;# 
   689  0DA1                     	;# 
   690  0DA2                     	;# 
   691  0DA3                     	;# 
   692  0DA3                     	;# 
   693  0DA4                     	;# 
   694  0DA5                     	;# 
   695  0DA5                     	;# 
   696  0DA6                     	;# 
   697  0DA7                     	;# 
   698  0DA7                     	;# 
   699  0DA8                     	;# 
   700  0DA9                     	;# 
   701  0DA9                     	;# 
   702  0DAA                     	;# 
   703  0DAB                     	;# 
   704  0DAC                     	;# 
   705  0DAC                     	;# 
   706  0DAD                     	;# 
   707  0DAD                     	;# 
   708  0DAE                     	;# 
   709  0DAF                     	;# 
   710  0DB0                     	;# 
   711  0DB1                     	;# 
   712  0DB1                     	;# 
   713  0DB2                     	;# 
   714  0DB3                     	;# 
   715  0DB3                     	;# 
   716  0DB4                     	;# 
   717  0DB5                     	;# 
   718  0DB5                     	;# 
   719  0DB6                     	;# 
   720  0DB7                     	;# 
   721  0DB7                     	;# 
   722  0DB8                     	;# 
   723  0DB9                     	;# 
   724  0DB9                     	;# 
   725  0DBA                     	;# 
   726  0DBB                     	;# 
   727  0DBC                     	;# 
   728  0DBC                     	;# 
   729  0DBD                     	;# 
   730  0DBD                     	;# 
   731  0DBE                     	;# 
   732  0DBF                     	;# 
   733  0DC0                     	;# 
   734  0FE4                     	;# 
   735  0FE5                     	;# 
   736  0FE6                     	;# 
   737  0FE7                     	;# 
   738  0FE8                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEA                     	;# 
   743  0FEB                     	;# 
   744  0FED                     	;# 
   745  0FEE                     	;# 
   746  0FEE                     	;# 
   747  0FEF                     	;# 
   748  0000                     	;# 
   749  0001                     	;# 
   750  0002                     	;# 
   751  0003                     	;# 
   752  0004                     	;# 
   753  0005                     	;# 
   754  0006                     	;# 
   755  0007                     	;# 
   756  0008                     	;# 
   757  0009                     	;# 
   758  000A                     	;# 
   759  000B                     	;# 
   760  000C                     	;# 
   761  0011                     	;# 
   762  0012                     	;# 
   763  0013                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  001A                     	;# 
   771  001B                     	;# 
   772  001C                     	;# 
   773  008C                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0098                     	;# 
   781  0099                     	;# 
   782  009A                     	;# 
   783  009B                     	;# 
   784  009B                     	;# 
   785  009C                     	;# 
   786  009D                     	;# 
   787  009E                     	;# 
   788  009F                     	;# 
   789  010C                     	;# 
   790  0111                     	;# 
   791  0112                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  011D                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  0191                     	;# 
   801  0191                     	;# 
   802  0192                     	;# 
   803  0193                     	;# 
   804  0193                     	;# 
   805  0194                     	;# 
   806  0195                     	;# 
   807  0196                     	;# 
   808  0197                     	;# 
   809  0199                     	;# 
   810  019A                     	;# 
   811  019B                     	;# 
   812  019B                     	;# 
   813  019C                     	;# 
   814  019D                     	;# 
   815  019E                     	;# 
   816  019F                     	;# 
   817  020C                     	;# 
   818  028C                     	;# 
   819  030C                     	;# 
   820  038C                     	;# 
   821  0391                     	;# 
   822  0392                     	;# 
   823  0393                     	;# 
   824  0691                     	;# 
   825  0692                     	;# 
   826  0693                     	;# 
   827  0694                     	;# 
   828  0695                     	;# 
   829  0D8E                     	;# 
   830  0D8F                     	;# 
   831  0D90                     	;# 
   832  0D91                     	;# 
   833  0D91                     	;# 
   834  0D92                     	;# 
   835  0D93                     	;# 
   836  0D93                     	;# 
   837  0D94                     	;# 
   838  0D95                     	;# 
   839  0D95                     	;# 
   840  0D96                     	;# 
   841  0D97                     	;# 
   842  0D97                     	;# 
   843  0D98                     	;# 
   844  0D99                     	;# 
   845  0D99                     	;# 
   846  0D9A                     	;# 
   847  0D9B                     	;# 
   848  0D9C                     	;# 
   849  0D9C                     	;# 
   850  0D9D                     	;# 
   851  0D9D                     	;# 
   852  0D9E                     	;# 
   853  0D9F                     	;# 
   854  0DA0                     	;# 
   855  0DA1                     	;# 
   856  0DA1                     	;# 
   857  0DA2                     	;# 
   858  0DA3                     	;# 
   859  0DA3                     	;# 
   860  0DA4                     	;# 
   861  0DA5                     	;# 
   862  0DA5                     	;# 
   863  0DA6                     	;# 
   864  0DA7                     	;# 
   865  0DA7                     	;# 
   866  0DA8                     	;# 
   867  0DA9                     	;# 
   868  0DA9                     	;# 
   869  0DAA                     	;# 
   870  0DAB                     	;# 
   871  0DAC                     	;# 
   872  0DAC                     	;# 
   873  0DAD                     	;# 
   874  0DAD                     	;# 
   875  0DAE                     	;# 
   876  0DAF                     	;# 
   877  0DB0                     	;# 
   878  0DB1                     	;# 
   879  0DB1                     	;# 
   880  0DB2                     	;# 
   881  0DB3                     	;# 
   882  0DB3                     	;# 
   883  0DB4                     	;# 
   884  0DB5                     	;# 
   885  0DB5                     	;# 
   886  0DB6                     	;# 
   887  0DB7                     	;# 
   888  0DB7                     	;# 
   889  0DB8                     	;# 
   890  0DB9                     	;# 
   891  0DB9                     	;# 
   892  0DBA                     	;# 
   893  0DBB                     	;# 
   894  0DBC                     	;# 
   895  0DBC                     	;# 
   896  0DBD                     	;# 
   897  0DBD                     	;# 
   898  0DBE                     	;# 
   899  0DBF                     	;# 
   900  0DC0                     	;# 
   901  0FE4                     	;# 
   902  0FE5                     	;# 
   903  0FE6                     	;# 
   904  0FE7                     	;# 
   905  0FE8                     	;# 
   906  0FE8                     	;# 
   907  0FE9                     	;# 
   908  0FEA                     	;# 
   909  0FEA                     	;# 
   910  0FEB                     	;# 
   911  0FED                     	;# 
   912  0FEE                     	;# 
   913  0FEE                     	;# 
   914  0FEF                     	;# 
   915  0000                     	;# 
   916  0001                     	;# 
   917  0002                     	;# 
   918  0003                     	;# 
   919  0004                     	;# 
   920  0005                     	;# 
   921  0006                     	;# 
   922  0007                     	;# 
   923  0008                     	;# 
   924  0009                     	;# 
   925  000A                     	;# 
   926  000B                     	;# 
   927  000C                     	;# 
   928  0011                     	;# 
   929  0012                     	;# 
   930  0013                     	;# 
   931  0015                     	;# 
   932  0016                     	;# 
   933  0016                     	;# 
   934  0017                     	;# 
   935  0018                     	;# 
   936  0019                     	;# 
   937  001A                     	;# 
   938  001B                     	;# 
   939  001C                     	;# 
   940  008C                     	;# 
   941  0091                     	;# 
   942  0092                     	;# 
   943  0093                     	;# 
   944  0095                     	;# 
   945  0096                     	;# 
   946  0097                     	;# 
   947  0098                     	;# 
   948  0099                     	;# 
   949  009A                     	;# 
   950  009B                     	;# 
   951  009B                     	;# 
   952  009C                     	;# 
   953  009D                     	;# 
   954  009E                     	;# 
   955  009F                     	;# 
   956  010C                     	;# 
   957  0111                     	;# 
   958  0112                     	;# 
   959  0115                     	;# 
   960  0116                     	;# 
   961  0117                     	;# 
   962  0118                     	;# 
   963  0119                     	;# 
   964  011D                     	;# 
   965  011D                     	;# 
   966  018C                     	;# 
   967  0191                     	;# 
   968  0191                     	;# 
   969  0192                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0194                     	;# 
   973  0195                     	;# 
   974  0196                     	;# 
   975  0197                     	;# 
   976  0199                     	;# 
   977  019A                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019C                     	;# 
   981  019D                     	;# 
   982  019E                     	;# 
   983  019F                     	;# 
   984  020C                     	;# 
   985  028C                     	;# 
   986  030C                     	;# 
   987  038C                     	;# 
   988  0391                     	;# 
   989  0392                     	;# 
   990  0393                     	;# 
   991  0691                     	;# 
   992  0692                     	;# 
   993  0693                     	;# 
   994  0694                     	;# 
   995  0695                     	;# 
   996  0D8E                     	;# 
   997  0D8F                     	;# 
   998  0D90                     	;# 
   999  0D91                     	;# 
  1000  0D91                     	;# 
  1001  0D92                     	;# 
  1002  0D93                     	;# 
  1003  0D93                     	;# 
  1004  0D94                     	;# 
  1005  0D95                     	;# 
  1006  0D95                     	;# 
  1007  0D96                     	;# 
  1008  0D97                     	;# 
  1009  0D97                     	;# 
  1010  0D98                     	;# 
  1011  0D99                     	;# 
  1012  0D99                     	;# 
  1013  0D9A                     	;# 
  1014  0D9B                     	;# 
  1015  0D9C                     	;# 
  1016  0D9C                     	;# 
  1017  0D9D                     	;# 
  1018  0D9D                     	;# 
  1019  0D9E                     	;# 
  1020  0D9F                     	;# 
  1021  0DA0                     	;# 
  1022  0DA1                     	;# 
  1023  0DA1                     	;# 
  1024  0DA2                     	;# 
  1025  0DA3                     	;# 
  1026  0DA3                     	;# 
  1027  0DA4                     	;# 
  1028  0DA5                     	;# 
  1029  0DA5                     	;# 
  1030  0DA6                     	;# 
  1031  0DA7                     	;# 
  1032  0DA7                     	;# 
  1033  0DA8                     	;# 
  1034  0DA9                     	;# 
  1035  0DA9                     	;# 
  1036  0DAA                     	;# 
  1037  0DAB                     	;# 
  1038  0DAC                     	;# 
  1039  0DAC                     	;# 
  1040  0DAD                     	;# 
  1041  0DAD                     	;# 
  1042  0DAE                     	;# 
  1043  0DAF                     	;# 
  1044  0DB0                     	;# 
  1045  0DB1                     	;# 
  1046  0DB1                     	;# 
  1047  0DB2                     	;# 
  1048  0DB3                     	;# 
  1049  0DB3                     	;# 
  1050  0DB4                     	;# 
  1051  0DB5                     	;# 
  1052  0DB5                     	;# 
  1053  0DB6                     	;# 
  1054  0DB7                     	;# 
  1055  0DB7                     	;# 
  1056  0DB8                     	;# 
  1057  0DB9                     	;# 
  1058  0DB9                     	;# 
  1059  0DBA                     	;# 
  1060  0DBB                     	;# 
  1061  0DBC                     	;# 
  1062  0DBC                     	;# 
  1063  0DBD                     	;# 
  1064  0DBD                     	;# 
  1065  0DBE                     	;# 
  1066  0DBF                     	;# 
  1067  0DC0                     	;# 
  1068  0FE4                     	;# 
  1069  0FE5                     	;# 
  1070  0FE6                     	;# 
  1071  0FE7                     	;# 
  1072  0FE8                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEA                     	;# 
  1077  0FEB                     	;# 
  1078  0FED                     	;# 
  1079  0FEE                     	;# 
  1080  0FEE                     	;# 
  1081  0FEF                     	;# 
  1082                           
  1083 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1084  0000                     
  1085 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1086  0000                     
  1087 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1088  0000                     
  1089                           	psect	stringtext1
  1090  075C                     __pstringtext1:	
  1091  075C                     main@DATA_MULT:	
  1092  075C  3416               	retlw	22
  1093  075D  34FB               	retlw	251
  1094  075E  347A               	retlw	122
  1095  075F  34C1               	retlw	193
  1096  0760                     __end_ofmain@DATA_MULT:	
  1097                           
  1098                           	psect	stringtext2
  1099  0760                     __pstringtext2:	
  1100  0760                     main@DATA_OFFSET:	
  1101  0760  3400               	retlw	0
  1102  0761  343E               	retlw	62
  1103  0762  3478               	retlw	120
  1104  0763  3447               	retlw	71
  1105  0764                     __end_ofmain@DATA_OFFSET:	
  1106                           
  1107                           	psect	stringtext3
  1108  0764                     __pstringtext3:	
  1109  0764                     _DATA_MULT:	
  1110  0764  3416               	retlw	22
  1111  0765  34FB               	retlw	251
  1112  0766  347A               	retlw	122
  1113  0767  34C1               	retlw	193
  1114  0768                     __end_of_DATA_MULT:	
  1115                           
  1116                           	psect	stringtext4
  1117  0768                     __pstringtext4:	
  1118  0768                     _DATA_OFFSET:	
  1119  0768  3400               	retlw	0
  1120  0769  343E               	retlw	62
  1121  076A  3478               	retlw	120
  1122  076B  3447               	retlw	71
  1123  076C                     __end_of_DATA_OFFSET:	
  1124                           
  1125                           	psect	nvBANK0
  1126  006E                     __pnvBANK0:	
  1127  006E                     _timer1ReloadVal:	
  1128  006E                     	ds	2
  1129                           
  1130                           	psect	nvBANK1
  1131  00E0                     __pnvBANK1:	
  1132  00E0                     _EUSART_ErrorHandler:	
  1133  00E0                     	ds	2
  1134  00E2                     _EUSART_OverrunErrorHandler:	
  1135  00E2                     	ds	2
  1136  00E4                     _EUSART_FramingErrorHandler:	
  1137  00E4                     	ds	2
  1138  00E6                     _TMR1_InterruptHandler:	
  1139  00E6                     	ds	2
  1140  0006                     _FSR1L	set	6
  1141  0007                     _FSR1H	set	7
  1142  0004                     _FSR0L	set	4
  1143  0005                     _FSR0H	set	5
  1144  0003                     _STATUS	set	3
  1145  0008                     _BSR	set	8
  1146  0009                     _WREG	set	9
  1147  000B                     _INTCONbits	set	11
  1148  0019                     _T1GCONbits	set	25
  1149  0018                     _T1CONbits	set	24
  1150  0018                     _T1CON	set	24
  1151  0011                     _PIR1bits	set	17
  1152  0016                     _TMR1L	set	22
  1153  0017                     _TMR1H	set	23
  1154  0019                     _T1GCON	set	25
  1155  0095                     _OPTION_REGbits	set	149
  1156  008C                     _TRISA	set	140
  1157  0097                     _WDTCON	set	151
  1158  0098                     _OSCTUNE	set	152
  1159  0099                     _OSCCON	set	153
  1160  0091                     _PIE1bits	set	145
  1161  011D                     _APFCON	set	285
  1162  010C                     _LATA	set	268
  1163  0116                     _BORCON	set	278
  1164  010C                     _LATAbits	set	268
  1165  018C                     _ANSELA	set	396
  1166  0199                     _RCREG	set	409
  1167  019D                     _RCSTAbits	set	413
  1168  019C                     _SPBRGH	set	412
  1169  019B                     _SPBRGL	set	411
  1170  019E                     _TXSTA	set	414
  1171  019D                     _RCSTA	set	413
  1172  019F                     _BAUDCON	set	415
  1173  020C                     _WPUA	set	524
  1174  028C                     _ODCONA	set	652
  1175  030C                     _SLRCONA	set	780
  1176                           
  1177                           ; #config settings
  1178  0000                     
  1179                           	psect	cinit
  1180  003E                     start_initialization:	
  1181  003E                     __initialization:	
  1182                           
  1183                           ; Clear objects allocated to COMMON
  1184  003E  01F6               	clrf	__pbssCOMMON& (0+127)
  1185  003F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1186  0040  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1187  0041  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1188                           
  1189                           ; Clear objects allocated to BANK0
  1190  0042  0020               	movlb	0	; select bank0
  1191  0043  01E8               	clrf	__pbssBANK0& (0+127)
  1192  0044  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1193  0045  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1194  0046  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1195  0047  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1196  0048  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  1197                           
  1198                           ; Clear objects allocated to BANK1
  1199  0049  30A0               	movlw	low __pbssBANK1
  1200  004A  0084               	movwf	4
  1201  004B  3000               	movlw	high __pbssBANK1
  1202  004C  0085               	movwf	5
  1203  004D  3040               	movlw	64
  1204  004E  2733               	fcall	clear_ram0
  1205  004F                     end_of_initialization:	
  1206                           ;End of C runtime variable initialization code
  1207                           
  1208  004F                     __end_of__initialization:	
  1209  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1210  0050  0020               	movlb	0
  1211  0051  2F16               	ljmp	_main	;jump to C main() function
  1212                           
  1213                           	psect	bssCOMMON
  1214  0076                     __pbssCOMMON:	
  1215  0076                     _saveSTATUS:	
  1216  0076                     	ds	1
  1217  0077                     _saveBSR:	
  1218  0077                     	ds	1
  1219  0078                     _saveWREG:	
  1220  0078                     	ds	1
  1221  0079                     _ppmState:	
  1222  0079                     	ds	1
  1223                           
  1224                           	psect	bssBANK0
  1225  0068                     __pbssBANK0:	
  1226  0068                     _saveFSR1L:	
  1227  0068                     	ds	1
  1228  0069                     _saveFSR1H:	
  1229  0069                     	ds	1
  1230  006A                     _saveFSR0L:	
  1231  006A                     	ds	1
  1232  006B                     _saveFSR0H:	
  1233  006B                     	ds	1
  1234  006C                     _eusartRxLastError:	
  1235  006C                     	ds	1
  1236  006D                     _uartLoadState:	
  1237  006D                     	ds	1
  1238                           
  1239                           	psect	bssBANK1
  1240  00A0                     __pbssBANK1:	
  1241  00A0                     _ppmData:	
  1242  00A0                     	ds	42
  1243  00CA                     _uartData:	
  1244  00CA                     	ds	22
  1245                           
  1246                           	psect	clrtext
  1247  0733                     clear_ram0:	
  1248                           ;	Called with FSR0 containing the base address, and
  1249                           ;	WREG with the size to clear
  1250                           
  1251  0733  0064               	clrwdt	;clear the watchdog before getting into this loop
  1252  0734                     clrloop0:	
  1253  0734  0180               	clrf	0	;clear RAM location pointed to by FSR
  1254  0735  3101               	addfsr 0,1
  1255  0736  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1256  0737  2F34               	goto	clrloop0	;have we reached the end yet?
  1257  0738  3400               	retlw	0	;all done for this memory range, return
  1258                           
  1259                           	psect	cstackBANK1
  1260  00E8                     __pcstackBANK1:	
  1261  00E8                     ??_UARTUpdatePPM:	
  1262                           
  1263                           ; 1 bytes @ 0x0
  1264  00E8                     	ds	4
  1265  00EC                     ??_LoadByte:	
  1266                           
  1267                           ; 1 bytes @ 0x4
  1268  00EC                     	ds	1
  1269  00ED                     LoadByte@byte:	
  1270                           
  1271                           ; 1 bytes @ 0x5
  1272  00ED                     	ds	1
  1273                           
  1274                           	psect	cstackCOMMON
  1275  0070                     __pcstackCOMMON:	
  1276  0070                     ?_TMR1_DefaultInterruptHandler:	
  1277  0070                     ?_EUSART_Read:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_SYSTEM_Initialize:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_EUSART_is_rx_ready:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_PIN_MANAGER_Initialize:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_OSCILLATOR_Initialize:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_WDT_Initialize:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_TMR1_Initialize:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_TMR1_WriteTimer:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_TMR1_ISR:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_Init_PPM_Data:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_Init_UART_Data:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_UARTUpdatePPM:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_LoadByte:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_main:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_EUSART_Initialize:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_INTERRUPT_InterruptManager:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     TMR1_WriteTimer@timerVal:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328                           
  1329                           ; 2 bytes @ 0x0
  1330  0070                     	ds	2
  1331  0072                     ??_TMR1_DefaultInterruptHandler:	
  1332  0072                     ??_TMR1_WriteTimer:	
  1333                           ; 1 bytes @ 0x2
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x2
  1337  0072                     	ds	1
  1338  0073                     ??_TMR1_ISR:	
  1339  0073                     ??_INTERRUPT_InterruptManager:	
  1340                           ; 1 bytes @ 0x3
  1341                           
  1342                           
  1343                           ; 1 bytes @ 0x3
  1344  0073                     	ds	1
  1345  0074                     ?_TMR1_SetInterruptHandler:	
  1346  0074                     ??_EUSART_Read:	
  1347                           ; 1 bytes @ 0x4
  1348                           
  1349  0074                     ??_EUSART_is_rx_ready:	
  1350                           ; 1 bytes @ 0x4
  1351                           
  1352  0074                     ?_EUSART_SetFramingErrorHandler:	
  1353                           ; 1 bytes @ 0x4
  1354                           
  1355  0074                     ?_EUSART_SetOverrunErrorHandler:	
  1356                           ; 1 bytes @ 0x4
  1357                           
  1358  0074                     ?_EUSART_SetErrorHandler:	
  1359                           ; 1 bytes @ 0x4
  1360                           
  1361  0074                     ??_PIN_MANAGER_Initialize:	
  1362                           ; 1 bytes @ 0x4
  1363                           
  1364  0074                     ??_OSCILLATOR_Initialize:	
  1365                           ; 1 bytes @ 0x4
  1366                           
  1367  0074                     ??_WDT_Initialize:	
  1368                           ; 1 bytes @ 0x4
  1369                           
  1370  0074                     ??_Init_PPM_Data:	
  1371                           ; 1 bytes @ 0x4
  1372                           
  1373  0074                     ??_Init_UART_Data:	
  1374                           ; 1 bytes @ 0x4
  1375                           
  1376  0074                     ?__Umul8_16:	
  1377                           ; 1 bytes @ 0x4
  1378                           
  1379  0074                     __Umul8_16@multiplicand:	
  1380                           ; 2 bytes @ 0x4
  1381                           
  1382  0074                     TMR1_SetInterruptHandler@InterruptHandler:	
  1383                           ; 1 bytes @ 0x4
  1384                           
  1385  0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1386                           ; 2 bytes @ 0x4
  1387                           
  1388  0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1389                           ; 2 bytes @ 0x4
  1390                           
  1391  0074                     EUSART_SetErrorHandler@interruptHandler:	
  1392                           ; 2 bytes @ 0x4
  1393                           
  1394                           
  1395                           ; 2 bytes @ 0x4
  1396  0074                     	ds	1
  1397  0075                     Init_UART_Data@i:	
  1398                           
  1399                           ; 1 bytes @ 0x5
  1400  0075                     	ds	1
  1401  0076                     ??_TMR1_SetInterruptHandler:	
  1402  0076                     ??_SYSTEM_Initialize:	
  1403                           ; 1 bytes @ 0x6
  1404                           
  1405  0076                     ??_EUSART_SetFramingErrorHandler:	
  1406                           ; 1 bytes @ 0x6
  1407                           
  1408  0076                     ??_EUSART_SetOverrunErrorHandler:	
  1409                           ; 1 bytes @ 0x6
  1410                           
  1411  0076                     ??_EUSART_SetErrorHandler:	
  1412                           ; 1 bytes @ 0x6
  1413                           
  1414  0076                     ??_TMR1_Initialize:	
  1415                           ; 1 bytes @ 0x6
  1416                           
  1417  0076                     ??_main:	
  1418                           ; 1 bytes @ 0x6
  1419                           
  1420  0076                     ??_EUSART_Initialize:	
  1421                           ; 1 bytes @ 0x6
  1422                           
  1423                           
  1424                           	psect	cstackBANK0
  1425  0020                     __pcstackBANK0:	
  1426                           ; 1 bytes @ 0x6
  1427                           
  1428  0020                     ??__Umul8_16:	
  1429  0020                     ?___xxtofl:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0020                     Init_PPM_Data@i:	
  1433                           ; 4 bytes @ 0x0
  1434                           
  1435  0020                     ___xxtofl@val:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438                           
  1439                           ; 4 bytes @ 0x0
  1440  0020                     	ds	2
  1441  0022                     __Umul8_16@product:	
  1442                           
  1443                           ; 2 bytes @ 0x2
  1444  0022                     	ds	2
  1445  0024                     ??___xxtofl:	
  1446  0024                     __Umul8_16@word_mpld:	
  1447                           ; 1 bytes @ 0x4
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x4
  1451  0024                     	ds	2
  1452  0026                     __Umul8_16@multiplier:	
  1453                           
  1454                           ; 1 bytes @ 0x6
  1455  0026                     	ds	2
  1456  0028                     ___xxtofl@sign:	
  1457                           
  1458                           ; 1 bytes @ 0x8
  1459  0028                     	ds	1
  1460  0029                     ___xxtofl@exp:	
  1461                           
  1462                           ; 1 bytes @ 0x9
  1463  0029                     	ds	1
  1464  002A                     ___xxtofl@arg:	
  1465                           
  1466                           ; 4 bytes @ 0xA
  1467  002A                     	ds	4
  1468  002E                     ?___flmul:	
  1469  002E                     ___flmul@b:	
  1470                           ; 4 bytes @ 0xE
  1471                           
  1472                           
  1473                           ; 4 bytes @ 0xE
  1474  002E                     	ds	4
  1475  0032                     ___flmul@a:	
  1476                           
  1477                           ; 4 bytes @ 0x12
  1478  0032                     	ds	4
  1479  0036                     ??___flmul:	
  1480                           
  1481                           ; 1 bytes @ 0x16
  1482  0036                     	ds	5
  1483  003B                     ___flmul@sign:	
  1484                           
  1485                           ; 1 bytes @ 0x1B
  1486  003B                     	ds	1
  1487  003C                     ___flmul@aexp:	
  1488                           
  1489                           ; 1 bytes @ 0x1C
  1490  003C                     	ds	1
  1491  003D                     ___flmul@grs:	
  1492                           
  1493                           ; 4 bytes @ 0x1D
  1494  003D                     	ds	4
  1495  0041                     ___flmul@bexp:	
  1496                           
  1497                           ; 1 bytes @ 0x21
  1498  0041                     	ds	1
  1499  0042                     ___flmul@prod:	
  1500                           
  1501                           ; 4 bytes @ 0x22
  1502  0042                     	ds	4
  1503  0046                     ___flmul@temp:	
  1504                           
  1505                           ; 2 bytes @ 0x26
  1506  0046                     	ds	2
  1507  0048                     ?___fladd:	
  1508  0048                     ___fladd@b:	
  1509                           ; 4 bytes @ 0x28
  1510                           
  1511                           
  1512                           ; 4 bytes @ 0x28
  1513  0048                     	ds	4
  1514  004C                     ___fladd@a:	
  1515                           
  1516                           ; 4 bytes @ 0x2C
  1517  004C                     	ds	4
  1518  0050                     ??___fladd:	
  1519                           
  1520                           ; 1 bytes @ 0x30
  1521  0050                     	ds	8
  1522  0058                     ___fladd@signs:	
  1523                           
  1524                           ; 1 bytes @ 0x38
  1525  0058                     	ds	1
  1526  0059                     ___fladd@aexp:	
  1527                           
  1528                           ; 1 bytes @ 0x39
  1529  0059                     	ds	1
  1530  005A                     ___fladd@bexp:	
  1531                           
  1532                           ; 1 bytes @ 0x3A
  1533  005A                     	ds	1
  1534  005B                     ___fladd@grs:	
  1535                           
  1536                           ; 1 bytes @ 0x3B
  1537  005B                     	ds	1
  1538  005C                     ?___fltol:	
  1539  005C                     ___fltol@f1:	
  1540                           ; 4 bytes @ 0x3C
  1541                           
  1542                           
  1543                           ; 4 bytes @ 0x3C
  1544  005C                     	ds	4
  1545  0060                     ??___fltol:	
  1546                           
  1547                           ; 1 bytes @ 0x40
  1548  0060                     	ds	5
  1549  0065                     ___fltol@sign1:	
  1550                           
  1551                           ; 1 bytes @ 0x45
  1552  0065                     	ds	1
  1553  0066                     ___fltol@exp1:	
  1554                           
  1555                           ; 1 bytes @ 0x46
  1556  0066                     	ds	1
  1557  0067                     UARTUpdatePPM@i:	
  1558                           
  1559                           ; 1 bytes @ 0x47
  1560  0067                     	ds	1
  1561                           
  1562                           	psect	maintext
  1563  0716                     __pmaintext:	
  1564 ;;
  1565 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1566 ;;
  1567 ;; *************** function _main *****************
  1568 ;; Defined at:
  1569 ;;		line 193 in file "main.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : B1F/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1583 ;;      Params:         0       0       0       0
  1584 ;;      Locals:         0       0       0       0
  1585 ;;      Temps:          0       0       0       0
  1586 ;;      Totals:         0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels required when called:    8
  1589 ;; This function calls:
  1590 ;;		_EUSART_is_rx_ready
  1591 ;;		_Init_PPM_Data
  1592 ;;		_Init_UART_Data
  1593 ;;		_LoadByte
  1594 ;;		_SYSTEM_Initialize
  1595 ;; This function is called by:
  1596 ;;		Startup code after reset
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _main
  1602  0716                     _main:	
  1603                           
  1604                           ;main.c: 196: SYSTEM_Initialize();
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1608  0716  2739               	fcall	_SYSTEM_Initialize
  1609                           
  1610                           ;main.c: 197: Init_UART_Data();
  1611  0717  26B6               	fcall	_Init_UART_Data
  1612                           
  1613                           ;main.c: 198: Init_PPM_Data();
  1614  0718  2659               	fcall	_Init_PPM_Data
  1615                           
  1616                           ;main.c: 204: (INTCONbits.GIE = 1);
  1617  0719  178B               	bsf	11,7	;volatile
  1618                           
  1619                           ;main.c: 207: (INTCONbits.PEIE = 1);
  1620  071A  170B               	bsf	11,6	;volatile
  1621  071B                     l152:	
  1622                           ;main.c: 215: while (1)
  1623                           
  1624                           
  1625                           ;main.c: 216: {;main.c: 218: if(EUSART_is_rx_ready() == 1) {
  1626  071B  2757               	fcall	_EUSART_is_rx_ready
  1627  071C  3A01               	xorlw	1
  1628  071D  1D03               	skipz
  1629  071E  2F1B               	goto	l152
  1630                           
  1631                           ;main.c: 219: LoadByte();
  1632  071F  24E4               	fcall	_LoadByte
  1633  0720  2F1B               	goto	l152
  1634  0721                     __end_of_main:	
  1635                           
  1636                           	psect	text1
  1637  0739                     __ptext1:	
  1638 ;; *************** function _SYSTEM_Initialize *****************
  1639 ;; Defined at:
  1640 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1654 ;;      Params:         0       0       0       0
  1655 ;;      Locals:         0       0       0       0
  1656 ;;      Temps:          0       0       0       0
  1657 ;;      Totals:         0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    6
  1661 ;; This function calls:
  1662 ;;		_EUSART_Initialize
  1663 ;;		_OSCILLATOR_Initialize
  1664 ;;		_PIN_MANAGER_Initialize
  1665 ;;		_TMR1_Initialize
  1666 ;;		_WDT_Initialize
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _SYSTEM_Initialize
  1674  0739                     _SYSTEM_Initialize:	
  1675                           
  1676                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1680  0739  26E1               	fcall	_PIN_MANAGER_Initialize
  1681                           
  1682                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1683  073A  272C               	fcall	_OSCILLATOR_Initialize
  1684                           
  1685                           ;mcc.c: 55: WDT_Initialize();
  1686  073B  276C               	fcall	_WDT_Initialize
  1687                           
  1688                           ;mcc.c: 56: TMR1_Initialize();
  1689  073C  26CC               	fcall	_TMR1_Initialize
  1690                           
  1691                           ;mcc.c: 57: EUSART_Initialize();
  1692  073D  269A               	fcall	_EUSART_Initialize
  1693  073E  0008               	return
  1694  073F                     __end_of_SYSTEM_Initialize:	
  1695                           
  1696                           	psect	text2
  1697  076C                     __ptext2:	
  1698 ;; *************** function _WDT_Initialize *****************
  1699 ;; Defined at:
  1700 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1714 ;;      Params:         0       0       0       0
  1715 ;;      Locals:         0       0       0       0
  1716 ;;      Temps:          0       0       0       0
  1717 ;;      Totals:         0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    4
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_SYSTEM_Initialize
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function _WDT_Initialize
  1730  076C                     _WDT_Initialize:	
  1731                           
  1732                           ;mcc.c: 73: WDTCON = 0x16;
  1733                           
  1734                           ;incstack = 0
  1735                           ; Regs used in _WDT_Initialize: [wreg]
  1736  076C  3016               	movlw	22
  1737  076D  0021               	movlb	1	; select bank1
  1738  076E  0097               	movwf	23	;volatile
  1739  076F  0008               	return
  1740  0770                     __end_of_WDT_Initialize:	
  1741                           
  1742                           	psect	text3
  1743  06CC                     __ptext3:	
  1744 ;; *************** function _TMR1_Initialize *****************
  1745 ;; Defined at:
  1746 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1760 ;;      Params:         0       0       0       0
  1761 ;;      Locals:         0       0       0       0
  1762 ;;      Temps:          0       0       0       0
  1763 ;;      Totals:         0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    5
  1767 ;; This function calls:
  1768 ;;		_TMR1_SetInterruptHandler
  1769 ;; This function is called by:
  1770 ;;		_SYSTEM_Initialize
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _TMR1_Initialize
  1776  06CC                     _TMR1_Initialize:	
  1777                           
  1778                           ;tmr1.c: 101: T1GCON = 0x00;
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1782  06CC  0020               	movlb	0	; select bank0
  1783  06CD  0199               	clrf	25	;volatile
  1784                           
  1785                           ;tmr1.c: 104: TMR1H = 0x06;
  1786  06CE  3006               	movlw	6
  1787  06CF  0097               	movwf	23	;volatile
  1788                           
  1789                           ;tmr1.c: 107: TMR1L = 0x00;
  1790  06D0  0196               	clrf	22	;volatile
  1791                           
  1792                           ;tmr1.c: 110: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1793  06D1  0817               	movf	23,w	;volatile
  1794  06D2  00EF               	movwf	_timer1ReloadVal+1	;volatile
  1795  06D3  0816               	movf	22,w	;volatile
  1796  06D4  00EE               	movwf	_timer1ReloadVal	;volatile
  1797                           
  1798                           ;tmr1.c: 113: PIR1bits.TMR1IF = 0;
  1799  06D5  1011               	bcf	17,0	;volatile
  1800                           
  1801                           ;tmr1.c: 116: PIE1bits.TMR1IE = 1;
  1802  06D6  0021               	movlb	1	; select bank1
  1803  06D7  1411               	bsf	17,0	;volatile
  1804                           
  1805                           ;tmr1.c: 119: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1806  06D8  3019               	movlw	low _TMR1_DefaultInterruptHandler
  1807  06D9  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1808  06DA  3006               	movlw	high _TMR1_DefaultInterruptHandler
  1809  06DB  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1810  06DC  273F               	fcall	_TMR1_SetInterruptHandler
  1811                           
  1812                           ;tmr1.c: 122: T1CON = 0x41;
  1813  06DD  3041               	movlw	65
  1814  06DE  0020               	movlb	0	; select bank0
  1815  06DF  0098               	movwf	24	;volatile
  1816  06E0  0008               	return
  1817  06E1                     __end_of_TMR1_Initialize:	
  1818                           
  1819                           	psect	text4
  1820  073F                     __ptext4:	
  1821 ;; *************** function _TMR1_SetInterruptHandler *****************
  1822 ;; Defined at:
  1823 ;;		line 203 in file "mcc_generated_files/tmr1.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  1826 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1838 ;;      Params:         2       0       0       0
  1839 ;;      Locals:         0       0       0       0
  1840 ;;      Temps:          0       0       0       0
  1841 ;;      Totals:         2       0       0       0
  1842 ;;Total ram usage:        2 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    4
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_TMR1_Initialize
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _TMR1_SetInterruptHandler
  1854  073F                     _TMR1_SetInterruptHandler:	
  1855                           
  1856                           ;tmr1.c: 204: TMR1_InterruptHandler = InterruptHandler;
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1860  073F  0875               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1861  0740  0021               	movlb	1	; select bank1
  1862  0741  00E7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  1863  0742  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1864  0743  00E6               	movwf	_TMR1_InterruptHandler^(0+128)
  1865  0744  0008               	return
  1866  0745                     __end_of_TMR1_SetInterruptHandler:	
  1867                           
  1868                           	psect	text5
  1869  06E1                     __ptext5:	
  1870 ;; *************** function _PIN_MANAGER_Initialize *****************
  1871 ;; Defined at:
  1872 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1886 ;;      Params:         0       0       0       0
  1887 ;;      Locals:         0       0       0       0
  1888 ;;      Temps:          0       0       0       0
  1889 ;;      Totals:         0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    4
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_SYSTEM_Initialize
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _PIN_MANAGER_Initialize
  1902  06E1                     _PIN_MANAGER_Initialize:	
  1903                           
  1904                           ;pin_manager.c: 60: LATA = 0x00;
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1908  06E1  0022               	movlb	2	; select bank2
  1909  06E2  018C               	clrf	12	;volatile
  1910                           
  1911                           ;pin_manager.c: 65: TRISA = 0x2F;
  1912  06E3  302F               	movlw	47
  1913  06E4  0021               	movlb	1	; select bank1
  1914  06E5  008C               	movwf	12	;volatile
  1915                           
  1916                           ;pin_manager.c: 70: ANSELA = 0x15;
  1917  06E6  3015               	movlw	21
  1918  06E7  0023               	movlb	3	; select bank3
  1919  06E8  008C               	movwf	12	;volatile
  1920                           
  1921                           ;pin_manager.c: 75: WPUA = 0x00;
  1922  06E9  0024               	movlb	4	; select bank4
  1923  06EA  018C               	clrf	12	;volatile
  1924                           
  1925                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 1;
  1926  06EB  0021               	movlb	1	; select bank1
  1927  06EC  1795               	bsf	21,7	;volatile
  1928                           
  1929                           ;pin_manager.c: 81: ODCONA = 0x00;
  1930  06ED  0025               	movlb	5	; select bank5
  1931  06EE  018C               	clrf	12	;volatile
  1932                           
  1933                           ;pin_manager.c: 86: SLRCONA = 0x37;
  1934  06EF  3037               	movlw	55
  1935  06F0  0026               	movlb	6	; select bank6
  1936  06F1  008C               	movwf	12	;volatile
  1937                           
  1938                           ;pin_manager.c: 91: APFCON = 0x00;
  1939  06F2  0022               	movlb	2	; select bank2
  1940  06F3  019D               	clrf	29	;volatile
  1941  06F4  0008               	return
  1942  06F5                     __end_of_PIN_MANAGER_Initialize:	
  1943                           
  1944                           	psect	text6
  1945  072C                     __ptext6:	
  1946 ;; *************** function _OSCILLATOR_Initialize *****************
  1947 ;; Defined at:
  1948 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1962 ;;      Params:         0       0       0       0
  1963 ;;      Locals:         0       0       0       0
  1964 ;;      Temps:          0       0       0       0
  1965 ;;      Totals:         0       0       0       0
  1966 ;;Total ram usage:        0 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    4
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		_SYSTEM_Initialize
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _OSCILLATOR_Initialize
  1978  072C                     _OSCILLATOR_Initialize:	
  1979                           
  1980                           ;mcc.c: 63: OSCCON = 0x6A;
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1984  072C  306A               	movlw	106
  1985  072D  0021               	movlb	1	; select bank1
  1986  072E  0099               	movwf	25	;volatile
  1987                           
  1988                           ;mcc.c: 65: OSCTUNE = 0x00;
  1989  072F  0198               	clrf	24	;volatile
  1990                           
  1991                           ;mcc.c: 67: BORCON = 0x00;
  1992  0730  0022               	movlb	2	; select bank2
  1993  0731  0196               	clrf	22	;volatile
  1994  0732  0008               	return
  1995  0733                     __end_of_OSCILLATOR_Initialize:	
  1996                           
  1997                           	psect	text7
  1998  069A                     __ptext7:	
  1999 ;; *************** function _EUSART_Initialize *****************
  2000 ;; Defined at:
  2001 ;;		line 65 in file "mcc_generated_files/eusart.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2015 ;;      Params:         0       0       0       0
  2016 ;;      Locals:         0       0       0       0
  2017 ;;      Temps:          0       0       0       0
  2018 ;;      Totals:         0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    5
  2022 ;; This function calls:
  2023 ;;		_EUSART_SetErrorHandler
  2024 ;;		_EUSART_SetFramingErrorHandler
  2025 ;;		_EUSART_SetOverrunErrorHandler
  2026 ;; This function is called by:
  2027 ;;		_SYSTEM_Initialize
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _EUSART_Initialize
  2033  069A                     _EUSART_Initialize:	
  2034                           
  2035                           ;eusart.c: 70: BAUDCON = 0x09;
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2039  069A  3009               	movlw	9
  2040  069B  0023               	movlb	3	; select bank3
  2041  069C  009F               	movwf	31	;volatile
  2042                           
  2043                           ;eusart.c: 73: RCSTA = 0x90;
  2044  069D  3090               	movlw	144
  2045  069E  009D               	movwf	29	;volatile
  2046                           
  2047                           ;eusart.c: 76: TXSTA = 0x04;
  2048  069F  3004               	movlw	4
  2049  06A0  009E               	movwf	30	;volatile
  2050                           
  2051                           ;eusart.c: 79: SPBRGL = 0x67;
  2052  06A1  3067               	movlw	103
  2053  06A2  009B               	movwf	27	;volatile
  2054                           
  2055                           ;eusart.c: 82: SPBRGH = 0x00;
  2056  06A3  019C               	clrf	28	;volatile
  2057                           
  2058                           ;eusart.c: 85: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  2059  06A4  3000               	movlw	0
  2060  06A5  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2061  06A6  3000               	movlw	0
  2062  06A7  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2063  06A8  274B               	fcall	_EUSART_SetFramingErrorHandler
  2064                           
  2065                           ;eusart.c: 86: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  2066  06A9  3000               	movlw	0
  2067  06AA  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2068  06AB  3000               	movlw	0
  2069  06AC  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2070  06AD  2745               	fcall	_EUSART_SetOverrunErrorHandler
  2071                           
  2072                           ;eusart.c: 87: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  2073  06AE  3000               	movlw	0
  2074  06AF  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
  2075  06B0  3000               	movlw	0
  2076  06B1  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2077  06B2  2751               	fcall	_EUSART_SetErrorHandler
  2078                           
  2079                           ;eusart.c: 89: eusartRxLastError.status = 0;
  2080  06B3  0020               	movlb	0	; select bank0
  2081  06B4  01EC               	clrf	_eusartRxLastError	;volatile
  2082  06B5  0008               	return
  2083  06B6                     __end_of_EUSART_Initialize:	
  2084                           
  2085                           	psect	text8
  2086  0745                     __ptext8:	
  2087 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2088 ;; Defined at:
  2089 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  2092 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2104 ;;      Params:         2       0       0       0
  2105 ;;      Locals:         0       0       0       0
  2106 ;;      Temps:          0       0       0       0
  2107 ;;      Totals:         2       0       0       0
  2108 ;;Total ram usage:        2 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    4
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_EUSART_Initialize
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _EUSART_SetOverrunErrorHandler
  2120  0745                     _EUSART_SetOverrunErrorHandler:	
  2121                           
  2122                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2126  0745  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2127  0746  0021               	movlb	1	; select bank1
  2128  0747  00E3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2129  0748  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2130  0749  00E2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2131  074A  0008               	return
  2132  074B                     __end_of_EUSART_SetOverrunErrorHandler:	
  2133                           
  2134                           	psect	text9
  2135  074B                     __ptext9:	
  2136 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2137 ;; Defined at:
  2138 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  2141 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2153 ;;      Params:         2       0       0       0
  2154 ;;      Locals:         0       0       0       0
  2155 ;;      Temps:          0       0       0       0
  2156 ;;      Totals:         2       0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    4
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_EUSART_Initialize
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _EUSART_SetFramingErrorHandler
  2169  074B                     _EUSART_SetFramingErrorHandler:	
  2170                           
  2171                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2175  074B  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2176  074C  0021               	movlb	1	; select bank1
  2177  074D  00E5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2178  074E  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2179  074F  00E4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2180  0750  0008               	return
  2181  0751                     __end_of_EUSART_SetFramingErrorHandler:	
  2182                           
  2183                           	psect	text10
  2184  0751                     __ptext10:	
  2185 ;; *************** function _EUSART_SetErrorHandler *****************
  2186 ;; Defined at:
  2187 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  2190 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2202 ;;      Params:         2       0       0       0
  2203 ;;      Locals:         0       0       0       0
  2204 ;;      Temps:          0       0       0       0
  2205 ;;      Totals:         2       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    4
  2209 ;; This function calls:
  2210 ;;		Nothing
  2211 ;; This function is called by:
  2212 ;;		_EUSART_Initialize
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _EUSART_SetErrorHandler
  2218  0751                     _EUSART_SetErrorHandler:	
  2219                           
  2220                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2224  0751  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2225  0752  0021               	movlb	1	; select bank1
  2226  0753  00E1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2227  0754  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2228  0755  00E0               	movwf	_EUSART_ErrorHandler^(0+128)
  2229  0756  0008               	return
  2230  0757                     __end_of_EUSART_SetErrorHandler:	
  2231                           
  2232                           	psect	text11
  2233  04E4                     __ptext11:	
  2234 ;; *************** function _LoadByte *****************
  2235 ;; Defined at:
  2236 ;;		line 111 in file "main.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  byte            1    5[BANK1 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2250 ;;      Params:         0       0       0       0
  2251 ;;      Locals:         0       0       1       0
  2252 ;;      Temps:          0       0       1       0
  2253 ;;      Totals:         0       0       2       0
  2254 ;;Total ram usage:        2 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    7
  2257 ;; This function calls:
  2258 ;;		_EUSART_Read
  2259 ;;		_UARTUpdatePPM
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _LoadByte
  2267  04E4                     _LoadByte:	
  2268                           
  2269                           ;main.c: 112: if(PIR1bits.RCIF == 0) return;
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _LoadByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2273  04E4  0020               	movlb	0	; select bank0
  2274  04E5  1E91               	btfss	17,5	;volatile
  2275  04E6  0008               	return
  2276  04E7  2D3B               	goto	l2741
  2277  04E8                     l2701:	
  2278                           
  2279                           ;main.c: 124: byte = EUSART_Read();
  2280  04E8  2721               	fcall	_EUSART_Read
  2281  04E9  0021               	movlb	1	; select bank1
  2282  04EA  00EC               	movwf	??_LoadByte^(0+128)
  2283  04EB  086C               	movf	??_LoadByte^(0+128),w
  2284  04EC  00ED               	movwf	LoadByte@byte^(0+128)
  2285                           
  2286                           ;main.c: 125: if(byte == 'G') uartLoadState = G_RECEIVED;
  2287  04ED  3047               	movlw	71
  2288  04EE  066D               	xorwf	LoadByte@byte^(0+128),w
  2289  04EF  1D03               	btfss	3,2
  2290  04F0  0008               	return
  2291  04F1  3001               	movlw	1
  2292  04F2  00EC               	movwf	??_LoadByte^(0+128)
  2293  04F3  086C               	movf	??_LoadByte^(0+128),w
  2294  04F4  0020               	movlb	0	; select bank0
  2295  04F5  00ED               	movwf	_uartLoadState	;volatile
  2296  04F6  0008               	return
  2297  04F7                     l2707:	
  2298                           
  2299                           ;main.c: 129: if(EUSART_Read() == 'O') uartLoadState = O_RECEIVED;
  2300  04F7  2721               	fcall	_EUSART_Read
  2301  04F8  3A4F               	xorlw	79
  2302  04F9  1D03               	skipz
  2303  04FA  2D02               	goto	l2711
  2304  04FB  3002               	movlw	2
  2305  04FC  0021               	movlb	1	; select bank1
  2306  04FD  00EC               	movwf	??_LoadByte^(0+128)
  2307  04FE  086C               	movf	??_LoadByte^(0+128),w
  2308  04FF  0020               	movlb	0	; select bank0
  2309  0500  00ED               	movwf	_uartLoadState	;volatile
  2310  0501  0008               	return
  2311  0502                     l2711:	
  2312                           
  2313                           ;main.c: 130: else uartLoadState = UART_READY;
  2314  0502  0020               	movlb	0	; select bank0
  2315  0503  01ED               	clrf	_uartLoadState	;volatile
  2316  0504  0008               	return
  2317  0505                     l2713:	
  2318                           
  2319                           ;main.c: 133: if(EUSART_Read() == 0x00) {
  2320  0505  2721               	fcall	_EUSART_Read
  2321  0506  3A00               	xorlw	0
  2322  0507  1D03               	skipz
  2323  0508  0008               	return
  2324                           
  2325                           ;main.c: 134: uartLoadState = PID_GO_DRIVE_RECEIVED;
  2326  0509  3004               	movlw	4
  2327  050A  0021               	movlb	1	; select bank1
  2328  050B  00EC               	movwf	??_LoadByte^(0+128)
  2329  050C  086C               	movf	??_LoadByte^(0+128),w
  2330  050D  0020               	movlb	0	; select bank0
  2331  050E  00ED               	movwf	_uartLoadState	;volatile
  2332                           
  2333                           ;main.c: 135: }
  2334  050F  0008               	return
  2335  0510                     l2717:	
  2336                           
  2337                           ;main.c: 150: uartData.buf[0] = EUSART_Read();
  2338  0510  2721               	fcall	_EUSART_Read
  2339  0511  0021               	movlb	1	; select bank1
  2340  0512  00EC               	movwf	??_LoadByte^(0+128)
  2341  0513  086C               	movf	??_LoadByte^(0+128),w
  2342  0514  00CB               	movwf	(_uartData^(0+128)+1)	;volatile
  2343                           
  2344                           ;main.c: 151: if(uartData.buf[0] > (20 - (1 + 1))) uartLoadState = UART_READY;
  2345  0515  3013               	movlw	19
  2346  0516  024B               	subwf	(_uartData^(0+128)+1),w	;volatile
  2347  0517  1803               	btfsc	3,0
  2348  0518  2D02               	goto	l2711
  2349                           
  2350                           ;main.c: 152: else {;main.c: 154: uartData.uartBufSize = uartData.buf[0] + (1 + 1);
  2351  0519  084B               	movf	(_uartData^(0+128)+1),w	;volatile
  2352  051A  3E02               	addlw	2
  2353  051B  00EC               	movwf	??_LoadByte^(0+128)
  2354  051C  086C               	movf	??_LoadByte^(0+128),w
  2355  051D  00CA               	movwf	_uartData^(0+128)	;volatile
  2356                           
  2357                           ;main.c: 157: uartData.iBuf = 1;
  2358  051E  3001               	movlw	1
  2359  051F  00EC               	movwf	??_LoadByte^(0+128)
  2360  0520  086C               	movf	??_LoadByte^(0+128),w
  2361  0521  00DF               	movwf	(_uartData^(0+128)+21)	;volatile
  2362                           
  2363                           ;main.c: 158: uartLoadState = DATA_BYTE_NUMBER_RECEIVED;
  2364  0522  3003               	movlw	3
  2365  0523  00EC               	movwf	??_LoadByte^(0+128)
  2366  0524  086C               	movf	??_LoadByte^(0+128),w
  2367  0525  0020               	movlb	0	; select bank0
  2368  0526  00ED               	movwf	_uartLoadState	;volatile
  2369  0527  0008               	return
  2370  0528                     l2729:	
  2371                           
  2372                           ;main.c: 162: uartData.buf[uartData.iBuf] = EUSART_Read();
  2373  0528  2721               	fcall	_EUSART_Read
  2374  0529  0021               	movlb	1	; select bank1
  2375  052A  00EC               	movwf	??_LoadByte^(0+128)
  2376  052B  085F               	movf	(_uartData^(0+128)+21),w	;volatile
  2377  052C  3ECB               	addlw	(low ((_uartData| 0+1)))& (0+255)
  2378  052D  0086               	movwf	6
  2379  052E  0187               	clrf	7
  2380  052F  086C               	movf	??_LoadByte^(0+128),w
  2381  0530  0081               	movwf	1
  2382                           
  2383                           ;main.c: 163: uartData.iBuf++;
  2384  0531  3001               	movlw	1
  2385  0532  00EC               	movwf	??_LoadByte^(0+128)
  2386  0533  086C               	movf	??_LoadByte^(0+128),w
  2387  0534  07DF               	addwf	(_uartData^(0+128)+21),f	;volatile
  2388                           
  2389                           ;main.c: 164: if(uartData.iBuf >= uartData.uartBufSize) {
  2390  0535  084A               	movf	_uartData^(0+128),w	;volatile
  2391  0536  025F               	subwf	(_uartData^(0+128)+21),w	;volatile
  2392  0537  1C03               	skipc
  2393  0538  0008               	return
  2394                           
  2395                           ;main.c: 166: UARTUpdatePPM();
  2396  0539  254D               	fcall	_UARTUpdatePPM
  2397  053A  2D02               	goto	l2711
  2398  053B                     l2741:	
  2399  053B  086D               	movf	_uartLoadState,w	;volatile
  2400                           
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 5, Range of values is 0 to 4
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; direct_byte           16     6 (fixed)
  2406                           ; simple_byte           16     9 (average)
  2407                           ; jumptable            260     6 (fixed)
  2408                           ;	Chosen strategy is simple_byte
  2409  053C  3A00               	xorlw	0	; case 0
  2410  053D  1903               	skipnz
  2411  053E  2CE8               	goto	l2701
  2412  053F  3A01               	xorlw	1	; case 1
  2413  0540  1903               	skipnz
  2414  0541  2CF7               	goto	l2707
  2415  0542  3A03               	xorlw	3	; case 2
  2416  0543  1903               	skipnz
  2417  0544  2D05               	goto	l2713
  2418  0545  3A01               	xorlw	1	; case 3
  2419  0546  1903               	skipnz
  2420  0547  2D28               	goto	l2729
  2421  0548  3A07               	xorlw	7	; case 4
  2422  0549  1903               	skipnz
  2423  054A  2D10               	goto	l2717
  2424  054B  2D02               	goto	l2711
  2425  054C  0008               	return
  2426  054D                     __end_of_LoadByte:	
  2427                           
  2428                           	psect	text12
  2429  054D                     __ptext12:	
  2430 ;; *************** function _UARTUpdatePPM *****************
  2431 ;; Defined at:
  2432 ;;		line 92 in file "main.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  i               1   71[BANK0 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2446 ;;      Params:         0       0       0       0
  2447 ;;      Locals:         0       1       0       0
  2448 ;;      Temps:          0       0       4       0
  2449 ;;      Totals:         0       1       4       0
  2450 ;;Total ram usage:        5 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    6
  2453 ;; This function calls:
  2454 ;;		___fladd
  2455 ;;		___flmul
  2456 ;;		___fltol
  2457 ;;		___xxtofl
  2458 ;; This function is called by:
  2459 ;;		_LoadByte
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _UARTUpdatePPM
  2465  054D                     _UARTUpdatePPM:	
  2466                           
  2467                           ;main.c: 93: ppmData.ppmRegSize = uartData.buf[0];
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _UARTUpdatePPM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2471  054D  0021               	movlb	1	; select bank1
  2472  054E  084B               	movf	(_uartData^(0+128)+1),w	;volatile
  2473  054F  00E8               	movwf	??_UARTUpdatePPM^(0+128)
  2474  0550  0868               	movf	??_UARTUpdatePPM^(0+128),w
  2475  0551  00A0               	movwf	_ppmData^(0+128)	;volatile
  2476                           
  2477                           ;main.c: 95: for(uint8_t i = 0; i < ppmData.ppmRegSize; i++) {
  2478  0552  0020               	movlb	0	; select bank0
  2479  0553  01E7               	clrf	UARTUpdatePPM@i
  2480  0554                     l2671:	
  2481  0554  0021               	movlb	1	; select bank1
  2482  0555  0820               	movf	_ppmData^(0+128),w	;volatile
  2483  0556  0020               	movlb	0	; select bank0
  2484  0557  0267               	subwf	UARTUpdatePPM@i,w
  2485  0558  1803               	btfsc	3,0
  2486  0559  0008               	return
  2487  055A  0867               	movf	UARTUpdatePPM@i,w
  2488  055B  3ECC               	addlw	(low ((_uartData| 0+2)))& (0+255)
  2489  055C  0086               	movwf	6
  2490  055D  0187               	clrf	7
  2491  055E  0801               	movf	1,w
  2492  055F  0021               	movlb	1	; select bank1
  2493  0560  00E8               	movwf	??_UARTUpdatePPM^(0+128)
  2494  0561  01E9               	clrf	(??_UARTUpdatePPM^(0+128)+1)
  2495  0562  01EA               	clrf	(??_UARTUpdatePPM^(0+128)+2)
  2496  0563  01EB               	clrf	(??_UARTUpdatePPM^(0+128)+3)
  2497  0564  086B               	movf	(??_UARTUpdatePPM+3)^(0+128),w
  2498  0565  0020               	movlb	0	; select bank0
  2499  0566  00A3               	movwf	___xxtofl@val+3
  2500  0567  0021               	movlb	1	; select bank1
  2501  0568  086A               	movf	(??_UARTUpdatePPM+2)^(0+128),w
  2502  0569  0020               	movlb	0	; select bank0
  2503  056A  00A2               	movwf	___xxtofl@val+2
  2504  056B  0021               	movlb	1	; select bank1
  2505  056C  0869               	movf	(??_UARTUpdatePPM+1)^(0+128),w
  2506  056D  0020               	movlb	0	; select bank0
  2507  056E  00A1               	movwf	___xxtofl@val+1
  2508  056F  0021               	movlb	1	; select bank1
  2509  0570  0868               	movf	??_UARTUpdatePPM^(0+128),w
  2510  0571  0020               	movlb	0	; select bank0
  2511  0572  00A0               	movwf	___xxtofl@val
  2512  0573  3000               	movlw	0
  2513  0574  244E               	fcall	___xxtofl
  2514  0575  0020               	movlb	0	; select bank0
  2515  0576  0823               	movf	?___xxtofl+3,w
  2516  0577  00B5               	movwf	___flmul@a+3
  2517  0578  0822               	movf	?___xxtofl+2,w
  2518  0579  00B4               	movwf	___flmul@a+2
  2519  057A  0821               	movf	?___xxtofl+1,w
  2520  057B  00B3               	movwf	___flmul@a+1
  2521  057C  0820               	movf	?___xxtofl,w
  2522  057D  00B2               	movwf	___flmul@a
  2523  057E  30C1               	movlw	193
  2524  057F  00B1               	movwf	___flmul@b+3
  2525  0580  307A               	movlw	122
  2526  0581  00B0               	movwf	___flmul@b+2
  2527  0582  30FB               	movlw	251
  2528  0583  00AF               	movwf	___flmul@b+1
  2529  0584  3016               	movlw	22
  2530  0585  00AE               	movwf	___flmul@b
  2531  0586  2052               	fcall	___flmul
  2532  0587  0020               	movlb	0	; select bank0
  2533  0588  0831               	movf	?___flmul+3,w
  2534  0589  00CF               	movwf	___fladd@a+3
  2535  058A  0830               	movf	?___flmul+2,w
  2536  058B  00CE               	movwf	___fladd@a+2
  2537  058C  082F               	movf	?___flmul+1,w
  2538  058D  00CD               	movwf	___fladd@a+1
  2539  058E  082E               	movf	?___flmul,w
  2540  058F  00CC               	movwf	___fladd@a
  2541  0590  3047               	movlw	71
  2542  0591  00CB               	movwf	___fladd@b+3
  2543  0592  3078               	movlw	120
  2544  0593  00CA               	movwf	___fladd@b+2
  2545  0594  303E               	movlw	62
  2546  0595  00C9               	movwf	___fladd@b+1
  2547  0596  3000               	movlw	0
  2548  0597  00C8               	movwf	___fladd@b
  2549  0598  226C               	fcall	___fladd
  2550  0599  0020               	movlb	0	; select bank0
  2551  059A  084B               	movf	?___fladd+3,w
  2552  059B  00DF               	movwf	___fltol@f1+3
  2553  059C  084A               	movf	?___fladd+2,w
  2554  059D  00DE               	movwf	___fltol@f1+2
  2555  059E  0849               	movf	?___fladd+1,w
  2556  059F  00DD               	movwf	___fltol@f1+1
  2557  05A0  0848               	movf	?___fladd,w
  2558  05A1  00DC               	movwf	___fltol@f1
  2559  05A2  25B3               	fcall	___fltol
  2560  05A3  0020               	movlb	0	; select bank0
  2561  05A4  3567               	lslf	UARTUpdatePPM@i,w
  2562  05A5  3EA1               	addlw	(low ((_ppmData| 0+1)))& (0+255)
  2563  05A6  0086               	movwf	6
  2564  05A7  0187               	clrf	7
  2565  05A8  085C               	movf	?___fltol,w
  2566  05A9  3FC0               	movwi [0]fsr1
  2567  05AA  085D               	movf	?___fltol+1,w
  2568  05AB  3FC1               	movwi [1]fsr1
  2569  05AC  3001               	movlw	1
  2570  05AD  0021               	movlb	1	; select bank1
  2571  05AE  00E8               	movwf	??_UARTUpdatePPM^(0+128)
  2572  05AF  0868               	movf	??_UARTUpdatePPM^(0+128),w
  2573  05B0  0020               	movlb	0	; select bank0
  2574  05B1  07E7               	addwf	UARTUpdatePPM@i,f
  2575  05B2  2D54               	goto	l2671
  2576  05B3                     __end_of_UARTUpdatePPM:	
  2577                           
  2578                           	psect	text13
  2579  044E                     __ptext13:	
  2580 ;; *************** function ___xxtofl *****************
  2581 ;; Defined at:
  2582 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/xxtofl.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  sign            1    wreg     unsigned char 
  2585 ;;  val             4    0[BANK0 ] long 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  sign            1    8[BANK0 ] unsigned char 
  2588 ;;  arg             4   10[BANK0 ] unsigned long 
  2589 ;;  exp             1    9[BANK0 ] unsigned char 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  4    0[BANK0 ] unsigned char 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2599 ;;      Params:         0       4       0       0
  2600 ;;      Locals:         0       6       0       0
  2601 ;;      Temps:          0       4       0       0
  2602 ;;      Totals:         0      14       0       0
  2603 ;;Total ram usage:       14 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    4
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_UARTUpdatePPM
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function ___xxtofl
  2615  044E                     ___xxtofl:	
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2619                           ;___xxtofl@sign stored from wreg
  2620  044E  0020               	movlb	0	; select bank0
  2621  044F  00A8               	movwf	___xxtofl@sign
  2622  0450  0828               	movf	___xxtofl@sign,w
  2623  0451  1D03               	btfss	3,2
  2624  0452  1FA3               	btfss	___xxtofl@val+3,7
  2625  0453  2C64               	goto	l2625
  2626  0454  0920               	comf	___xxtofl@val,w
  2627  0455  00AA               	movwf	___xxtofl@arg
  2628  0456  0921               	comf	___xxtofl@val+1,w
  2629  0457  00AB               	movwf	___xxtofl@arg+1
  2630  0458  0922               	comf	___xxtofl@val+2,w
  2631  0459  00AC               	movwf	___xxtofl@arg+2
  2632  045A  0923               	comf	___xxtofl@val+3,w
  2633  045B  00AD               	movwf	___xxtofl@arg+3
  2634  045C  0AAA               	incf	___xxtofl@arg,f
  2635  045D  1903               	skipnz
  2636  045E  0AAB               	incf	___xxtofl@arg+1,f
  2637  045F  1903               	skipnz
  2638  0460  0AAC               	incf	___xxtofl@arg+2,f
  2639  0461  1903               	skipnz
  2640  0462  0AAD               	incf	___xxtofl@arg+3,f
  2641  0463  2C6C               	goto	l812
  2642  0464                     l2625:	
  2643  0464  0823               	movf	___xxtofl@val+3,w
  2644  0465  00AD               	movwf	___xxtofl@arg+3
  2645  0466  0822               	movf	___xxtofl@val+2,w
  2646  0467  00AC               	movwf	___xxtofl@arg+2
  2647  0468  0821               	movf	___xxtofl@val+1,w
  2648  0469  00AB               	movwf	___xxtofl@arg+1
  2649  046A  0820               	movf	___xxtofl@val,w
  2650  046B  00AA               	movwf	___xxtofl@arg
  2651  046C                     l812:	
  2652  046C  0823               	movf	___xxtofl@val+3,w
  2653  046D  0422               	iorwf	___xxtofl@val+2,w
  2654  046E  0421               	iorwf	___xxtofl@val+1,w
  2655  046F  0420               	iorwf	___xxtofl@val,w
  2656  0470  1D03               	skipz
  2657  0471  2C7B               	goto	l2631
  2658  0472  3000               	movlw	0
  2659  0473  00A3               	movwf	?___xxtofl+3
  2660  0474  3000               	movlw	0
  2661  0475  00A2               	movwf	?___xxtofl+2
  2662  0476  3000               	movlw	0
  2663  0477  00A1               	movwf	?___xxtofl+1
  2664  0478  3000               	movlw	0
  2665  0479  00A0               	movwf	?___xxtofl
  2666  047A  0008               	return
  2667  047B                     l2631:	
  2668  047B  3096               	movlw	150
  2669  047C  00A4               	movwf	??___xxtofl
  2670  047D  0824               	movf	??___xxtofl,w
  2671  047E  00A9               	movwf	___xxtofl@exp
  2672  047F                     l2635:	
  2673  047F  30FE               	movlw	254
  2674  0480  052D               	andwf	___xxtofl@arg+3,w
  2675  0481  1903               	btfsc	3,2
  2676  0482  2CA2               	goto	l818
  2677  0483  3001               	movlw	1
  2678  0484  00A4               	movwf	??___xxtofl
  2679  0485  0824               	movf	??___xxtofl,w
  2680  0486  07A9               	addwf	___xxtofl@exp,f
  2681  0487  3001               	movlw	1
  2682  0488                     u3205:	
  2683  0488  36AD               	lsrf	___xxtofl@arg+3,f
  2684  0489  0CAC               	rrf	___xxtofl@arg+2,f
  2685  048A  0CAB               	rrf	___xxtofl@arg+1,f
  2686  048B  0CAA               	rrf	___xxtofl@arg,f
  2687  048C  0B89               	decfsz	9,f
  2688  048D  2C88               	goto	u3205
  2689  048E  2C7F               	goto	l2635
  2690  048F                     l2637:	
  2691  048F  3001               	movlw	1
  2692  0490  00A4               	movwf	??___xxtofl
  2693  0491  0824               	movf	??___xxtofl,w
  2694  0492  07A9               	addwf	___xxtofl@exp,f
  2695  0493  3001               	movlw	1
  2696  0494  07AA               	addwf	___xxtofl@arg,f
  2697  0495  3000               	movlw	0
  2698  0496  3DAB               	addwfc	___xxtofl@arg+1,f
  2699  0497  3000               	movlw	0
  2700  0498  3DAC               	addwfc	___xxtofl@arg+2,f
  2701  0499  3000               	movlw	0
  2702  049A  3DAD               	addwfc	___xxtofl@arg+3,f
  2703  049B  3001               	movlw	1
  2704  049C                     u3225:	
  2705  049C  36AD               	lsrf	___xxtofl@arg+3,f
  2706  049D  0CAC               	rrf	___xxtofl@arg+2,f
  2707  049E  0CAB               	rrf	___xxtofl@arg+1,f
  2708  049F  0CAA               	rrf	___xxtofl@arg,f
  2709  04A0  0B89               	decfsz	9,f
  2710  04A1  2C9C               	goto	u3225
  2711  04A2                     l818:	
  2712  04A2  30FF               	movlw	255
  2713  04A3  052D               	andwf	___xxtofl@arg+3,w
  2714  04A4  1903               	btfsc	3,2
  2715  04A5  2CB4               	goto	l2645
  2716  04A6  2C8F               	goto	l2637
  2717  04A7                     l2647:	
  2718  04A7  3002               	movlw	2
  2719  04A8  0229               	subwf	___xxtofl@exp,w
  2720  04A9  1C03               	btfss	3,0
  2721  04AA  2CB6               	goto	l825
  2722  04AB  3001               	movlw	1
  2723  04AC  02A9               	subwf	___xxtofl@exp,f
  2724  04AD  3001               	movlw	1
  2725  04AE                     u3245:	
  2726  04AE  35AA               	lslf	___xxtofl@arg,f
  2727  04AF  0DAB               	rlf	___xxtofl@arg+1,f
  2728  04B0  0DAC               	rlf	___xxtofl@arg+2,f
  2729  04B1  0DAD               	rlf	___xxtofl@arg+3,f
  2730  04B2  0B89               	decfsz	9,f
  2731  04B3  2CAE               	goto	u3245
  2732  04B4                     l2645:	
  2733  04B4  1FAC               	btfss	___xxtofl@arg+2,7
  2734  04B5  2CA7               	goto	l2647
  2735  04B6                     l825:	
  2736  04B6  1829               	btfsc	___xxtofl@exp,0
  2737  04B7  2CC0               	goto	l826
  2738  04B8  30FF               	movlw	255
  2739  04B9  05AA               	andwf	___xxtofl@arg,f
  2740  04BA  30FF               	movlw	255
  2741  04BB  05AB               	andwf	___xxtofl@arg+1,f
  2742  04BC  307F               	movlw	127
  2743  04BD  05AC               	andwf	___xxtofl@arg+2,f
  2744  04BE  30FF               	movlw	255
  2745  04BF  05AD               	andwf	___xxtofl@arg+3,f
  2746  04C0                     l826:	
  2747  04C0  1003               	clrc
  2748  04C1  0CA9               	rrf	___xxtofl@exp,f
  2749  04C2  0829               	movf	___xxtofl@exp,w
  2750  04C3  00A4               	movwf	??___xxtofl
  2751  04C4  01A5               	clrf	??___xxtofl+1
  2752  04C5  01A6               	clrf	??___xxtofl+2
  2753  04C6  01A7               	clrf	??___xxtofl+3
  2754  04C7  3018               	movlw	24
  2755  04C8                     u3285:	
  2756  04C8  35A4               	lslf	??___xxtofl,f
  2757  04C9  0DA5               	rlf	??___xxtofl+1,f
  2758  04CA  0DA6               	rlf	??___xxtofl+2,f
  2759  04CB  0DA7               	rlf	??___xxtofl+3,f
  2760  04CC  0B89               	decfsz	9,f
  2761  04CD  2CC8               	goto	u3285
  2762  04CE  0824               	movf	??___xxtofl,w
  2763  04CF  04AA               	iorwf	___xxtofl@arg,f
  2764  04D0  0825               	movf	??___xxtofl+1,w
  2765  04D1  04AB               	iorwf	___xxtofl@arg+1,f
  2766  04D2  0826               	movf	??___xxtofl+2,w
  2767  04D3  04AC               	iorwf	___xxtofl@arg+2,f
  2768  04D4  0827               	movf	??___xxtofl+3,w
  2769  04D5  04AD               	iorwf	___xxtofl@arg+3,f
  2770  04D6  0828               	movf	___xxtofl@sign,w
  2771  04D7  1D03               	btfss	3,2
  2772  04D8  1FA3               	btfss	___xxtofl@val+3,7
  2773  04D9  2CDB               	goto	l2659
  2774  04DA  17AD               	bsf	___xxtofl@arg+3,7
  2775  04DB                     l2659:	
  2776  04DB  082D               	movf	___xxtofl@arg+3,w
  2777  04DC  00A3               	movwf	?___xxtofl+3
  2778  04DD  082C               	movf	___xxtofl@arg+2,w
  2779  04DE  00A2               	movwf	?___xxtofl+2
  2780  04DF  082B               	movf	___xxtofl@arg+1,w
  2781  04E0  00A1               	movwf	?___xxtofl+1
  2782  04E1  082A               	movf	___xxtofl@arg,w
  2783  04E2  00A0               	movwf	?___xxtofl
  2784  04E3  0008               	return
  2785  04E4                     __end_of___xxtofl:	
  2786                           
  2787                           	psect	text14
  2788  05B3                     __ptext14:	
  2789 ;; *************** function ___fltol *****************
  2790 ;; Defined at:
  2791 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fltol.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  f1              4   60[BANK0 ] unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  exp1            1   70[BANK0 ] unsigned char 
  2796 ;;  sign1           1   69[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  4   60[BANK0 ] long 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2806 ;;      Params:         0       4       0       0
  2807 ;;      Locals:         0       2       0       0
  2808 ;;      Temps:          0       5       0       0
  2809 ;;      Totals:         0      11       0       0
  2810 ;;Total ram usage:       11 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    4
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_UARTUpdatePPM
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function ___fltol
  2822  05B3                     ___fltol:	
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2826  05B3  1003               	clrc
  2827  05B4  0020               	movlb	0	; select bank0
  2828  05B5  0D5E               	rlf	___fltol@f1+2,w
  2829  05B6  0D5F               	rlf	___fltol@f1+3,w
  2830  05B7  00E0               	movwf	??___fltol
  2831  05B8  0860               	movf	??___fltol,w
  2832  05B9  00E6               	movwf	___fltol@exp1
  2833  05BA  0866               	movf	___fltol@exp1,w
  2834  05BB  1D03               	btfss	3,2
  2835  05BC  2DC6               	goto	l2255
  2836  05BD                     l2251:	
  2837  05BD  3000               	movlw	0
  2838  05BE  00DF               	movwf	?___fltol+3
  2839  05BF  3000               	movlw	0
  2840  05C0  00DE               	movwf	?___fltol+2
  2841  05C1  3000               	movlw	0
  2842  05C2  00DD               	movwf	?___fltol+1
  2843  05C3  3000               	movlw	0
  2844  05C4  00DC               	movwf	?___fltol
  2845  05C5  0008               	return
  2846  05C6                     l2255:	
  2847  05C6  085C               	movf	___fltol@f1,w
  2848  05C7  00E0               	movwf	??___fltol
  2849  05C8  085D               	movf	___fltol@f1+1,w
  2850  05C9  00E1               	movwf	??___fltol+1
  2851  05CA  085E               	movf	___fltol@f1+2,w
  2852  05CB  00E2               	movwf	??___fltol+2
  2853  05CC  085F               	movf	___fltol@f1+3,w
  2854  05CD  00E3               	movwf	??___fltol+3
  2855  05CE  301F               	movlw	31
  2856  05CF                     u2395:	
  2857  05CF  36E3               	lsrf	??___fltol+3,f
  2858  05D0  0CE2               	rrf	??___fltol+2,f
  2859  05D1  0CE1               	rrf	??___fltol+1,f
  2860  05D2  0CE0               	rrf	??___fltol,f
  2861  05D3  0B89               	decfsz	9,f
  2862  05D4  2DCF               	goto	u2395
  2863  05D5  0860               	movf	??___fltol,w
  2864  05D6  00E4               	movwf	??___fltol+4
  2865  05D7  0864               	movf	??___fltol+4,w
  2866  05D8  00E5               	movwf	___fltol@sign1
  2867  05D9  17DE               	bsf	___fltol@f1+2,7
  2868  05DA  30FF               	movlw	255
  2869  05DB  05DC               	andwf	___fltol@f1,f
  2870  05DC  30FF               	movlw	255
  2871  05DD  05DD               	andwf	___fltol@f1+1,f
  2872  05DE  30FF               	movlw	255
  2873  05DF  05DE               	andwf	___fltol@f1+2,f
  2874  05E0  3000               	movlw	0
  2875  05E1  05DF               	andwf	___fltol@f1+3,f
  2876  05E2  3096               	movlw	150
  2877  05E3  02E6               	subwf	___fltol@exp1,f
  2878  05E4  1FE6               	btfss	___fltol@exp1,7
  2879  05E5  2DF9               	goto	l2273
  2880  05E6  0866               	movf	___fltol@exp1,w
  2881  05E7  3A80               	xorlw	128
  2882  05E8  3E97               	addlw	151
  2883  05E9  1C03               	btfss	3,0
  2884  05EA  2DBD               	goto	l2251
  2885  05EB                     l2271:	
  2886  05EB  3001               	movlw	1
  2887  05EC                     u2425:	
  2888  05EC  36DF               	lsrf	___fltol@f1+3,f
  2889  05ED  0CDE               	rrf	___fltol@f1+2,f
  2890  05EE  0CDD               	rrf	___fltol@f1+1,f
  2891  05EF  0CDC               	rrf	___fltol@f1,f
  2892  05F0  0B89               	decfsz	9,f
  2893  05F1  2DEC               	goto	u2425
  2894  05F2  3001               	movlw	1
  2895  05F3  00E0               	movwf	??___fltol
  2896  05F4  0860               	movf	??___fltol,w
  2897  05F5  07E6               	addwf	___fltol@exp1,f
  2898  05F6  1903               	btfsc	3,2
  2899  05F7  2E0A               	goto	l2281
  2900  05F8  2DEB               	goto	l2271
  2901  05F9                     l2273:	
  2902  05F9  3020               	movlw	32
  2903  05FA  0266               	subwf	___fltol@exp1,w
  2904  05FB  1803               	btfsc	3,0
  2905  05FC  2DBD               	goto	l2251
  2906  05FD                     l578:	
  2907  05FD  0866               	movf	___fltol@exp1,w
  2908  05FE  1903               	btfsc	3,2
  2909  05FF  2E0A               	goto	l2281
  2910  0600  3001               	movlw	1
  2911  0601                     u2455:	
  2912  0601  35DC               	lslf	___fltol@f1,f
  2913  0602  0DDD               	rlf	___fltol@f1+1,f
  2914  0603  0DDE               	rlf	___fltol@f1+2,f
  2915  0604  0DDF               	rlf	___fltol@f1+3,f
  2916  0605  0B89               	decfsz	9,f
  2917  0606  2E01               	goto	u2455
  2918  0607  3001               	movlw	1
  2919  0608  02E6               	subwf	___fltol@exp1,f
  2920  0609  2DFD               	goto	l578
  2921  060A                     l2281:	
  2922  060A  0865               	movf	___fltol@sign1,w
  2923  060B  1903               	btfsc	3,2
  2924  060C  0008               	return
  2925  060D  09DC               	comf	___fltol@f1,f
  2926  060E  09DD               	comf	___fltol@f1+1,f
  2927  060F  09DE               	comf	___fltol@f1+2,f
  2928  0610  09DF               	comf	___fltol@f1+3,f
  2929  0611  0ADC               	incf	___fltol@f1,f
  2930  0612  1903               	skipnz
  2931  0613  0ADD               	incf	___fltol@f1+1,f
  2932  0614  1903               	skipnz
  2933  0615  0ADE               	incf	___fltol@f1+2,f
  2934  0616  1903               	skipnz
  2935  0617  0ADF               	incf	___fltol@f1+3,f
  2936  0618  0008               	return
  2937  0619                     __end_of___fltol:	
  2938                           
  2939                           	psect	text15
  2940  0052                     __ptext15:	
  2941 ;; *************** function ___flmul *****************
  2942 ;; Defined at:
  2943 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcmul.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  b               4   14[BANK0 ] long 
  2946 ;;  a               4   18[BANK0 ] long 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  prod            4   34[BANK0 ] struct .
  2949 ;;  grs             4   29[BANK0 ] unsigned long 
  2950 ;;  temp            2   38[BANK0 ] struct .
  2951 ;;  bexp            1   33[BANK0 ] unsigned char 
  2952 ;;  aexp            1   28[BANK0 ] unsigned char 
  2953 ;;  sign            1   27[BANK0 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4   14[BANK0 ] unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0, pclath, cstack
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2963 ;;      Params:         0       8       0       0
  2964 ;;      Locals:         0      13       0       0
  2965 ;;      Temps:          0       5       0       0
  2966 ;;      Totals:         0      26       0       0
  2967 ;;Total ram usage:       26 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    5
  2970 ;; This function calls:
  2971 ;;		__Umul8_16
  2972 ;; This function is called by:
  2973 ;;		_UARTUpdatePPM
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function ___flmul
  2979  0052                     ___flmul:	
  2980                           
  2981                           ;incstack = 0
  2982                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  2983  0052  0020               	movlb	0	; select bank0
  2984  0053  0831               	movf	___flmul@b+3,w
  2985  0054  3980               	andlw	128
  2986  0055  00B6               	movwf	??___flmul
  2987  0056  0836               	movf	??___flmul,w
  2988  0057  00BB               	movwf	___flmul@sign
  2989  0058  3531               	lslf	___flmul@b+3,w
  2990  0059  00B6               	movwf	??___flmul
  2991  005A  0836               	movf	??___flmul,w
  2992  005B  00C1               	movwf	___flmul@bexp
  2993  005C  1BB0               	btfsc	___flmul@b+2,7
  2994  005D  1441               	bsf	___flmul@bexp,0
  2995  005E  0841               	movf	___flmul@bexp,w
  2996  005F  1903               	btfsc	3,2
  2997  0060  286E               	goto	l2495
  2998  0061  0A41               	incf	___flmul@bexp,w
  2999  0062  1D03               	btfss	3,2
  3000  0063  286C               	goto	l2493
  3001  0064  3000               	movlw	0
  3002  0065  00B1               	movwf	___flmul@b+3
  3003  0066  3000               	movlw	0
  3004  0067  00B0               	movwf	___flmul@b+2
  3005  0068  3000               	movlw	0
  3006  0069  00AF               	movwf	___flmul@b+1
  3007  006A  3000               	movlw	0
  3008  006B  00AE               	movwf	___flmul@b
  3009  006C                     l2493:	
  3010  006C  17B0               	bsf	___flmul@b+2,7
  3011  006D  2876               	goto	l2497
  3012  006E                     l2495:	
  3013  006E  3000               	movlw	0
  3014  006F  00B1               	movwf	___flmul@b+3
  3015  0070  3000               	movlw	0
  3016  0071  00B0               	movwf	___flmul@b+2
  3017  0072  3000               	movlw	0
  3018  0073  00AF               	movwf	___flmul@b+1
  3019  0074  3000               	movlw	0
  3020  0075  00AE               	movwf	___flmul@b
  3021  0076                     l2497:	
  3022  0076  0835               	movf	___flmul@a+3,w
  3023  0077  3980               	andlw	128
  3024  0078  00B6               	movwf	??___flmul
  3025  0079  0836               	movf	??___flmul,w
  3026  007A  06BB               	xorwf	___flmul@sign,f
  3027  007B  3535               	lslf	___flmul@a+3,w
  3028  007C  00B6               	movwf	??___flmul
  3029  007D  0836               	movf	??___flmul,w
  3030  007E  00BC               	movwf	___flmul@aexp
  3031  007F  1BB4               	btfsc	___flmul@a+2,7
  3032  0080  143C               	bsf	___flmul@aexp,0
  3033  0081  083C               	movf	___flmul@aexp,w
  3034  0082  1903               	btfsc	3,2
  3035  0083  2891               	goto	l2513
  3036  0084  0A3C               	incf	___flmul@aexp,w
  3037  0085  1D03               	btfss	3,2
  3038  0086  288F               	goto	l2511
  3039  0087  3000               	movlw	0
  3040  0088  00B5               	movwf	___flmul@a+3
  3041  0089  3000               	movlw	0
  3042  008A  00B4               	movwf	___flmul@a+2
  3043  008B  3000               	movlw	0
  3044  008C  00B3               	movwf	___flmul@a+1
  3045  008D  3000               	movlw	0
  3046  008E  00B2               	movwf	___flmul@a
  3047  008F                     l2511:	
  3048  008F  17B4               	bsf	___flmul@a+2,7
  3049  0090  2899               	goto	l2515
  3050  0091                     l2513:	
  3051  0091  3000               	movlw	0
  3052  0092  00B5               	movwf	___flmul@a+3
  3053  0093  3000               	movlw	0
  3054  0094  00B4               	movwf	___flmul@a+2
  3055  0095  3000               	movlw	0
  3056  0096  00B3               	movwf	___flmul@a+1
  3057  0097  3000               	movlw	0
  3058  0098  00B2               	movwf	___flmul@a
  3059  0099                     l2515:	
  3060  0099  083C               	movf	___flmul@aexp,w
  3061  009A  1D03               	btfss	3,2
  3062  009B  0841               	movf	___flmul@bexp,w
  3063  009C  1D03               	btfss	3,2
  3064  009D  28A7               	goto	l2523
  3065  009E  3000               	movlw	0
  3066  009F  00B1               	movwf	?___flmul+3
  3067  00A0  3000               	movlw	0
  3068  00A1  00B0               	movwf	?___flmul+2
  3069  00A2  3000               	movlw	0
  3070  00A3  00AF               	movwf	?___flmul+1
  3071  00A4  3000               	movlw	0
  3072  00A5  00AE               	movwf	?___flmul
  3073  00A6  0008               	return
  3074  00A7                     l2523:	
  3075  00A7  082E               	movf	___flmul@b,w
  3076  00A8  00B6               	movwf	??___flmul
  3077  00A9  0836               	movf	??___flmul,w
  3078  00AA  00F4               	movwf	__Umul8_16@multiplicand
  3079  00AB  0834               	movf	___flmul@a+2,w
  3080  00AC  267A               	fcall	__Umul8_16
  3081  00AD  0875               	movf	?__Umul8_16+1,w
  3082  00AE  0020               	movlb	0	; select bank0
  3083  00AF  00C7               	movwf	___flmul@temp+1
  3084  00B0  0874               	movf	?__Umul8_16,w
  3085  00B1  00C6               	movwf	___flmul@temp
  3086  00B2  0846               	movf	___flmul@temp,w
  3087  00B3  00B6               	movwf	??___flmul
  3088  00B4  01B7               	clrf	??___flmul+1
  3089  00B5  01B8               	clrf	??___flmul+2
  3090  00B6  01B9               	clrf	??___flmul+3
  3091  00B7  0839               	movf	??___flmul+3,w
  3092  00B8  00C0               	movwf	___flmul@grs+3
  3093  00B9  0838               	movf	??___flmul+2,w
  3094  00BA  00BF               	movwf	___flmul@grs+2
  3095  00BB  0837               	movf	??___flmul+1,w
  3096  00BC  00BE               	movwf	___flmul@grs+1
  3097  00BD  0836               	movf	??___flmul,w
  3098  00BE  00BD               	movwf	___flmul@grs
  3099  00BF  0847               	movf	___flmul@temp+1,w
  3100  00C0  00B6               	movwf	??___flmul
  3101  00C1  01B7               	clrf	??___flmul+1
  3102  00C2  01B8               	clrf	??___flmul+2
  3103  00C3  01B9               	clrf	??___flmul+3
  3104  00C4  0839               	movf	??___flmul+3,w
  3105  00C5  00C5               	movwf	___flmul@prod+3
  3106  00C6  0838               	movf	??___flmul+2,w
  3107  00C7  00C4               	movwf	___flmul@prod+2
  3108  00C8  0837               	movf	??___flmul+1,w
  3109  00C9  00C3               	movwf	___flmul@prod+1
  3110  00CA  0836               	movf	??___flmul,w
  3111  00CB  00C2               	movwf	___flmul@prod
  3112  00CC  082F               	movf	___flmul@b+1,w
  3113  00CD  00B6               	movwf	??___flmul
  3114  00CE  0836               	movf	??___flmul,w
  3115  00CF  00F4               	movwf	__Umul8_16@multiplicand
  3116  00D0  0833               	movf	___flmul@a+1,w
  3117  00D1  267A               	fcall	__Umul8_16
  3118  00D2  0875               	movf	?__Umul8_16+1,w
  3119  00D3  0020               	movlb	0	; select bank0
  3120  00D4  00C7               	movwf	___flmul@temp+1
  3121  00D5  0874               	movf	?__Umul8_16,w
  3122  00D6  00C6               	movwf	___flmul@temp
  3123  00D7  0846               	movf	___flmul@temp,w
  3124  00D8  00B6               	movwf	??___flmul
  3125  00D9  01B7               	clrf	??___flmul+1
  3126  00DA  01B8               	clrf	??___flmul+2
  3127  00DB  01B9               	clrf	??___flmul+3
  3128  00DC  0836               	movf	??___flmul,w
  3129  00DD  07BD               	addwf	___flmul@grs,f
  3130  00DE  0837               	movf	??___flmul+1,w
  3131  00DF  3DBE               	addwfc	___flmul@grs+1,f
  3132  00E0  0838               	movf	??___flmul+2,w
  3133  00E1  3DBF               	addwfc	___flmul@grs+2,f
  3134  00E2  0839               	movf	??___flmul+3,w
  3135  00E3  3DC0               	addwfc	___flmul@grs+3,f
  3136  00E4  0847               	movf	___flmul@temp+1,w
  3137  00E5  00B6               	movwf	??___flmul
  3138  00E6  01B7               	clrf	??___flmul+1
  3139  00E7  01B8               	clrf	??___flmul+2
  3140  00E8  01B9               	clrf	??___flmul+3
  3141  00E9  0836               	movf	??___flmul,w
  3142  00EA  07C2               	addwf	___flmul@prod,f
  3143  00EB  0837               	movf	??___flmul+1,w
  3144  00EC  3DC3               	addwfc	___flmul@prod+1,f
  3145  00ED  0838               	movf	??___flmul+2,w
  3146  00EE  3DC4               	addwfc	___flmul@prod+2,f
  3147  00EF  0839               	movf	??___flmul+3,w
  3148  00F0  3DC5               	addwfc	___flmul@prod+3,f
  3149  00F1  0830               	movf	___flmul@b+2,w
  3150  00F2  00B6               	movwf	??___flmul
  3151  00F3  0836               	movf	??___flmul,w
  3152  00F4  00F4               	movwf	__Umul8_16@multiplicand
  3153  00F5  0832               	movf	___flmul@a,w
  3154  00F6  267A               	fcall	__Umul8_16
  3155  00F7  0875               	movf	?__Umul8_16+1,w
  3156  00F8  0020               	movlb	0	; select bank0
  3157  00F9  00C7               	movwf	___flmul@temp+1
  3158  00FA  0874               	movf	?__Umul8_16,w
  3159  00FB  00C6               	movwf	___flmul@temp
  3160  00FC  0846               	movf	___flmul@temp,w
  3161  00FD  00B6               	movwf	??___flmul
  3162  00FE  01B7               	clrf	??___flmul+1
  3163  00FF  01B8               	clrf	??___flmul+2
  3164  0100  01B9               	clrf	??___flmul+3
  3165  0101  0836               	movf	??___flmul,w
  3166  0102  07BD               	addwf	___flmul@grs,f
  3167  0103  0837               	movf	??___flmul+1,w
  3168  0104  3DBE               	addwfc	___flmul@grs+1,f
  3169  0105  0838               	movf	??___flmul+2,w
  3170  0106  3DBF               	addwfc	___flmul@grs+2,f
  3171  0107  0839               	movf	??___flmul+3,w
  3172  0108  3DC0               	addwfc	___flmul@grs+3,f
  3173  0109  0847               	movf	___flmul@temp+1,w
  3174  010A  00B6               	movwf	??___flmul
  3175  010B  01B7               	clrf	??___flmul+1
  3176  010C  01B8               	clrf	??___flmul+2
  3177  010D  01B9               	clrf	??___flmul+3
  3178  010E  0836               	movf	??___flmul,w
  3179  010F  07C2               	addwf	___flmul@prod,f
  3180  0110  0837               	movf	??___flmul+1,w
  3181  0111  3DC3               	addwfc	___flmul@prod+1,f
  3182  0112  0838               	movf	??___flmul+2,w
  3183  0113  3DC4               	addwfc	___flmul@prod+2,f
  3184  0114  0839               	movf	??___flmul+3,w
  3185  0115  3DC5               	addwfc	___flmul@prod+3,f
  3186  0116  3008               	movlw	8
  3187  0117                     u2995:	
  3188  0117  35BD               	lslf	___flmul@grs,f
  3189  0118  0DBE               	rlf	___flmul@grs+1,f
  3190  0119  0DBF               	rlf	___flmul@grs+2,f
  3191  011A  0DC0               	rlf	___flmul@grs+3,f
  3192  011B  0B89               	decfsz	9,f
  3193  011C  2917               	goto	u2995
  3194  011D  082F               	movf	___flmul@b+1,w
  3195  011E  00B6               	movwf	??___flmul
  3196  011F  0836               	movf	??___flmul,w
  3197  0120  00F4               	movwf	__Umul8_16@multiplicand
  3198  0121  0832               	movf	___flmul@a,w
  3199  0122  267A               	fcall	__Umul8_16
  3200  0123  0875               	movf	?__Umul8_16+1,w
  3201  0124  0020               	movlb	0	; select bank0
  3202  0125  00C7               	movwf	___flmul@temp+1
  3203  0126  0874               	movf	?__Umul8_16,w
  3204  0127  00C6               	movwf	___flmul@temp
  3205  0128  0846               	movf	___flmul@temp,w
  3206  0129  07BD               	addwf	___flmul@grs,f
  3207  012A  0847               	movf	___flmul@temp+1,w
  3208  012B  3DBE               	addwfc	___flmul@grs+1,f
  3209  012C  3000               	movlw	0
  3210  012D  3DBF               	addwfc	___flmul@grs+2,f
  3211  012E  3DC0               	addwfc	___flmul@grs+3,f
  3212  012F  082E               	movf	___flmul@b,w
  3213  0130  00B6               	movwf	??___flmul
  3214  0131  0836               	movf	??___flmul,w
  3215  0132  00F4               	movwf	__Umul8_16@multiplicand
  3216  0133  0833               	movf	___flmul@a+1,w
  3217  0134  267A               	fcall	__Umul8_16
  3218  0135  0875               	movf	?__Umul8_16+1,w
  3219  0136  0020               	movlb	0	; select bank0
  3220  0137  00C7               	movwf	___flmul@temp+1
  3221  0138  0874               	movf	?__Umul8_16,w
  3222  0139  00C6               	movwf	___flmul@temp
  3223  013A  0846               	movf	___flmul@temp,w
  3224  013B  07BD               	addwf	___flmul@grs,f
  3225  013C  0847               	movf	___flmul@temp+1,w
  3226  013D  3DBE               	addwfc	___flmul@grs+1,f
  3227  013E  3000               	movlw	0
  3228  013F  3DBF               	addwfc	___flmul@grs+2,f
  3229  0140  3DC0               	addwfc	___flmul@grs+3,f
  3230  0141  3008               	movlw	8
  3231  0142                     u3005:	
  3232  0142  35BD               	lslf	___flmul@grs,f
  3233  0143  0DBE               	rlf	___flmul@grs+1,f
  3234  0144  0DBF               	rlf	___flmul@grs+2,f
  3235  0145  0DC0               	rlf	___flmul@grs+3,f
  3236  0146  0B89               	decfsz	9,f
  3237  0147  2942               	goto	u3005
  3238  0148  082E               	movf	___flmul@b,w
  3239  0149  00B6               	movwf	??___flmul
  3240  014A  0836               	movf	??___flmul,w
  3241  014B  00F4               	movwf	__Umul8_16@multiplicand
  3242  014C  0832               	movf	___flmul@a,w
  3243  014D  267A               	fcall	__Umul8_16
  3244  014E  0875               	movf	?__Umul8_16+1,w
  3245  014F  0020               	movlb	0	; select bank0
  3246  0150  00C7               	movwf	___flmul@temp+1
  3247  0151  0874               	movf	?__Umul8_16,w
  3248  0152  00C6               	movwf	___flmul@temp
  3249  0153  0846               	movf	___flmul@temp,w
  3250  0154  07BD               	addwf	___flmul@grs,f
  3251  0155  0847               	movf	___flmul@temp+1,w
  3252  0156  3DBE               	addwfc	___flmul@grs+1,f
  3253  0157  3000               	movlw	0
  3254  0158  3DBF               	addwfc	___flmul@grs+2,f
  3255  0159  3DC0               	addwfc	___flmul@grs+3,f
  3256  015A  082F               	movf	___flmul@b+1,w
  3257  015B  00B6               	movwf	??___flmul
  3258  015C  0836               	movf	??___flmul,w
  3259  015D  00F4               	movwf	__Umul8_16@multiplicand
  3260  015E  0834               	movf	___flmul@a+2,w
  3261  015F  267A               	fcall	__Umul8_16
  3262  0160  0875               	movf	?__Umul8_16+1,w
  3263  0161  0020               	movlb	0	; select bank0
  3264  0162  00C7               	movwf	___flmul@temp+1
  3265  0163  0874               	movf	?__Umul8_16,w
  3266  0164  00C6               	movwf	___flmul@temp
  3267  0165  0846               	movf	___flmul@temp,w
  3268  0166  07C2               	addwf	___flmul@prod,f
  3269  0167  0847               	movf	___flmul@temp+1,w
  3270  0168  3DC3               	addwfc	___flmul@prod+1,f
  3271  0169  3000               	movlw	0
  3272  016A  3DC4               	addwfc	___flmul@prod+2,f
  3273  016B  3DC5               	addwfc	___flmul@prod+3,f
  3274  016C  0830               	movf	___flmul@b+2,w
  3275  016D  00B6               	movwf	??___flmul
  3276  016E  0836               	movf	??___flmul,w
  3277  016F  00F4               	movwf	__Umul8_16@multiplicand
  3278  0170  0833               	movf	___flmul@a+1,w
  3279  0171  267A               	fcall	__Umul8_16
  3280  0172  0875               	movf	?__Umul8_16+1,w
  3281  0173  0020               	movlb	0	; select bank0
  3282  0174  00C7               	movwf	___flmul@temp+1
  3283  0175  0874               	movf	?__Umul8_16,w
  3284  0176  00C6               	movwf	___flmul@temp
  3285  0177  0846               	movf	___flmul@temp,w
  3286  0178  07C2               	addwf	___flmul@prod,f
  3287  0179  0847               	movf	___flmul@temp+1,w
  3288  017A  3DC3               	addwfc	___flmul@prod+1,f
  3289  017B  3000               	movlw	0
  3290  017C  3DC4               	addwfc	___flmul@prod+2,f
  3291  017D  3DC5               	addwfc	___flmul@prod+3,f
  3292  017E  0830               	movf	___flmul@b+2,w
  3293  017F  00B6               	movwf	??___flmul
  3294  0180  0836               	movf	??___flmul,w
  3295  0181  00F4               	movwf	__Umul8_16@multiplicand
  3296  0182  0834               	movf	___flmul@a+2,w
  3297  0183  267A               	fcall	__Umul8_16
  3298  0184  0875               	movf	?__Umul8_16+1,w
  3299  0185  0020               	movlb	0	; select bank0
  3300  0186  00C7               	movwf	___flmul@temp+1
  3301  0187  0874               	movf	?__Umul8_16,w
  3302  0188  00C6               	movwf	___flmul@temp
  3303  0189  0846               	movf	___flmul@temp,w
  3304  018A  00B6               	movwf	??___flmul
  3305  018B  0847               	movf	___flmul@temp+1,w
  3306  018C  00B7               	movwf	??___flmul+1
  3307  018D  01B8               	clrf	??___flmul+2
  3308  018E  01B9               	clrf	??___flmul+3
  3309  018F  3008               	movlw	8
  3310  0190                     u3015:	
  3311  0190  35B6               	lslf	??___flmul,f
  3312  0191  0DB7               	rlf	??___flmul+1,f
  3313  0192  0DB8               	rlf	??___flmul+2,f
  3314  0193  0DB9               	rlf	??___flmul+3,f
  3315  0194  0B89               	decfsz	9,f
  3316  0195  2990               	goto	u3015
  3317  0196  0836               	movf	??___flmul,w
  3318  0197  07C2               	addwf	___flmul@prod,f
  3319  0198  0837               	movf	??___flmul+1,w
  3320  0199  3DC3               	addwfc	___flmul@prod+1,f
  3321  019A  0838               	movf	??___flmul+2,w
  3322  019B  3DC4               	addwfc	___flmul@prod+2,f
  3323  019C  0839               	movf	??___flmul+3,w
  3324  019D  3DC5               	addwfc	___flmul@prod+3,f
  3325  019E  083D               	movf	___flmul@grs,w
  3326  019F  00B6               	movwf	??___flmul
  3327  01A0  083E               	movf	___flmul@grs+1,w
  3328  01A1  00B7               	movwf	??___flmul+1
  3329  01A2  083F               	movf	___flmul@grs+2,w
  3330  01A3  00B8               	movwf	??___flmul+2
  3331  01A4  0840               	movf	___flmul@grs+3,w
  3332  01A5  00B9               	movwf	??___flmul+3
  3333  01A6  3018               	movlw	24
  3334  01A7                     u3025:	
  3335  01A7  36B9               	lsrf	??___flmul+3,f
  3336  01A8  0CB8               	rrf	??___flmul+2,f
  3337  01A9  0CB7               	rrf	??___flmul+1,f
  3338  01AA  0CB6               	rrf	??___flmul,f
  3339  01AB  0B89               	decfsz	9,f
  3340  01AC  29A7               	goto	u3025
  3341  01AD  0836               	movf	??___flmul,w
  3342  01AE  07C2               	addwf	___flmul@prod,f
  3343  01AF  0837               	movf	??___flmul+1,w
  3344  01B0  3DC3               	addwfc	___flmul@prod+1,f
  3345  01B1  0838               	movf	??___flmul+2,w
  3346  01B2  3DC4               	addwfc	___flmul@prod+2,f
  3347  01B3  0839               	movf	??___flmul+3,w
  3348  01B4  3DC5               	addwfc	___flmul@prod+3,f
  3349  01B5  3008               	movlw	8
  3350  01B6                     u3035:	
  3351  01B6  35BD               	lslf	___flmul@grs,f
  3352  01B7  0DBE               	rlf	___flmul@grs+1,f
  3353  01B8  0DBF               	rlf	___flmul@grs+2,f
  3354  01B9  0DC0               	rlf	___flmul@grs+3,f
  3355  01BA  0B89               	decfsz	9,f
  3356  01BB  29B6               	goto	u3035
  3357  01BC  0841               	movf	___flmul@bexp,w
  3358  01BD  073C               	addwf	___flmul@aexp,w
  3359  01BE  00B6               	movwf	??___flmul
  3360  01BF  01B7               	clrf	??___flmul+1
  3361  01C0  0DB7               	rlf	??___flmul+1,f
  3362  01C1  0836               	movf	??___flmul,w
  3363  01C2  3E82               	addlw	130
  3364  01C3  00C6               	movwf	___flmul@temp
  3365  01C4  30FF               	movlw	255
  3366  01C5  3D37               	addwfc	??___flmul+1,w
  3367  01C6  00C7               	movwf	___flmul@temp+1
  3368  01C7                     l2575:	
  3369  01C7  1BC4               	btfsc	___flmul@prod+2,7
  3370  01C8  29DE               	goto	l2577
  3371  01C9  3001               	movlw	1
  3372  01CA                     u3045:	
  3373  01CA  35C2               	lslf	___flmul@prod,f
  3374  01CB  0DC3               	rlf	___flmul@prod+1,f
  3375  01CC  0DC4               	rlf	___flmul@prod+2,f
  3376  01CD  0DC5               	rlf	___flmul@prod+3,f
  3377  01CE  0B89               	decfsz	9,f
  3378  01CF  29CA               	goto	u3045
  3379  01D0  1BC0               	btfsc	___flmul@grs+3,7
  3380  01D1  1442               	bsf	___flmul@prod,0
  3381  01D2  3001               	movlw	1
  3382  01D3                     u3065:	
  3383  01D3  35BD               	lslf	___flmul@grs,f
  3384  01D4  0DBE               	rlf	___flmul@grs+1,f
  3385  01D5  0DBF               	rlf	___flmul@grs+2,f
  3386  01D6  0DC0               	rlf	___flmul@grs+3,f
  3387  01D7  0B89               	decfsz	9,f
  3388  01D8  29D3               	goto	u3065
  3389  01D9  30FF               	movlw	255
  3390  01DA  07C6               	addwf	___flmul@temp,f
  3391  01DB  30FF               	movlw	255
  3392  01DC  3DC7               	addwfc	___flmul@temp+1,f
  3393  01DD  29C7               	goto	l2575
  3394  01DE                     l2577:	
  3395  01DE  01BC               	clrf	___flmul@aexp
  3396  01DF  1FC0               	btfss	___flmul@grs+3,7
  3397  01E0  29F7               	goto	l2587
  3398  01E1  30FF               	movlw	255
  3399  01E2  053D               	andwf	___flmul@grs,w
  3400  01E3  00B6               	movwf	??___flmul
  3401  01E4  30FF               	movlw	255
  3402  01E5  053E               	andwf	___flmul@grs+1,w
  3403  01E6  00B7               	movwf	??___flmul+1
  3404  01E7  30FF               	movlw	255
  3405  01E8  053F               	andwf	___flmul@grs+2,w
  3406  01E9  00B8               	movwf	??___flmul+2
  3407  01EA  307F               	movlw	127
  3408  01EB  0540               	andwf	___flmul@grs+3,w
  3409  01EC  00B9               	movwf	??___flmul+3
  3410  01ED  0839               	movf	??___flmul+3,w
  3411  01EE  0438               	iorwf	??___flmul+2,w
  3412  01EF  0437               	iorwf	??___flmul+1,w
  3413  01F0  0436               	iorwf	??___flmul,w
  3414  01F1  1903               	skipnz
  3415  01F2  1842               	btfsc	___flmul@prod,0
  3416  01F3  29F5               	goto	l2583
  3417  01F4  29F7               	goto	l2587
  3418  01F5                     l2583:	
  3419  01F5  01BC               	clrf	___flmul@aexp
  3420  01F6  0ABC               	incf	___flmul@aexp,f
  3421  01F7                     l2587:	
  3422  01F7  083C               	movf	___flmul@aexp,w
  3423  01F8  1903               	btfsc	3,2
  3424  01F9  2A20               	goto	l2597
  3425  01FA  3001               	movlw	1
  3426  01FB  07C2               	addwf	___flmul@prod,f
  3427  01FC  3000               	movlw	0
  3428  01FD  3DC3               	addwfc	___flmul@prod+1,f
  3429  01FE  3000               	movlw	0
  3430  01FF  3DC4               	addwfc	___flmul@prod+2,f
  3431  0200  3000               	movlw	0
  3432  0201  3DC5               	addwfc	___flmul@prod+3,f
  3433  0202  1C45               	btfss	___flmul@prod+3,0
  3434  0203  2A20               	goto	l2597
  3435  0204  0842               	movf	___flmul@prod,w
  3436  0205  00B6               	movwf	??___flmul
  3437  0206  0843               	movf	___flmul@prod+1,w
  3438  0207  00B7               	movwf	??___flmul+1
  3439  0208  0844               	movf	___flmul@prod+2,w
  3440  0209  00B8               	movwf	??___flmul+2
  3441  020A  0845               	movf	___flmul@prod+3,w
  3442  020B  00B9               	movwf	??___flmul+3
  3443  020C  3001               	movlw	1
  3444  020D  00BA               	movwf	??___flmul+4
  3445  020E                     u3135:	
  3446  020E  37B9               	asrf	??___flmul+3,f
  3447  020F  0CB8               	rrf	??___flmul+2,f
  3448  0210  0CB7               	rrf	??___flmul+1,f
  3449  0211  0CB6               	rrf	??___flmul,f
  3450  0212  0BBA               	decfsz	??___flmul+4,f
  3451  0213  2A0E               	goto	u3135
  3452  0214  0839               	movf	??___flmul+3,w
  3453  0215  00C5               	movwf	___flmul@prod+3
  3454  0216  0838               	movf	??___flmul+2,w
  3455  0217  00C4               	movwf	___flmul@prod+2
  3456  0218  0837               	movf	??___flmul+1,w
  3457  0219  00C3               	movwf	___flmul@prod+1
  3458  021A  0836               	movf	??___flmul,w
  3459  021B  00C2               	movwf	___flmul@prod
  3460  021C  3001               	movlw	1
  3461  021D  07C6               	addwf	___flmul@temp,f
  3462  021E  3000               	movlw	0
  3463  021F  3DC7               	addwfc	___flmul@temp+1,f
  3464  0220                     l2597:	
  3465  0220  0847               	movf	___flmul@temp+1,w
  3466  0221  3A80               	xorlw	128
  3467  0222  00B6               	movwf	??___flmul
  3468  0223  3080               	movlw	128
  3469  0224  0236               	subwf	??___flmul,w
  3470  0225  1D03               	skipz
  3471  0226  2A29               	goto	u3145
  3472  0227  30FF               	movlw	255
  3473  0228  0246               	subwf	___flmul@temp,w
  3474  0229                     u3145:	
  3475  0229  1C03               	skipc
  3476  022A  2A35               	goto	l2601
  3477  022B  307F               	movlw	127
  3478  022C  0020               	movlb	0	; select bank0
  3479  022D  00C5               	movwf	___flmul@prod+3
  3480  022E  3080               	movlw	128
  3481  022F  00C4               	movwf	___flmul@prod+2
  3482  0230  3000               	movlw	0
  3483  0231  00C3               	movwf	___flmul@prod+1
  3484  0232  3000               	movlw	0
  3485  0233  00C2               	movwf	___flmul@prod
  3486  0234  2A5F               	goto	l786
  3487  0235                     l2601:	
  3488  0235  0020               	movlb	0	; select bank0
  3489  0236  0847               	movf	___flmul@temp+1,w
  3490  0237  3A80               	xorlw	128
  3491  0238  00B6               	movwf	??___flmul
  3492  0239  3080               	movlw	128
  3493  023A  0236               	subwf	??___flmul,w
  3494  023B  1D03               	skipz
  3495  023C  2A3F               	goto	u3155
  3496  023D  3001               	movlw	1
  3497  023E  0246               	subwf	___flmul@temp,w
  3498  023F                     u3155:	
  3499  023F  1803               	skipnc
  3500  0240  2A4C               	goto	l2607
  3501  0241  3000               	movlw	0
  3502  0242  0020               	movlb	0	; select bank0
  3503  0243  00C5               	movwf	___flmul@prod+3
  3504  0244  3000               	movlw	0
  3505  0245  00C4               	movwf	___flmul@prod+2
  3506  0246  3000               	movlw	0
  3507  0247  00C3               	movwf	___flmul@prod+1
  3508  0248  3000               	movlw	0
  3509  0249  00C2               	movwf	___flmul@prod
  3510  024A  01BB               	clrf	___flmul@sign
  3511  024B  2A5F               	goto	l786
  3512  024C                     l2607:	
  3513  024C  0020               	movlb	0	; select bank0
  3514  024D  0846               	movf	___flmul@temp,w
  3515  024E  00B6               	movwf	??___flmul
  3516  024F  0836               	movf	??___flmul,w
  3517  0250  00C1               	movwf	___flmul@bexp
  3518  0251  30FF               	movlw	255
  3519  0252  05C2               	andwf	___flmul@prod,f
  3520  0253  30FF               	movlw	255
  3521  0254  05C3               	andwf	___flmul@prod+1,f
  3522  0255  307F               	movlw	127
  3523  0256  05C4               	andwf	___flmul@prod+2,f
  3524  0257  3000               	movlw	0
  3525  0258  05C5               	andwf	___flmul@prod+3,f
  3526  0259  1841               	btfsc	___flmul@bexp,0
  3527  025A  17C4               	bsf	___flmul@prod+2,7
  3528  025B  3641               	lsrf	___flmul@bexp,w
  3529  025C  00B6               	movwf	??___flmul
  3530  025D  0836               	movf	??___flmul,w
  3531  025E  00C5               	movwf	___flmul@prod+3
  3532  025F                     l786:	
  3533  025F  083B               	movf	___flmul@sign,w
  3534  0260  00B6               	movwf	??___flmul
  3535  0261  0836               	movf	??___flmul,w
  3536  0262  04C5               	iorwf	___flmul@prod+3,f
  3537  0263  0845               	movf	___flmul@prod+3,w
  3538  0264  00B1               	movwf	?___flmul+3
  3539  0265  0844               	movf	___flmul@prod+2,w
  3540  0266  00B0               	movwf	?___flmul+2
  3541  0267  0843               	movf	___flmul@prod+1,w
  3542  0268  00AF               	movwf	?___flmul+1
  3543  0269  0842               	movf	___flmul@prod,w
  3544  026A  00AE               	movwf	?___flmul
  3545  026B  0008               	return
  3546  026C                     __end_of___flmul:	
  3547                           
  3548                           	psect	text16
  3549  067A                     __ptext16:	
  3550 ;; *************** function __Umul8_16 *****************
  3551 ;; Defined at:
  3552 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul8_16.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  multiplier      1    wreg     unsigned char 
  3555 ;;  multiplicand    1    4[COMMON] unsigned char 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  multiplier      1    6[BANK0 ] unsigned char 
  3558 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  3559 ;;  product         2    2[BANK0 ] unsigned int 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    4[COMMON] unsigned int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3569 ;;      Params:         2       0       0       0
  3570 ;;      Locals:         0       5       0       0
  3571 ;;      Temps:          0       2       0       0
  3572 ;;      Totals:         2       7       0       0
  3573 ;;Total ram usage:        9 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    4
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		___flmul
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function __Umul8_16
  3585  067A                     __Umul8_16:	
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3589                           ;__Umul8_16@multiplier stored from wreg
  3590  067A  0020               	movlb	0	; select bank0
  3591  067B  00A6               	movwf	__Umul8_16@multiplier
  3592  067C  01A2               	clrf	__Umul8_16@product
  3593  067D  01A3               	clrf	__Umul8_16@product+1
  3594  067E  0874               	movf	__Umul8_16@multiplicand,w
  3595  067F  00A0               	movwf	??__Umul8_16
  3596  0680  01A1               	clrf	??__Umul8_16+1
  3597  0681  0820               	movf	??__Umul8_16,w
  3598  0682  00A4               	movwf	__Umul8_16@word_mpld
  3599  0683  0821               	movf	??__Umul8_16+1,w
  3600  0684  00A5               	movwf	__Umul8_16@word_mpld+1
  3601  0685                     l2239:	
  3602  0685  1C26               	btfss	__Umul8_16@multiplier,0
  3603  0686  2E8B               	goto	l831
  3604  0687  0824               	movf	__Umul8_16@word_mpld,w
  3605  0688  07A2               	addwf	__Umul8_16@product,f
  3606  0689  0825               	movf	__Umul8_16@word_mpld+1,w
  3607  068A  3DA3               	addwfc	__Umul8_16@product+1,f
  3608  068B                     l831:	
  3609  068B  3001               	movlw	1
  3610  068C                     u2365:	
  3611  068C  35A4               	lslf	__Umul8_16@word_mpld,f
  3612  068D  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  3613  068E  0B89               	decfsz	9,f
  3614  068F  2E8C               	goto	u2365
  3615  0690  1003               	clrc
  3616  0691  0CA6               	rrf	__Umul8_16@multiplier,f
  3617  0692  0826               	movf	__Umul8_16@multiplier,w
  3618  0693  1D03               	btfss	3,2
  3619  0694  2E85               	goto	l2239
  3620  0695  0823               	movf	__Umul8_16@product+1,w
  3621  0696  00F5               	movwf	?__Umul8_16+1
  3622  0697  0822               	movf	__Umul8_16@product,w
  3623  0698  00F4               	movwf	?__Umul8_16
  3624  0699  0008               	return
  3625  069A                     __end_of__Umul8_16:	
  3626                           
  3627                           	psect	text17
  3628  026C                     __ptext17:	
  3629 ;; *************** function ___fladd *****************
  3630 ;; Defined at:
  3631 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcadd.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  b               4   40[BANK0 ] unsigned int 
  3634 ;;  a               4   44[BANK0 ] unsigned int 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  grs             1   59[BANK0 ] unsigned char 
  3637 ;;  bexp            1   58[BANK0 ] unsigned char 
  3638 ;;  aexp            1   57[BANK0 ] unsigned char 
  3639 ;;  signs           1   56[BANK0 ] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  4   40[BANK0 ] unsigned char 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3649 ;;      Params:         0       8       0       0
  3650 ;;      Locals:         0       4       0       0
  3651 ;;      Temps:          0       8       0       0
  3652 ;;      Totals:         0      20       0       0
  3653 ;;Total ram usage:       20 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    4
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_UARTUpdatePPM
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function ___fladd
  3665  026C                     ___fladd:	
  3666                           
  3667                           ;incstack = 0
  3668                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3669  026C  0020               	movlb	0	; select bank0
  3670  026D  084B               	movf	___fladd@b+3,w
  3671  026E  3980               	andlw	128
  3672  026F  00D0               	movwf	??___fladd
  3673  0270  0850               	movf	??___fladd,w
  3674  0271  00D8               	movwf	___fladd@signs
  3675  0272  354B               	lslf	___fladd@b+3,w
  3676  0273  00D0               	movwf	??___fladd
  3677  0274  0850               	movf	??___fladd,w
  3678  0275  00DA               	movwf	___fladd@bexp
  3679  0276  1BCA               	btfsc	___fladd@b+2,7
  3680  0277  145A               	bsf	___fladd@bexp,0
  3681  0278  085A               	movf	___fladd@bexp,w
  3682  0279  1903               	btfsc	3,2
  3683  027A  2A89               	goto	l2303
  3684  027B  0A5A               	incf	___fladd@bexp,w
  3685  027C  1D03               	btfss	3,2
  3686  027D  2A86               	goto	l2299
  3687  027E  3000               	movlw	0
  3688  027F  00CB               	movwf	___fladd@b+3
  3689  0280  3000               	movlw	0
  3690  0281  00CA               	movwf	___fladd@b+2
  3691  0282  3000               	movlw	0
  3692  0283  00C9               	movwf	___fladd@b+1
  3693  0284  3000               	movlw	0
  3694  0285  00C8               	movwf	___fladd@b
  3695  0286                     l2299:	
  3696  0286  17CA               	bsf	___fladd@b+2,7
  3697  0287  01CB               	clrf	___fladd@b+3
  3698  0288  2A91               	goto	l2305
  3699  0289                     l2303:	
  3700  0289  3000               	movlw	0
  3701  028A  00CB               	movwf	___fladd@b+3
  3702  028B  3000               	movlw	0
  3703  028C  00CA               	movwf	___fladd@b+2
  3704  028D  3000               	movlw	0
  3705  028E  00C9               	movwf	___fladd@b+1
  3706  028F  3000               	movlw	0
  3707  0290  00C8               	movwf	___fladd@b
  3708  0291                     l2305:	
  3709  0291  084F               	movf	___fladd@a+3,w
  3710  0292  3980               	andlw	128
  3711  0293  00D0               	movwf	??___fladd
  3712  0294  0850               	movf	??___fladd,w
  3713  0295  00D9               	movwf	___fladd@aexp
  3714  0296  0859               	movf	___fladd@aexp,w
  3715  0297  0658               	xorwf	___fladd@signs,w
  3716  0298  1D03               	btfss	3,2
  3717  0299  1758               	bsf	___fladd@signs,6
  3718  029A  354F               	lslf	___fladd@a+3,w
  3719  029B  00D0               	movwf	??___fladd
  3720  029C  0850               	movf	??___fladd,w
  3721  029D  00D9               	movwf	___fladd@aexp
  3722  029E  1BCE               	btfsc	___fladd@a+2,7
  3723  029F  1459               	bsf	___fladd@aexp,0
  3724  02A0  0859               	movf	___fladd@aexp,w
  3725  02A1  1903               	btfsc	3,2
  3726  02A2  2AB1               	goto	l2327
  3727  02A3  0A59               	incf	___fladd@aexp,w
  3728  02A4  1D03               	btfss	3,2
  3729  02A5  2AAE               	goto	l2323
  3730  02A6  3000               	movlw	0
  3731  02A7  00CF               	movwf	___fladd@a+3
  3732  02A8  3000               	movlw	0
  3733  02A9  00CE               	movwf	___fladd@a+2
  3734  02AA  3000               	movlw	0
  3735  02AB  00CD               	movwf	___fladd@a+1
  3736  02AC  3000               	movlw	0
  3737  02AD  00CC               	movwf	___fladd@a
  3738  02AE                     l2323:	
  3739  02AE  17CE               	bsf	___fladd@a+2,7
  3740  02AF  01CF               	clrf	___fladd@a+3
  3741  02B0  2AB9               	goto	l678
  3742  02B1                     l2327:	
  3743  02B1  3000               	movlw	0
  3744  02B2  00CF               	movwf	___fladd@a+3
  3745  02B3  3000               	movlw	0
  3746  02B4  00CE               	movwf	___fladd@a+2
  3747  02B5  3000               	movlw	0
  3748  02B6  00CD               	movwf	___fladd@a+1
  3749  02B7  3000               	movlw	0
  3750  02B8  00CC               	movwf	___fladd@a
  3751  02B9                     l678:	
  3752  02B9  085A               	movf	___fladd@bexp,w
  3753  02BA  0259               	subwf	___fladd@aexp,w
  3754  02BB  1803               	skipnc
  3755  02BC  2AFF               	goto	l2363
  3756  02BD  1F58               	btfss	___fladd@signs,6
  3757  02BE  2AC3               	goto	l2333
  3758  02BF  3080               	movlw	128
  3759  02C0  00D0               	movwf	??___fladd
  3760  02C1  0850               	movf	??___fladd,w
  3761  02C2  06D8               	xorwf	___fladd@signs,f
  3762  02C3                     l2333:	
  3763  02C3  085A               	movf	___fladd@bexp,w
  3764  02C4  00D0               	movwf	??___fladd
  3765  02C5  0850               	movf	??___fladd,w
  3766  02C6  00DB               	movwf	___fladd@grs
  3767  02C7  0859               	movf	___fladd@aexp,w
  3768  02C8  00D0               	movwf	??___fladd
  3769  02C9  0850               	movf	??___fladd,w
  3770  02CA  00DA               	movwf	___fladd@bexp
  3771  02CB  085B               	movf	___fladd@grs,w
  3772  02CC  00D0               	movwf	??___fladd
  3773  02CD  0850               	movf	??___fladd,w
  3774  02CE  00D9               	movwf	___fladd@aexp
  3775  02CF  0848               	movf	___fladd@b,w
  3776  02D0  00D0               	movwf	??___fladd
  3777  02D1  0850               	movf	??___fladd,w
  3778  02D2  00DB               	movwf	___fladd@grs
  3779  02D3  084C               	movf	___fladd@a,w
  3780  02D4  00D0               	movwf	??___fladd
  3781  02D5  0850               	movf	??___fladd,w
  3782  02D6  00C8               	movwf	___fladd@b
  3783  02D7  085B               	movf	___fladd@grs,w
  3784  02D8  00D0               	movwf	??___fladd
  3785  02D9  0850               	movf	??___fladd,w
  3786  02DA  00CC               	movwf	___fladd@a
  3787  02DB  0849               	movf	___fladd@b+1,w
  3788  02DC  00D0               	movwf	??___fladd
  3789  02DD  0850               	movf	??___fladd,w
  3790  02DE  00DB               	movwf	___fladd@grs
  3791  02DF  084D               	movf	___fladd@a+1,w
  3792  02E0  00D0               	movwf	??___fladd
  3793  02E1  0850               	movf	??___fladd,w
  3794  02E2  00C9               	movwf	___fladd@b+1
  3795  02E3  085B               	movf	___fladd@grs,w
  3796  02E4  00D0               	movwf	??___fladd
  3797  02E5  0850               	movf	??___fladd,w
  3798  02E6  00CD               	movwf	___fladd@a+1
  3799  02E7  084A               	movf	___fladd@b+2,w
  3800  02E8  00D0               	movwf	??___fladd
  3801  02E9  0850               	movf	??___fladd,w
  3802  02EA  00DB               	movwf	___fladd@grs
  3803  02EB  084E               	movf	___fladd@a+2,w
  3804  02EC  00D0               	movwf	??___fladd
  3805  02ED  0850               	movf	??___fladd,w
  3806  02EE  00CA               	movwf	___fladd@b+2
  3807  02EF  085B               	movf	___fladd@grs,w
  3808  02F0  00D0               	movwf	??___fladd
  3809  02F1  0850               	movf	??___fladd,w
  3810  02F2  00CE               	movwf	___fladd@a+2
  3811  02F3  084B               	movf	___fladd@b+3,w
  3812  02F4  00D0               	movwf	??___fladd
  3813  02F5  0850               	movf	??___fladd,w
  3814  02F6  00DB               	movwf	___fladd@grs
  3815  02F7  084F               	movf	___fladd@a+3,w
  3816  02F8  00D0               	movwf	??___fladd
  3817  02F9  0850               	movf	??___fladd,w
  3818  02FA  00CB               	movwf	___fladd@b+3
  3819  02FB  085B               	movf	___fladd@grs,w
  3820  02FC  00D0               	movwf	??___fladd
  3821  02FD  0850               	movf	??___fladd,w
  3822  02FE  00CF               	movwf	___fladd@a+3
  3823  02FF                     l2363:	
  3824  02FF  01DB               	clrf	___fladd@grs
  3825  0300  0859               	movf	___fladd@aexp,w
  3826  0301  00D0               	movwf	??___fladd
  3827  0302  01D1               	clrf	??___fladd+1
  3828  0303  0851               	movf	??___fladd+1,w
  3829  0304  00D3               	movwf	??___fladd+3
  3830  0305  085A               	movf	___fladd@bexp,w
  3831  0306  0250               	subwf	??___fladd,w
  3832  0307  00D2               	movwf	??___fladd+2
  3833  0308  1C03               	skipc
  3834  0309  03D3               	decf	??___fladd+3,f
  3835  030A  0853               	movf	??___fladd+3,w
  3836  030B  3A80               	xorlw	128
  3837  030C  00D4               	movwf	??___fladd+4
  3838  030D  3080               	movlw	128
  3839  030E  0254               	subwf	??___fladd+4,w
  3840  030F  1D03               	skipz
  3841  0310  2B13               	goto	u2575
  3842  0311  301A               	movlw	26
  3843  0312  0252               	subwf	??___fladd+2,w
  3844  0313                     u2575:	
  3845  0313  1C03               	skipc
  3846  0314  2B47               	goto	l2381
  3847  0315  0020               	movlb	0	; select bank0
  3848  0316  084B               	movf	___fladd@b+3,w
  3849  0317  044A               	iorwf	___fladd@b+2,w
  3850  0318  0449               	iorwf	___fladd@b+1,w
  3851  0319  0448               	iorwf	___fladd@b,w
  3852  031A  1903               	btfsc	3,2
  3853  031B  2B1E               	goto	u2580
  3854  031C  3001               	movlw	1
  3855  031D  2B1F               	goto	u2590
  3856  031E                     u2580:	
  3857  031E  3000               	movlw	0
  3858  031F                     u2590:	
  3859  031F  00D0               	movwf	??___fladd
  3860  0320  0850               	movf	??___fladd,w
  3861  0321  00DB               	movwf	___fladd@grs
  3862  0322  3000               	movlw	0
  3863  0323  00CB               	movwf	___fladd@b+3
  3864  0324  3000               	movlw	0
  3865  0325  00CA               	movwf	___fladd@b+2
  3866  0326  3000               	movlw	0
  3867  0327  00C9               	movwf	___fladd@b+1
  3868  0328  3000               	movlw	0
  3869  0329  00C8               	movwf	___fladd@b
  3870  032A  0859               	movf	___fladd@aexp,w
  3871  032B  00D0               	movwf	??___fladd
  3872  032C  0850               	movf	??___fladd,w
  3873  032D  00DA               	movwf	___fladd@bexp
  3874  032E  2B4C               	goto	l682
  3875  032F                     l684:	
  3876  032F  1C5B               	btfss	___fladd@grs,0
  3877  0330  2B37               	goto	l2371
  3878  0331  365B               	lsrf	___fladd@grs,w
  3879  0332  3801               	iorlw	1
  3880  0333  00D0               	movwf	??___fladd
  3881  0334  0850               	movf	??___fladd,w
  3882  0335  00DB               	movwf	___fladd@grs
  3883  0336  2B39               	goto	l2373
  3884  0337                     l2371:	
  3885  0337  1003               	clrc
  3886  0338  0CDB               	rrf	___fladd@grs,f
  3887  0339                     l2373:	
  3888  0339  1848               	btfsc	___fladd@b,0
  3889  033A  17DB               	bsf	___fladd@grs,7
  3890  033B  3001               	movlw	1
  3891  033C  00D0               	movwf	??___fladd
  3892  033D                     u2625:	
  3893  033D  37CB               	asrf	___fladd@b+3,f
  3894  033E  0CCA               	rrf	___fladd@b+2,f
  3895  033F  0CC9               	rrf	___fladd@b+1,f
  3896  0340  0CC8               	rrf	___fladd@b,f
  3897  0341  0BD0               	decfsz	??___fladd& (0+127),f
  3898  0342  2B3D               	goto	u2625
  3899  0343  3001               	movlw	1
  3900  0344  00D0               	movwf	??___fladd
  3901  0345  0850               	movf	??___fladd,w
  3902  0346  07DA               	addwf	___fladd@bexp,f
  3903  0347                     l2381:	
  3904  0347  0020               	movlb	0	; select bank0
  3905  0348  0859               	movf	___fladd@aexp,w
  3906  0349  025A               	subwf	___fladd@bexp,w
  3907  034A  1C03               	skipc
  3908  034B  2B2F               	goto	l684
  3909  034C                     l682:	
  3910  034C  1B58               	btfsc	___fladd@signs,6
  3911  034D  2B7D               	goto	l2407
  3912  034E  085A               	movf	___fladd@bexp,w
  3913  034F  1D03               	btfss	3,2
  3914  0350  2B5A               	goto	l2389
  3915  0351  3000               	movlw	0
  3916  0352  00CB               	movwf	?___fladd+3
  3917  0353  3000               	movlw	0
  3918  0354  00CA               	movwf	?___fladd+2
  3919  0355  3000               	movlw	0
  3920  0356  00C9               	movwf	?___fladd+1
  3921  0357  3000               	movlw	0
  3922  0358  00C8               	movwf	?___fladd
  3923  0359  0008               	return
  3924  035A                     l2389:	
  3925  035A  084C               	movf	___fladd@a,w
  3926  035B  07C8               	addwf	___fladd@b,f
  3927  035C  084D               	movf	___fladd@a+1,w
  3928  035D  3DC9               	addwfc	___fladd@b+1,f
  3929  035E  084E               	movf	___fladd@a+2,w
  3930  035F  3DCA               	addwfc	___fladd@b+2,f
  3931  0360  084F               	movf	___fladd@a+3,w
  3932  0361  3DCB               	addwfc	___fladd@b+3,f
  3933  0362  1C4B               	btfss	___fladd@b+3,0
  3934  0363  2BF7               	goto	l2441
  3935  0364  1C5B               	btfss	___fladd@grs,0
  3936  0365  2B6C               	goto	l2397
  3937  0366  365B               	lsrf	___fladd@grs,w
  3938  0367  3801               	iorlw	1
  3939  0368  00D0               	movwf	??___fladd
  3940  0369  0850               	movf	??___fladd,w
  3941  036A  00DB               	movwf	___fladd@grs
  3942  036B  2B6E               	goto	l2399
  3943  036C                     l2397:	
  3944  036C  1003               	clrc
  3945  036D  0CDB               	rrf	___fladd@grs,f
  3946  036E                     l2399:	
  3947  036E  1848               	btfsc	___fladd@b,0
  3948  036F  17DB               	bsf	___fladd@grs,7
  3949  0370  3001               	movlw	1
  3950  0371  00D0               	movwf	??___fladd
  3951  0372                     u2695:	
  3952  0372  37CB               	asrf	___fladd@b+3,f
  3953  0373  0CCA               	rrf	___fladd@b+2,f
  3954  0374  0CC9               	rrf	___fladd@b+1,f
  3955  0375  0CC8               	rrf	___fladd@b,f
  3956  0376  0BD0               	decfsz	??___fladd& (0+127),f
  3957  0377  2B72               	goto	u2695
  3958  0378  3001               	movlw	1
  3959  0379  00D0               	movwf	??___fladd
  3960  037A  0850               	movf	??___fladd,w
  3961  037B  07DA               	addwf	___fladd@bexp,f
  3962  037C  2BF7               	goto	l2441
  3963  037D                     l2407:	
  3964  037D  084B               	movf	___fladd@b+3,w
  3965  037E  3A80               	xorlw	128
  3966  037F  00D0               	movwf	??___fladd
  3967  0380  084F               	movf	___fladd@a+3,w
  3968  0381  3A80               	xorlw	128
  3969  0382  0250               	subwf	??___fladd,w
  3970  0383  1D03               	skipz
  3971  0384  2B8F               	goto	u2703
  3972  0385  084E               	movf	___fladd@a+2,w
  3973  0386  024A               	subwf	___fladd@b+2,w
  3974  0387  1D03               	skipz
  3975  0388  2B8F               	goto	u2703
  3976  0389  084D               	movf	___fladd@a+1,w
  3977  038A  0249               	subwf	___fladd@b+1,w
  3978  038B  1D03               	skipz
  3979  038C  2B8F               	goto	u2703
  3980  038D  084C               	movf	___fladd@a,w
  3981  038E  0248               	subwf	___fladd@b,w
  3982  038F                     u2703:	
  3983  038F  1803               	skipnc
  3984  0390  2BC7               	goto	l2417
  3985  0391  30FF               	movlw	255
  3986  0392  00D0               	movwf	??___fladd
  3987  0393  30FF               	movlw	255
  3988  0394  00D1               	movwf	??___fladd+1
  3989  0395  30FF               	movlw	255
  3990  0396  00D2               	movwf	??___fladd+2
  3991  0397  30FF               	movlw	255
  3992  0398  00D3               	movwf	??___fladd+3
  3993  0399  0848               	movf	___fladd@b,w
  3994  039A  024C               	subwf	___fladd@a,w
  3995  039B  00D4               	movwf	??___fladd+4
  3996  039C  0849               	movf	___fladd@b+1,w
  3997  039D  3B4D               	subwfb	___fladd@a+1,w
  3998  039E  00D5               	movwf	??___fladd+5
  3999  039F  084A               	movf	___fladd@b+2,w
  4000  03A0  3B4E               	subwfb	___fladd@a+2,w
  4001  03A1  00D6               	movwf	??___fladd+6
  4002  03A2  084B               	movf	___fladd@b+3,w
  4003  03A3  3B4F               	subwfb	___fladd@a+3,w
  4004  03A4  00D7               	movwf	??___fladd+7
  4005  03A5  0854               	movf	??___fladd+4,w
  4006  03A6  07D0               	addwf	??___fladd,f
  4007  03A7  0855               	movf	??___fladd+5,w
  4008  03A8  3DD1               	addwfc	??___fladd+1,f
  4009  03A9  0856               	movf	??___fladd+6,w
  4010  03AA  3DD2               	addwfc	??___fladd+2,f
  4011  03AB  0857               	movf	??___fladd+7,w
  4012  03AC  3DD3               	addwfc	??___fladd+3,f
  4013  03AD  0853               	movf	??___fladd+3,w
  4014  03AE  00CB               	movwf	___fladd@b+3
  4015  03AF  0852               	movf	??___fladd+2,w
  4016  03B0  00CA               	movwf	___fladd@b+2
  4017  03B1  0851               	movf	??___fladd+1,w
  4018  03B2  00C9               	movwf	___fladd@b+1
  4019  03B3  0850               	movf	??___fladd,w
  4020  03B4  00C8               	movwf	___fladd@b
  4021  03B5  3080               	movlw	128
  4022  03B6  00D0               	movwf	??___fladd
  4023  03B7  0850               	movf	??___fladd,w
  4024  03B8  06D8               	xorwf	___fladd@signs,f
  4025  03B9  09DB               	comf	___fladd@grs,f
  4026  03BA  0ADB               	incf	___fladd@grs,f
  4027  03BB  085B               	movf	___fladd@grs,w
  4028  03BC  1D03               	btfss	3,2
  4029  03BD  2BCF               	goto	l699
  4030  03BE  3001               	movlw	1
  4031  03BF  07C8               	addwf	___fladd@b,f
  4032  03C0  3000               	movlw	0
  4033  03C1  3DC9               	addwfc	___fladd@b+1,f
  4034  03C2  3000               	movlw	0
  4035  03C3  3DCA               	addwfc	___fladd@b+2,f
  4036  03C4  3000               	movlw	0
  4037  03C5  3DCB               	addwfc	___fladd@b+3,f
  4038  03C6  2BCF               	goto	l699
  4039  03C7                     l2417:	
  4040  03C7  084C               	movf	___fladd@a,w
  4041  03C8  02C8               	subwf	___fladd@b,f
  4042  03C9  084D               	movf	___fladd@a+1,w
  4043  03CA  3BC9               	subwfb	___fladd@b+1,f
  4044  03CB  084E               	movf	___fladd@a+2,w
  4045  03CC  3BCA               	subwfb	___fladd@b+2,f
  4046  03CD  084F               	movf	___fladd@a+3,w
  4047  03CE  3BCB               	subwfb	___fladd@b+3,f
  4048  03CF                     l699:	
  4049  03CF  084B               	movf	___fladd@b+3,w
  4050  03D0  044A               	iorwf	___fladd@b+2,w
  4051  03D1  0449               	iorwf	___fladd@b+1,w
  4052  03D2  0448               	iorwf	___fladd@b,w
  4053  03D3  1D03               	skipz
  4054  03D4  2BF5               	goto	l2439
  4055  03D5  085B               	movf	___fladd@grs,w
  4056  03D6  1D03               	btfss	3,2
  4057  03D7  2BF5               	goto	l2439
  4058  03D8  3000               	movlw	0
  4059  03D9  00CB               	movwf	?___fladd+3
  4060  03DA  3000               	movlw	0
  4061  03DB  00CA               	movwf	?___fladd+2
  4062  03DC  3000               	movlw	0
  4063  03DD  00C9               	movwf	?___fladd+1
  4064  03DE  3000               	movlw	0
  4065  03DF  00C8               	movwf	?___fladd
  4066  03E0  0008               	return
  4067  03E1                     l2425:	
  4068  03E1  3001               	movlw	1
  4069  03E2                     u2745:	
  4070  03E2  35C8               	lslf	___fladd@b,f
  4071  03E3  0DC9               	rlf	___fladd@b+1,f
  4072  03E4  0DCA               	rlf	___fladd@b+2,f
  4073  03E5  0DCB               	rlf	___fladd@b+3,f
  4074  03E6  0B89               	decfsz	9,f
  4075  03E7  2BE2               	goto	u2745
  4076  03E8  1BDB               	btfsc	___fladd@grs,7
  4077  03E9  1448               	bsf	___fladd@b,0
  4078  03EA  1C5B               	btfss	___fladd@grs,0
  4079  03EB  2BEE               	goto	l2433
  4080  03EC  1403               	setc
  4081  03ED  2BEF               	goto	L1
  4082  03EE                     l2433:	
  4083  03EE  1003               	clrc
  4084  03EF                     L1:	
  4085  03EF  0DDB               	rlf	___fladd@grs,f
  4086  03F0  085A               	movf	___fladd@bexp,w
  4087  03F1  1903               	btfsc	3,2
  4088  03F2  2BF5               	goto	l2439
  4089  03F3  3001               	movlw	1
  4090  03F4  02DA               	subwf	___fladd@bexp,f
  4091  03F5                     l2439:	
  4092  03F5  1FCA               	btfss	___fladd@b+2,7
  4093  03F6  2BE1               	goto	l2425
  4094  03F7                     l2441:	
  4095  03F7  01D9               	clrf	___fladd@aexp
  4096  03F8  1FDB               	btfss	___fladd@grs,7
  4097  03F9  2C02               	goto	l2451
  4098  03FA  085B               	movf	___fladd@grs,w
  4099  03FB  397F               	andlw	127
  4100  03FC  1903               	btfsc	3,2
  4101  03FD  1848               	btfsc	___fladd@b,0
  4102  03FE  2C00               	goto	l2447
  4103  03FF  2C02               	goto	l2451
  4104  0400                     l2447:	
  4105  0400  01D9               	clrf	___fladd@aexp
  4106  0401  0AD9               	incf	___fladd@aexp,f
  4107  0402                     l2451:	
  4108  0402  0859               	movf	___fladd@aexp,w
  4109  0403  1903               	btfsc	3,2
  4110  0404  2C2E               	goto	l712
  4111  0405  3001               	movlw	1
  4112  0406  07C8               	addwf	___fladd@b,f
  4113  0407  3000               	movlw	0
  4114  0408  3DC9               	addwfc	___fladd@b+1,f
  4115  0409  3000               	movlw	0
  4116  040A  3DCA               	addwfc	___fladd@b+2,f
  4117  040B  3000               	movlw	0
  4118  040C  3DCB               	addwfc	___fladd@b+3,f
  4119  040D  1C4B               	btfss	___fladd@b+3,0
  4120  040E  2C2E               	goto	l712
  4121  040F  0848               	movf	___fladd@b,w
  4122  0410  00D0               	movwf	??___fladd
  4123  0411  0849               	movf	___fladd@b+1,w
  4124  0412  00D1               	movwf	??___fladd+1
  4125  0413  084A               	movf	___fladd@b+2,w
  4126  0414  00D2               	movwf	??___fladd+2
  4127  0415  084B               	movf	___fladd@b+3,w
  4128  0416  00D3               	movwf	??___fladd+3
  4129  0417  3001               	movlw	1
  4130  0418  00D4               	movwf	??___fladd+4
  4131  0419                     u2845:	
  4132  0419  37D3               	asrf	??___fladd+3,f
  4133  041A  0CD2               	rrf	??___fladd+2,f
  4134  041B  0CD1               	rrf	??___fladd+1,f
  4135  041C  0CD0               	rrf	??___fladd,f
  4136  041D  0BD4               	decfsz	??___fladd+4,f
  4137  041E  2C19               	goto	u2845
  4138  041F  0853               	movf	??___fladd+3,w
  4139  0420  00CB               	movwf	___fladd@b+3
  4140  0421  0852               	movf	??___fladd+2,w
  4141  0422  00CA               	movwf	___fladd@b+2
  4142  0423  0851               	movf	??___fladd+1,w
  4143  0424  00C9               	movwf	___fladd@b+1
  4144  0425  0850               	movf	??___fladd,w
  4145  0426  00C8               	movwf	___fladd@b
  4146  0427  0A5A               	incf	___fladd@bexp,w
  4147  0428  1903               	btfsc	3,2
  4148  0429  2C2E               	goto	l712
  4149  042A  3001               	movlw	1
  4150  042B  00D0               	movwf	??___fladd
  4151  042C  0850               	movf	??___fladd,w
  4152  042D  07DA               	addwf	___fladd@bexp,f
  4153  042E                     l712:	
  4154  042E  0A5A               	incf	___fladd@bexp,w
  4155  042F  1D03               	btfss	3,2
  4156  0430  085A               	movf	___fladd@bexp,w
  4157  0431  1D03               	btfss	3,2
  4158  0432  2C3E               	goto	l2469
  4159  0433  3000               	movlw	0
  4160  0434  00CB               	movwf	___fladd@b+3
  4161  0435  3000               	movlw	0
  4162  0436  00CA               	movwf	___fladd@b+2
  4163  0437  3000               	movlw	0
  4164  0438  00C9               	movwf	___fladd@b+1
  4165  0439  3000               	movlw	0
  4166  043A  00C8               	movwf	___fladd@b
  4167  043B  085A               	movf	___fladd@bexp,w
  4168  043C  1903               	btfsc	3,2
  4169  043D  01D8               	clrf	___fladd@signs
  4170  043E                     l2469:	
  4171  043E  1C5A               	btfss	___fladd@bexp,0
  4172  043F  2C42               	goto	l2473
  4173  0440  17CA               	bsf	___fladd@b+2,7
  4174  0441  2C46               	goto	l720
  4175  0442                     l2473:	
  4176  0442  307F               	movlw	127
  4177  0443  00D0               	movwf	??___fladd
  4178  0444  0850               	movf	??___fladd,w
  4179  0445  05CA               	andwf	___fladd@b+2,f
  4180  0446                     l720:	
  4181  0446  365A               	lsrf	___fladd@bexp,w
  4182  0447  00D0               	movwf	??___fladd
  4183  0448  0850               	movf	??___fladd,w
  4184  0449  00CB               	movwf	___fladd@b+3
  4185  044A  1FD8               	btfss	___fladd@signs,7
  4186  044B  0008               	return
  4187  044C  17CB               	bsf	___fladd@b+3,7
  4188  044D  0008               	return
  4189  044E                     __end_of___fladd:	
  4190                           
  4191                           	psect	text18
  4192  0721                     __ptext18:	
  4193 ;; *************** function _EUSART_Read *****************
  4194 ;; Defined at:
  4195 ;;		line 113 in file "mcc_generated_files/eusart.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      unsigned char 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4209 ;;      Params:         0       0       0       0
  4210 ;;      Locals:         0       0       0       0
  4211 ;;      Temps:          0       0       0       0
  4212 ;;      Totals:         0       0       0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    4
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_LoadByte
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _EUSART_Read
  4225  0721                     _EUSART_Read:	
  4226  0721                     l201:	
  4227                           ;eusart.c: 116: {
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _EUSART_Read: [wreg+status,2]
  4231                           
  4232  0721  0020               	movlb	0	; select bank0
  4233  0722  1E91               	btfss	17,5	;volatile
  4234  0723  2F21               	goto	l201
  4235                           
  4236                           ;eusart.c: 117: };eusart.c: 119: eusartRxLastError.status = 0;
  4237  0724  01EC               	clrf	_eusartRxLastError	;volatile
  4238                           
  4239                           ;eusart.c: 121: if(1 == RCSTAbits.OERR)
  4240  0725  0023               	movlb	3	; select bank3
  4241  0726  1C9D               	btfss	29,1	;volatile
  4242  0727  2F2A               	goto	l2681
  4243                           
  4244                           ;eusart.c: 122: {;eusart.c: 125: RCSTAbits.CREN = 0;
  4245  0728  121D               	bcf	29,4	;volatile
  4246                           
  4247                           ;eusart.c: 126: RCSTAbits.CREN = 1;
  4248  0729  161D               	bsf	29,4	;volatile
  4249  072A                     l2681:	
  4250                           
  4251                           ;eusart.c: 127: };eusart.c: 129: return RCREG;
  4252  072A  0819               	movf	25,w	;volatile
  4253  072B  0008               	return
  4254  072C                     __end_of_EUSART_Read:	
  4255                           
  4256                           	psect	text19
  4257  06B6                     __ptext19:	
  4258 ;; *************** function _Init_UART_Data *****************
  4259 ;; Defined at:
  4260 ;;		line 81 in file "main.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  i               1    5[COMMON] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4274 ;;      Params:         0       0       0       0
  4275 ;;      Locals:         1       0       0       0
  4276 ;;      Temps:          1       0       0       0
  4277 ;;      Totals:         2       0       0       0
  4278 ;;Total ram usage:        2 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    4
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function _Init_UART_Data
  4290  06B6                     _Init_UART_Data:	
  4291                           
  4292                           ;main.c: 83: uartData.uartBufSize = 0;
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in _Init_UART_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  4296  06B6  0021               	movlb	1	; select bank1
  4297  06B7  01CA               	clrf	_uartData^(0+128)	;volatile
  4298                           
  4299                           ;main.c: 86: for (uint8_t i = 0; i < uartData.uartBufSize; i++) {
  4300  06B8  01F5               	clrf	Init_UART_Data@i
  4301  06B9                     l2133:	
  4302  06B9  084A               	movf	_uartData^(0+128),w	;volatile
  4303  06BA  0275               	subwf	Init_UART_Data@i,w
  4304  06BB  1803               	btfsc	3,0
  4305  06BC  2ECA               	goto	l2135
  4306                           
  4307                           ;main.c: 87: uartData.buf[i] = 0x7F;
  4308  06BD  307F               	movlw	127
  4309  06BE  00F4               	movwf	??_Init_UART_Data
  4310  06BF  0875               	movf	Init_UART_Data@i,w
  4311  06C0  3ECB               	addlw	(low ((_uartData| 0+1)))& (0+255)
  4312  06C1  0086               	movwf	6
  4313  06C2  0187               	clrf	7
  4314  06C3  0874               	movf	??_Init_UART_Data,w
  4315  06C4  0081               	movwf	1
  4316  06C5  3001               	movlw	1
  4317  06C6  00F4               	movwf	??_Init_UART_Data
  4318  06C7  0874               	movf	??_Init_UART_Data,w
  4319  06C8  07F5               	addwf	Init_UART_Data@i,f
  4320  06C9  2EB9               	goto	l2133
  4321  06CA                     l2135:	
  4322                           
  4323                           ;main.c: 88: };main.c: 89: uartData.iBuf = 0;
  4324  06CA  01DF               	clrf	(_uartData^(0+128)+21)	;volatile
  4325  06CB  0008               	return
  4326  06CC                     __end_of_Init_UART_Data:	
  4327                           
  4328                           	psect	text20
  4329  0659                     __ptext20:	
  4330 ;; *************** function _Init_PPM_Data *****************
  4331 ;; Defined at:
  4332 ;;		line 65 in file "main.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;		None
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  i               1    0[BANK0 ] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4346 ;;      Params:         0       0       0       0
  4347 ;;      Locals:         0       1       0       0
  4348 ;;      Temps:          2       0       0       0
  4349 ;;      Totals:         2       1       0       0
  4350 ;;Total ram usage:        3 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    4
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_main
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _Init_PPM_Data
  4362  0659                     _Init_PPM_Data:	
  4363                           
  4364                           ;main.c: 67: ppmData.ppmRegSize = 0;
  4365                           
  4366                           ;incstack = 0
  4367                           ; Regs used in _Init_PPM_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  4368  0659  0021               	movlb	1	; select bank1
  4369  065A  01A0               	clrf	_ppmData^(0+128)	;volatile
  4370                           
  4371                           ;main.c: 69: ppmData.reg[0] = 0;
  4372  065B  01A1               	clrf	(_ppmData^(0+128)+1)	;volatile
  4373  065C  01A2               	clrf	((_ppmData+1)^(0+128)+1)	;volatile
  4374                           
  4375                           ;main.c: 70: for(uint8_t i = 1; i < ppmData.ppmRegSize; i++) {
  4376  065D  0020               	movlb	0	; select bank0
  4377  065E  01A0               	clrf	Init_PPM_Data@i
  4378  065F  0AA0               	incf	Init_PPM_Data@i,f
  4379  0660                     l2693:	
  4380  0660  0021               	movlb	1	; select bank1
  4381  0661  0820               	movf	_ppmData^(0+128),w	;volatile
  4382  0662  0020               	movlb	0	; select bank0
  4383  0663  0220               	subwf	Init_PPM_Data@i,w
  4384  0664  1803               	btfsc	3,0
  4385  0665  2E77               	goto	l2695
  4386                           
  4387                           ;main.c: 71: ppmData.reg[i] = 0x7F;
  4388  0666  307F               	movlw	127
  4389  0667  00F4               	movwf	??_Init_PPM_Data
  4390  0668  3000               	movlw	0
  4391  0669  00F5               	movwf	??_Init_PPM_Data+1
  4392  066A  3520               	lslf	Init_PPM_Data@i,w
  4393  066B  3EA1               	addlw	(low ((_ppmData| 0+1)))& (0+255)
  4394  066C  0086               	movwf	6
  4395  066D  0187               	clrf	7
  4396  066E  0874               	movf	??_Init_PPM_Data,w
  4397  066F  3FC0               	movwi [0]fsr1
  4398  0670  0875               	movf	??_Init_PPM_Data+1,w
  4399  0671  3FC1               	movwi [1]fsr1
  4400  0672  3001               	movlw	1
  4401  0673  00F4               	movwf	??_Init_PPM_Data
  4402  0674  0874               	movf	??_Init_PPM_Data,w
  4403  0675  07A0               	addwf	Init_PPM_Data@i,f
  4404  0676  2E60               	goto	l2693
  4405  0677                     l2695:	
  4406                           
  4407                           ;main.c: 72: };main.c: 73: ppmData.iReg = 0;
  4408  0677  0021               	movlb	1	; select bank1
  4409  0678  01C9               	clrf	(_ppmData^(0+128)+41)	;volatile
  4410  0679  0008               	return
  4411  067A                     __end_of_Init_PPM_Data:	
  4412                           
  4413                           	psect	text21
  4414  0757                     __ptext21:	
  4415 ;; *************** function _EUSART_is_rx_ready *****************
  4416 ;; Defined at:
  4417 ;;		line 98 in file "mcc_generated_files/eusart.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4431 ;;      Params:         0       0       0       0
  4432 ;;      Locals:         0       0       0       0
  4433 ;;      Temps:          0       0       0       0
  4434 ;;      Totals:         0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    4
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _EUSART_is_rx_ready
  4447  0757                     _EUSART_is_rx_ready:	
  4448                           
  4449                           ;eusart.c: 100: return PIR1bits.RCIF;
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  4453  0757  0020               	movlb	0	; select bank0
  4454  0758  0E11               	swapf	17,w	;volatile
  4455  0759  0C89               	rrf	9,f
  4456  075A  3901               	andlw	1
  4457  075B  0008               	return
  4458  075C                     __end_of_EUSART_is_rx_ready:	
  4459                           
  4460                           	psect	intentry
  4461  0004                     __pintentry:	
  4462 ;; *************** function _INTERRUPT_InterruptManager *****************
  4463 ;; Defined at:
  4464 ;;		line 61 in file "mcc_generated_files/interrupt_manager.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4478 ;;      Params:         0       0       0       0
  4479 ;;      Locals:         0       0       0       0
  4480 ;;      Temps:          1       0       0       0
  4481 ;;      Totals:         1       0       0       0
  4482 ;;Total ram usage:        1 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    3
  4485 ;; This function calls:
  4486 ;;		_TMR1_ISR
  4487 ;; This function is called by:
  4488 ;;		Interrupt level 1
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492  0004                     _INTERRUPT_InterruptManager:	
  4493                           
  4494                           ;incstack = 0
  4495  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4496                           
  4497                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4498  0005  3180               	pagesel	$
  4499                           
  4500                           ;interrupt_manager.c: 64: saveWREG = WREG;
  4501  0006  0020               	movlb	0	; select bank0
  4502  0007  0809               	movf	9,w	;volatile
  4503  0008  00F3               	movwf	??_INTERRUPT_InterruptManager
  4504  0009  0873               	movf	??_INTERRUPT_InterruptManager,w
  4505  000A  00F8               	movwf	_saveWREG
  4506                           
  4507                           ;interrupt_manager.c: 65: saveBSR = BSR;
  4508  000B  0808               	movf	8,w	;volatile
  4509  000C  00F3               	movwf	??_INTERRUPT_InterruptManager
  4510  000D  0873               	movf	??_INTERRUPT_InterruptManager,w
  4511  000E  00F7               	movwf	_saveBSR
  4512                           
  4513                           ;interrupt_manager.c: 66: saveSTATUS = STATUS;
  4514  000F  0803               	movf	3,w	;volatile
  4515  0010  00F3               	movwf	??_INTERRUPT_InterruptManager
  4516  0011  0873               	movf	??_INTERRUPT_InterruptManager,w
  4517  0012  00F6               	movwf	_saveSTATUS
  4518                           
  4519                           ;interrupt_manager.c: 67: saveFSR0H = FSR0H;
  4520  0013  0805               	movf	5,w	;volatile
  4521  0014  00F3               	movwf	??_INTERRUPT_InterruptManager
  4522  0015  0873               	movf	??_INTERRUPT_InterruptManager,w
  4523  0016  00EB               	movwf	_saveFSR0H
  4524                           
  4525                           ;interrupt_manager.c: 68: saveFSR0L = FSR0L;
  4526  0017  0804               	movf	4,w	;volatile
  4527  0018  00F3               	movwf	??_INTERRUPT_InterruptManager
  4528  0019  0873               	movf	??_INTERRUPT_InterruptManager,w
  4529  001A  00EA               	movwf	_saveFSR0L
  4530                           
  4531                           ;interrupt_manager.c: 69: saveFSR1H = FSR1H;
  4532  001B  0807               	movf	7,w	;volatile
  4533  001C  00F3               	movwf	??_INTERRUPT_InterruptManager
  4534  001D  0873               	movf	??_INTERRUPT_InterruptManager,w
  4535  001E  00E9               	movwf	_saveFSR1H
  4536                           
  4537                           ;interrupt_manager.c: 70: saveFSR1L = FSR1L;
  4538  001F  0806               	movf	6,w	;volatile
  4539  0020  00F3               	movwf	??_INTERRUPT_InterruptManager
  4540  0021  0873               	movf	??_INTERRUPT_InterruptManager,w
  4541  0022  00E8               	movwf	_saveFSR1L
  4542                           
  4543                           ;interrupt_manager.c: 73: if(INTCONbits.PEIE == 1)
  4544  0023  1F0B               	btfss	11,6	;volatile
  4545  0024  282C               	goto	i1l2233
  4546                           
  4547                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits
      +                          .TMR1IF == 1)
  4548  0025  0021               	movlb	1	; select bank1
  4549  0026  1C11               	btfss	17,0	;volatile
  4550  0027  282C               	goto	i1l2233
  4551  0028  0020               	movlb	0	; select bank0
  4552  0029  1C11               	btfss	17,0	;volatile
  4553  002A  282C               	goto	i1l2233
  4554                           
  4555                           ;interrupt_manager.c: 76: {;interrupt_manager.c: 77: TMR1_ISR();
  4556  002B  26F5               	fcall	_TMR1_ISR
  4557  002C                     i1l2233:	
  4558                           ;interrupt_manager.c: 78: }
  4559                           
  4560                           
  4561                           ;interrupt_manager.c: 87: };interrupt_manager.c: 90: FSR0H = saveFSR0H;
  4562  002C  0020               	movlb	0	; select bank0
  4563  002D  086B               	movf	_saveFSR0H,w
  4564  002E  0085               	movwf	5	;volatile
  4565                           
  4566                           ;interrupt_manager.c: 91: FSR0L = saveFSR0L;
  4567  002F  086A               	movf	_saveFSR0L,w
  4568  0030  0084               	movwf	4	;volatile
  4569                           
  4570                           ;interrupt_manager.c: 92: FSR1H = saveFSR1H;
  4571  0031  0869               	movf	_saveFSR1H,w
  4572  0032  0087               	movwf	7	;volatile
  4573                           
  4574                           ;interrupt_manager.c: 93: FSR1L = saveFSR1L;
  4575  0033  0868               	movf	_saveFSR1L,w
  4576  0034  0086               	movwf	6	;volatile
  4577                           
  4578                           ;interrupt_manager.c: 94: STATUS = saveSTATUS;
  4579  0035  0876               	movf	_saveSTATUS,w
  4580  0036  0083               	movwf	3	;volatile
  4581                           
  4582                           ;interrupt_manager.c: 95: BSR = saveBSR;
  4583  0037  0877               	movf	_saveBSR,w
  4584  0038  0088               	movwf	8	;volatile
  4585                           
  4586                           ;interrupt_manager.c: 96: WREG = saveWREG;
  4587  0039  0878               	movf	_saveWREG,w
  4588  003A  0089               	movwf	9	;volatile
  4589  003B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4590  003C  0009               	retfie
  4591  003D                     __end_of_INTERRUPT_InterruptManager:	
  4592                           
  4593                           	psect	text23
  4594  06F5                     __ptext23:	
  4595 ;; *************** function _TMR1_ISR *****************
  4596 ;; Defined at:
  4597 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4611 ;;      Params:         0       0       0       0
  4612 ;;      Locals:         0       0       0       0
  4613 ;;      Temps:          0       0       0       0
  4614 ;;      Totals:         0       0       0       0
  4615 ;;Total ram usage:        0 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    2
  4618 ;; This function calls:
  4619 ;;		Absolute function
  4620 ;;		_TMR1_DefaultInterruptHandler
  4621 ;;		_TMR1_WriteTimer
  4622 ;; This function is called by:
  4623 ;;		_INTERRUPT_InterruptManager
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function _TMR1_ISR
  4629  06F5                     _TMR1_ISR:	
  4630                           
  4631                           ;tmr1.c: 193: PIR1bits.TMR1IF = 0;
  4632                           
  4633                           ;incstack = 0
  4634                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4635  06F5  0020               	movlb	0	; select bank0
  4636  06F6  1011               	bcf	17,0	;volatile
  4637                           
  4638                           ;tmr1.c: 194: TMR1_WriteTimer(timer1ReloadVal);
  4639  06F7  086F               	movf	_timer1ReloadVal+1,w	;volatile
  4640  06F8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4641  06F9  086E               	movf	_timer1ReloadVal,w	;volatile
  4642  06FA  00F0               	movwf	TMR1_WriteTimer@timerVal
  4643  06FB  2707               	fcall	_TMR1_WriteTimer
  4644                           
  4645                           ;tmr1.c: 196: if(TMR1_InterruptHandler)
  4646  06FC  0021               	movlb	1	; select bank1
  4647  06FD  0866               	movf	_TMR1_InterruptHandler^(0+128),w
  4648  06FE  0467               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  4649  06FF  1903               	btfsc	3,2
  4650  0700  0008               	return
  4651                           
  4652                           ;tmr1.c: 197: {;tmr1.c: 198: TMR1_InterruptHandler();
  4653  0701  0867               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  4654  0702  008A               	movwf	10
  4655  0703  0866               	movf	_TMR1_InterruptHandler^(0+128),w
  4656  0704  000A               	callw
  4657  0705  3186               	pagesel	$
  4658  0706  0008               	return
  4659  0707                     __end_of_TMR1_ISR:	
  4660                           
  4661                           	psect	text24
  4662  0619                     __ptext24:	
  4663 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4664 ;; Defined at:
  4665 ;;		line 207 in file "mcc_generated_files/tmr1.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4679 ;;      Params:         0       0       0       0
  4680 ;;      Locals:         0       0       0       0
  4681 ;;      Temps:          1       0       0       0
  4682 ;;      Totals:         1       0       0       0
  4683 ;;Total ram usage:        1 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    1
  4686 ;; This function calls:
  4687 ;;		_TMR1_WriteTimer
  4688 ;; This function is called by:
  4689 ;;		_TMR1_Initialize
  4690 ;;		_TMR1_ISR
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           
  4695                           ;psect for function _TMR1_DefaultInterruptHandler
  4696  0619                     _TMR1_DefaultInterruptHandler:	
  4697                           
  4698                           ;tmr1.c: 214: switch(ppmState) {
  4699                           
  4700                           ;incstack = 0
  4701                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4702  0619  2E4D               	goto	i1l2071
  4703  061A                     i1l73:	
  4704                           ;tmr1.c: 215: case START:
  4705                           
  4706                           
  4707                           ;tmr1.c: 216: LATAbits.LATA4 = 0;
  4708  061A  0022               	movlb	2	; select bank2
  4709  061B  120C               	bcf	12,4	;volatile
  4710                           
  4711                           ;tmr1.c: 217: TMR1_WriteTimer(0x63C0 +~0xF9C0 + ~0xFE60);
  4712  061C  309E               	movlw	158
  4713  061D  00F0               	movwf	TMR1_WriteTimer@timerVal
  4714  061E  306B               	movlw	107
  4715  061F  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4716  0620  2707               	fcall	_TMR1_WriteTimer
  4717                           
  4718                           ;tmr1.c: 218: ppmData.iReg = 0;
  4719  0621  0021               	movlb	1	; select bank1
  4720  0622  01C9               	clrf	(_ppmData^(0+128)+41)	;volatile
  4721  0623                     i1l2053:	
  4722                           
  4723                           ;tmr1.c: 219: ppmState = END;
  4724  0623  3001               	movlw	1
  4725  0624  00F2               	movwf	??_TMR1_DefaultInterruptHandler
  4726  0625  0872               	movf	??_TMR1_DefaultInterruptHandler,w
  4727  0626  00F9               	movwf	_ppmState	;volatile
  4728                           
  4729                           ;tmr1.c: 220: break;
  4730  0627  0008               	return
  4731  0628                     i1l75:	
  4732                           ;tmr1.c: 221: case END:
  4733                           
  4734                           
  4735                           ;tmr1.c: 222: LATAbits.LATA4 = 1;
  4736  0628  0022               	movlb	2	; select bank2
  4737  0629  160C               	bsf	12,4	;volatile
  4738                           
  4739                           ;tmr1.c: 223: TMR1_WriteTimer(0xF9C0 + ~0xFE60);
  4740  062A  305F               	movlw	95
  4741  062B  00F0               	movwf	TMR1_WriteTimer@timerVal
  4742  062C  30FB               	movlw	251
  4743  062D  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4744  062E  2707               	fcall	_TMR1_WriteTimer
  4745                           
  4746                           ;tmr1.c: 224: if(ppmData.iReg < ppmData.ppmRegSize) {
  4747  062F  0021               	movlb	1	; select bank1
  4748  0630  0820               	movf	_ppmData^(0+128),w	;volatile
  4749  0631  0249               	subwf	(_ppmData^(0+128)+41),w	;volatile
  4750  0632  1803               	skipnc
  4751  0633  2E39               	goto	i1l2061
  4752                           
  4753                           ;tmr1.c: 225: ppmState = DATA;
  4754  0634  3002               	movlw	2
  4755  0635  00F2               	movwf	??_TMR1_DefaultInterruptHandler
  4756  0636  0872               	movf	??_TMR1_DefaultInterruptHandler,w
  4757  0637  00F9               	movwf	_ppmState	;volatile
  4758                           
  4759                           ;tmr1.c: 226: } else ppmState = START;
  4760  0638  0008               	return
  4761  0639                     i1l2061:	
  4762  0639  01F9               	clrf	_ppmState	;volatile
  4763  063A  0008               	return
  4764  063B                     i1l78:	
  4765                           ;tmr1.c: 228: case DATA:
  4766                           
  4767                           
  4768                           ;tmr1.c: 229: LATAbits.LATA4 = 0;
  4769  063B  0022               	movlb	2	; select bank2
  4770  063C  120C               	bcf	12,4	;volatile
  4771                           
  4772                           ;tmr1.c: 230: TMR1_WriteTimer(ppmData.reg[ppmData.iReg]);
  4773  063D  0021               	movlb	1	; select bank1
  4774  063E  3549               	lslf	(_ppmData^(0+128)+41),w	;volatile
  4775  063F  3EA1               	addlw	(low ((_ppmData| 0+1)))& (0+255)
  4776  0640  0086               	movwf	6
  4777  0641  0187               	clrf	7
  4778  0642  3F40               	moviw [0]fsr1
  4779  0643  00F0               	movwf	TMR1_WriteTimer@timerVal
  4780  0644  3F41               	moviw [1]fsr1
  4781  0645  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4782  0646  2707               	fcall	_TMR1_WriteTimer
  4783                           
  4784                           ;tmr1.c: 231: ppmData.iReg++;
  4785  0647  3001               	movlw	1
  4786  0648  00F2               	movwf	??_TMR1_DefaultInterruptHandler
  4787  0649  0872               	movf	??_TMR1_DefaultInterruptHandler,w
  4788  064A  0021               	movlb	1	; select bank1
  4789  064B  07C9               	addwf	(_ppmData^(0+128)+41),f	;volatile
  4790  064C  2E23               	goto	i1l2053
  4791  064D                     i1l2071:	
  4792  064D  0879               	movf	_ppmState,w	;volatile
  4793                           
  4794                           ; Switch size 1, requested type "simple"
  4795                           ; Number of cases is 3, Range of values is 0 to 2
  4796                           ; switch strategies available:
  4797                           ; Name         Instructions Cycles
  4798                           ; simple_byte           10     6 (average)
  4799                           ; direct_byte           12     6 (fixed)
  4800                           ; jumptable            260     6 (fixed)
  4801                           ;	Chosen strategy is simple_byte
  4802  064E  3A00               	xorlw	0	; case 0
  4803  064F  1903               	skipnz
  4804  0650  2E1A               	goto	i1l73
  4805  0651  3A01               	xorlw	1	; case 1
  4806  0652  1903               	skipnz
  4807  0653  2E28               	goto	i1l75
  4808  0654  3A03               	xorlw	3	; case 2
  4809  0655  1903               	skipnz
  4810  0656  2E3B               	goto	i1l78
  4811  0657  2E58               	goto	i1l79
  4812  0658                     i1l79:	
  4813  0658  0008               	return
  4814  0659                     __end_of_TMR1_DefaultInterruptHandler:	
  4815                           
  4816                           	psect	text25
  4817  0707                     __ptext25:	
  4818 ;; *************** function _TMR1_WriteTimer *****************
  4819 ;; Defined at:
  4820 ;;		line 152 in file "mcc_generated_files/tmr1.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  timerVal        2    0[COMMON] unsigned int 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4834 ;;      Params:         2       0       0       0
  4835 ;;      Locals:         0       0       0       0
  4836 ;;      Temps:          0       0       0       0
  4837 ;;      Totals:         2       0       0       0
  4838 ;;Total ram usage:        2 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_TMR1_ISR
  4844 ;;		_TMR1_DefaultInterruptHandler
  4845 ;;		_TMR1_Reload
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function _TMR1_WriteTimer
  4851  0707                     _TMR1_WriteTimer:	
  4852                           
  4853                           ;tmr1.c: 154: if (T1CONbits.nT1SYNC == 1)
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4857  0707  0020               	movlb	0	; select bank0
  4858  0708  1D18               	btfss	24,2	;volatile
  4859  0709  2F11               	goto	i1l1609
  4860                           
  4861                           ;tmr1.c: 155: {;tmr1.c: 157: T1CONbits.TMR1ON = 0;
  4862  070A  1018               	bcf	24,0	;volatile
  4863                           
  4864                           ;tmr1.c: 160: TMR1H = (timerVal >> 8);
  4865  070B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4866  070C  0097               	movwf	23	;volatile
  4867                           
  4868                           ;tmr1.c: 161: TMR1L = timerVal;
  4869  070D  0870               	movf	TMR1_WriteTimer@timerVal,w
  4870  070E  0096               	movwf	22	;volatile
  4871                           
  4872                           ;tmr1.c: 164: T1CONbits.TMR1ON =1;
  4873  070F  1418               	bsf	24,0	;volatile
  4874                           
  4875                           ;tmr1.c: 165: }
  4876  0710  0008               	return
  4877  0711                     i1l1609:	
  4878                           
  4879                           ;tmr1.c: 166: else;tmr1.c: 167: {;tmr1.c: 169: TMR1H = (timerVal >> 8);
  4880  0711  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4881  0712  0097               	movwf	23	;volatile
  4882                           
  4883                           ;tmr1.c: 170: TMR1L = timerVal;
  4884  0713  0870               	movf	TMR1_WriteTimer@timerVal,w
  4885  0714  0096               	movwf	22	;volatile
  4886  0715  0008               	return
  4887  0716                     __end_of_TMR1_WriteTimer:	
  4888  007E                     btemp	set	126	;btemp
  4889  007E                     int$flags	set	126
  4890  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         74
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     72      80
    BANK1            80      6      78
    BANK2            80      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_Init_PPM_Data
    _main->_Init_UART_Data
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    ___flmul->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_DefaultInterruptHandler
    _TMR1_DefaultInterruptHandler->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _LoadByte->_UARTUpdatePPM
    _UARTUpdatePPM->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LoadByte
    _LoadByte->_UARTUpdatePPM

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8247
                 _EUSART_is_rx_ready
                      _Init_PPM_Data
                     _Init_UART_Data
                           _LoadByte
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadByte                                             2     2      0    7741
                                              4 BANK1      2     2      0
                        _EUSART_Read
                      _UARTUpdatePPM
 ---------------------------------------------------------------------------------
 (2) _UARTUpdatePPM                                        5     5      0    7707
                                             71 BANK0      1     1      0
                                              0 BANK1      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     427
                                             60 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3353
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3262
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_UART_Data                                       2     2      0      46
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init_PPM_Data                                        3     3      0      68
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0     936
                                              3 COMMON     1     1      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     936
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         1     1      0     468
                                              2 COMMON     1     1      0
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     468
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _Init_PPM_Data
   _Init_UART_Data
   _LoadByte
     _EUSART_Read
     _UARTUpdatePPM
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
       _TMR1_WriteTimer
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     48      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      A8      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 22 04:48:22 2019

                                  __CFG_CP$OFF 0000                            __Umul8_16@word_mpld 0024  
                                          l201 0721                                            l152 071B  
                                          l720 0446                                            l712 042E  
                                          l812 046C                                            l831 068B  
                                          l825 04B6                                            l682 034C  
                                          l578 05FD                                            l826 04C0  
                                          l818 04A2                                            l684 032F  
                                          l678 02B9                                            l786 025F  
                                          l699 03CF                                            _BSR 0008  
                              _timer1ReloadVal 006E                 ?_EUSART_SetFramingErrorHandler 0074  
                                 __CFG_BORV$HI 0000                                            wreg 0009  
                                 ___flmul@aexp 003C                                   ___flmul@bexp 0041  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                  _Init_PPM_Data 0659  
                                 ?_EUSART_Read 0070                                   __CFG_LVP$OFF 0000  
                                 ___fltol@exp1 0066                                           l2133 06B9  
                                         l2135 06CA                                           l2303 0289  
                                         l2305 0291                                           l2323 02AE  
                                         l2251 05BD                                           l2333 02C3  
                                         l2407 037D                                           l2327 02B1  
                                         l2239 0685                                           l2511 008F  
                                         l2271 05EB                                           l2255 05C6  
                                         l2433 03EE                                           l2425 03E1  
                                         l2417 03C7                                           l2441 03F7  
                                         l2601 0235                                           l2513 0091  
                                         l2281 060A                                           l2273 05F9  
                                         l2451 0402                                           l2371 0337  
                                         l2363 02FF                                           l2523 00A7  
                                         l2515 0099                                           l2373 0339  
                                         l2381 0347                                           l2701 04E8  
                                         l2447 0400                                           l2439 03F5  
                                         l2607 024C                                           l2631 047B  
                                         l2711 0502                                           l2473 0442  
                                         l2625 0464                                           l2713 0505  
                                         l2299 0286                                           l2635 047F  
                                         l2707 04F7                                           l2469 043E  
                                         l2397 036C                                           l2389 035A  
                                         l2493 006C                                           l2645 04B4  
                                         l2637 048F                                           l2717 0510  
                                         l2741 053B                                           l2399 036E  
                                         l2583 01F5                                           l2575 01C7  
                                         l2495 006E                                           l2647 04A7  
                                         l2671 0554                                           l2681 072A  
                                         l2577 01DE                                           l2497 0076  
                                         l2729 0528                                           l2587 01F7  
                                         l2659 04DB                                           l2693 0660  
                                         l2597 0220                                           l2695 0677  
                                         u3005 0142                                           _LATA 010C  
                                         u3015 0190                                           u3025 01A7  
                                         u3035 01B6                                           u3045 01CA  
                                         u3205 0488                                           u3135 020E  
                                         u3145 0229                                           u3065 01D3  
                                         u2425 05EC                                           u3225 049C  
                                         u3155 023F                                           u2365 068C  
                                         u3245 04AE                                           u2703 038F  
                                         u2455 0601                                           u2625 033D  
                                         u2395 05CF                                           u2580 031E  
                                         u3285 04C8                                           u2590 031F  
                                         u2575 0313                                           u2745 03E2  
                                         u2845 0419                                           u2695 0372  
                                         i1l73 061A                                           i1l75 0628  
                                         u2995 0117                                           i1l78 063B  
                                         i1l79 0658                                           _WREG 0009  
                                         _WPUA 020C                                   __CFG_WRT$OFF 0000  
                                         _main 0716                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                           start 003D  
                               _Init_UART_Data 06B6                     ??_TMR1_SetInterruptHandler 0076  
                                __CFG_PLLEN$ON 0000                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0733                                  ___fltol@sign1 0065  
                              __end_of___fladd 044E                                          ?_main 0070  
                                __CFG_WDTE$OFF 0000                                __end_of___flmul 026C  
                              __end_of___fltol 0619                                          _T1CON 0018  
                                        _FSR0H 0005                                          _FSR1H 0007  
                                        _FSR0L 0004                                          _FSR1L 0006  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TXSTA 019E  
                                __CFG_PWRTE$ON 0000                                 ?_Init_PPM_Data 0070  
                             __end_of_TMR1_ISR 0707                                 _WDT_Initialize 076C  
                      __end_of_TMR1_Initialize 06E1                                          pclath 000A  
                                        status 0003                              __end_of_DATA_MULT 0768  
                                        wtemp0 007E                         __end_of_Init_UART_Data 06CC  
                              _TMR1_WriteTimer 0707                                 __CFG_MCLRE$OFF 0000  
                              __initialization 003E                                   __end_of_main 0721  
                             __end_of_LoadByte 054D                    ?_INTERRUPT_InterruptManager 0070  
                                 LoadByte@byte 00ED                                         ??_main 0076  
                       __end_of_WDT_Initialize 0770              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00E2                                         _APFCON 011D  
                                       _ANSELA 018C                     __end_of_EUSART_is_rx_ready 075C  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l2061 0639  
                                       i1l2053 0623                                         i1l2071 064D  
                                       i1l2233 002C                                         _ODCONA 028C  
                                       i1l1609 0711                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _STATUS 0003  
                              ?_Init_UART_Data 0070                               __end_of___xxtofl 04E4  
         __end_of_TMR1_DefaultInterruptHandler 0659          __size_of_TMR1_DefaultInterruptHandler 0040  
                 _TMR1_DefaultInterruptHandler 0619                                      ??___fladd 0050  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0036  
                                    ??___fltol 0060                                ??_Init_PPM_Data 0074  
                           __size_of__Umul8_16 0020                                ?_WDT_Initialize 0070  
     TMR1_SetInterruptHandler@InterruptHandler 0074                        __end_of_TMR1_WriteTimer 0716  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                         __size_of_EUSART_Read 000B                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 0739                                   ___xxtofl@val 0020  
                      __end_of__initialization 004F                             ?_SYSTEM_Initialize 0070  
                        __end_of_UARTUpdatePPM 05B3                                     ___fltol@f1 005C  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0076  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                               _OPTION_REGbits 0095                                __CFG_LPBOREN$ON 0000  
              ??_EUSART_SetOverrunErrorHandler 0076                      __end_of_SYSTEM_Initialize 073F  
                                   __pbssBANK0 0068                                     __pbssBANK1 00A0  
                                    ?_LoadByte 0070                                Init_UART_Data@i 0075  
                            __end_of__Umul8_16 069A                                     __pmaintext 0716  
                                   ??_TMR1_ISR 0073                                     __pintentry 0004  
                                      _BAUDCON 019F                                      ?___xxtofl 0020  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                     ??_EUSART_SetErrorHandler 0076                               ?_TMR1_WriteTimer 0070  
                                   ??_LoadByte 00EC                                      _DATA_MULT 0764  
                                      ___fladd 026C                                        ___flmul 0052  
                                      ___fltol 05B3                          __end_ofmain@DATA_MULT 0760  
                                      __ptext1 0739                                        __ptext2 076C  
                                      __ptext3 06CC                                        __ptext4 073F  
                                      __ptext5 06E1                                        __ptext6 072C  
                                      __ptext7 069A                                        __ptext8 0745  
                                      __ptext9 074B                 ??_TMR1_DefaultInterruptHandler 0072  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 072C  
                                   ??___xxtofl 0024                                        _saveBSR 0077  
            __size_of_TMR1_SetInterruptHandler 0006                                        _ppmData 00A0  
                     ??_PIN_MANAGER_Initialize 0074                      ?_TMR1_SetInterruptHandler 0074  
                                   _saveSTATUS 0076                     __size_of_SYSTEM_Initialize 0006  
                             ??_Init_UART_Data 0074                                        clrloop0 0734  
                         end_of_initialization 004F          __end_of_EUSART_SetOverrunErrorHandler 074B  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0745  
                               UARTUpdatePPM@i 0067                              _EUSART_Initialize 069A  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0757                            __end_of_DATA_OFFSET 076C  
                          ??_EUSART_Initialize 0076                               ??_WDT_Initialize 0074  
                          ?_EUSART_is_rx_ready 0070                                    ___fladd@grs 005B  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 0028  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 003D  
                    __end_of_EUSART_Initialize 06B6                           ??_EUSART_is_rx_ready 0074  
                              main@DATA_OFFSET 0760                     _EUSART_DefaultErrorHandler 0000  
                            __size_of_TMR1_ISR 0012                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 003E                          __end_of_Init_PPM_Data 067A  
              __size_of_PIN_MANAGER_Initialize 0014                                  ??_EUSART_Read 0074  
                            __size_of_LoadByte 0069                                    _DATA_OFFSET 0768  
               ?_EUSART_SetOverrunErrorHandler 0074                       __size_of_TMR1_Initialize 0015  
                   _EUSART_FramingErrorHandler 00E4                         _EUSART_SetErrorHandler 0751  
                                    __Umul8_16 067A                                      ___fladd@a 004C  
                                    ___fladd@b 0048                                      ___flmul@a 0032  
                                    ___flmul@b 002E                                    __pbssCOMMON 0076  
                       __size_of_UARTUpdatePPM 0066                                      ___latbits 0000  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00E8  
                            __size_of___xxtofl 0096                        __end_ofmain@DATA_OFFSET 0764  
                   __size_of_EUSART_Initialize 001C                            __end_of_EUSART_Read 072C  
                                    __pnvBANK0 006E                                      __pnvBANK1 00E0  
                       _PIN_MANAGER_Initialize 06E1               __end_of_TMR1_SetInterruptHandler 0745  
                                     ?___fladd 0048                                       ?___flmul 002E  
                                     ?___fltol 005C                                     ?__Umul8_16 0074  
                               Init_PPM_Data@i 0020                   ??_INTERRUPT_InterruptManager 0073  
                                    _saveFSR0H 006B                                      _saveFSR1H 0069  
                                    _saveFSR0L 006A                                      _saveFSR1L 0068  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0074  
                                    clear_ram0 0733                                       _PIE1bits 0091  
                            _eusartRxLastError 006C                                  _UARTUpdatePPM 054D  
                     __size_of_TMR1_WriteTimer 000F            __size_of_INTERRUPT_InterruptManager 0039  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0076  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 06F5  
                                _uartLoadState 006D                              ??_TMR1_Initialize 0076  
                                  _EUSART_Read 0721                                       _LoadByte 04E4  
                               ?_UARTUpdatePPM 0070                        ??_OSCILLATOR_Initialize 0074  
                                  ??__Umul8_16 0020                            _EUSART_ErrorHandler 00E0  
                             __size_of___fladd 01E2                               __size_of___flmul 021A  
                             __size_of___fltol 0066                       _TMR1_SetInterruptHandler 073F  
                        _TMR1_InterruptHandler 00E6                                       ___xxtofl 044E  
                                     __ptext10 0751                                       __ptext11 04E4  
                                     __ptext20 0659                                       __ptext12 054D  
                                     __ptext21 0757                                       __ptext13 044E  
                                   _T1GCONbits 0019                                       __ptext14 05B3  
                                     __ptext23 06F5                                       __ptext15 0052  
                                     __ptext24 0619                                       __ptext16 067A  
                                     __ptext25 0707                                       __ptext17 026C  
                                     __ptext18 0721                                       __ptext19 06B6  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 000B  
                                     _saveWREG 0078                        ?_EUSART_SetErrorHandler 0074  
                      __size_of_Init_UART_Data 0016                                       _uartData 00CA  
                                     _ppmState 0079  EUSART_SetOverrunErrorHandler@interruptHandler 0074  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 003D  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0751  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 074B  
                            ??_TMR1_WriteTimer 0072                                  main@DATA_MULT 075C  
                                   _INTCONbits 000B                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                ??_UARTUpdatePPM 00E8  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0757  
                            __CFG_CLKOUTEN$OFF 0000                         __size_of_Init_PPM_Data 0021  
EUSART_SetFramingErrorHandler@interruptHandler 0074                                  __pstringtext1 075C  
                                __pstringtext2 0760                                  __pstringtext3 0764  
                                __pstringtext4 0768                         __Umul8_16@multiplicand 0074  
                                ___fladd@signs 0058                 __end_of_PIN_MANAGER_Initialize 06F5  
                                 ___fladd@aexp 0059                                   ___fladd@bexp 005A  
                         __Umul8_16@multiplier 0026                                _TMR1_Initialize 06CC  
                            __Umul8_16@product 0022  
