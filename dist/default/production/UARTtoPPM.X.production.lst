

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 22 05:05:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.05
    48                           ; Generated 20/12/2018 GMT
    49                           ; 
    50                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC12F1572 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  008C                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011D                     	;# 
   131  011D                     	;# 
   132  018C                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0197                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  028C                     	;# 
   152  030C                     	;# 
   153  038C                     	;# 
   154  0391                     	;# 
   155  0392                     	;# 
   156  0393                     	;# 
   157  0691                     	;# 
   158  0692                     	;# 
   159  0693                     	;# 
   160  0694                     	;# 
   161  0695                     	;# 
   162  0D8E                     	;# 
   163  0D8F                     	;# 
   164  0D90                     	;# 
   165  0D91                     	;# 
   166  0D91                     	;# 
   167  0D92                     	;# 
   168  0D93                     	;# 
   169  0D93                     	;# 
   170  0D94                     	;# 
   171  0D95                     	;# 
   172  0D95                     	;# 
   173  0D96                     	;# 
   174  0D97                     	;# 
   175  0D97                     	;# 
   176  0D98                     	;# 
   177  0D99                     	;# 
   178  0D99                     	;# 
   179  0D9A                     	;# 
   180  0D9B                     	;# 
   181  0D9C                     	;# 
   182  0D9C                     	;# 
   183  0D9D                     	;# 
   184  0D9D                     	;# 
   185  0D9E                     	;# 
   186  0D9F                     	;# 
   187  0DA0                     	;# 
   188  0DA1                     	;# 
   189  0DA1                     	;# 
   190  0DA2                     	;# 
   191  0DA3                     	;# 
   192  0DA3                     	;# 
   193  0DA4                     	;# 
   194  0DA5                     	;# 
   195  0DA5                     	;# 
   196  0DA6                     	;# 
   197  0DA7                     	;# 
   198  0DA7                     	;# 
   199  0DA8                     	;# 
   200  0DA9                     	;# 
   201  0DA9                     	;# 
   202  0DAA                     	;# 
   203  0DAB                     	;# 
   204  0DAC                     	;# 
   205  0DAC                     	;# 
   206  0DAD                     	;# 
   207  0DAD                     	;# 
   208  0DAE                     	;# 
   209  0DAF                     	;# 
   210  0DB0                     	;# 
   211  0DB1                     	;# 
   212  0DB1                     	;# 
   213  0DB2                     	;# 
   214  0DB3                     	;# 
   215  0DB3                     	;# 
   216  0DB4                     	;# 
   217  0DB5                     	;# 
   218  0DB5                     	;# 
   219  0DB6                     	;# 
   220  0DB7                     	;# 
   221  0DB7                     	;# 
   222  0DB8                     	;# 
   223  0DB9                     	;# 
   224  0DB9                     	;# 
   225  0DBA                     	;# 
   226  0DBB                     	;# 
   227  0DBC                     	;# 
   228  0DBC                     	;# 
   229  0DBD                     	;# 
   230  0DBD                     	;# 
   231  0DBE                     	;# 
   232  0DBF                     	;# 
   233  0DC0                     	;# 
   234  0FE4                     	;# 
   235  0FE5                     	;# 
   236  0FE6                     	;# 
   237  0FE7                     	;# 
   238  0FE8                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEA                     	;# 
   243  0FEB                     	;# 
   244  0FED                     	;# 
   245  0FEE                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  008C                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  0111                     	;# 
   291  0112                     	;# 
   292  0115                     	;# 
   293  0116                     	;# 
   294  0117                     	;# 
   295  0118                     	;# 
   296  0119                     	;# 
   297  011D                     	;# 
   298  011D                     	;# 
   299  018C                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0194                     	;# 
   306  0195                     	;# 
   307  0196                     	;# 
   308  0197                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  028C                     	;# 
   319  030C                     	;# 
   320  038C                     	;# 
   321  0391                     	;# 
   322  0392                     	;# 
   323  0393                     	;# 
   324  0691                     	;# 
   325  0692                     	;# 
   326  0693                     	;# 
   327  0694                     	;# 
   328  0695                     	;# 
   329  0D8E                     	;# 
   330  0D8F                     	;# 
   331  0D90                     	;# 
   332  0D91                     	;# 
   333  0D91                     	;# 
   334  0D92                     	;# 
   335  0D93                     	;# 
   336  0D93                     	;# 
   337  0D94                     	;# 
   338  0D95                     	;# 
   339  0D95                     	;# 
   340  0D96                     	;# 
   341  0D97                     	;# 
   342  0D97                     	;# 
   343  0D98                     	;# 
   344  0D99                     	;# 
   345  0D99                     	;# 
   346  0D9A                     	;# 
   347  0D9B                     	;# 
   348  0D9C                     	;# 
   349  0D9C                     	;# 
   350  0D9D                     	;# 
   351  0D9D                     	;# 
   352  0D9E                     	;# 
   353  0D9F                     	;# 
   354  0DA0                     	;# 
   355  0DA1                     	;# 
   356  0DA1                     	;# 
   357  0DA2                     	;# 
   358  0DA3                     	;# 
   359  0DA3                     	;# 
   360  0DA4                     	;# 
   361  0DA5                     	;# 
   362  0DA5                     	;# 
   363  0DA6                     	;# 
   364  0DA7                     	;# 
   365  0DA7                     	;# 
   366  0DA8                     	;# 
   367  0DA9                     	;# 
   368  0DA9                     	;# 
   369  0DAA                     	;# 
   370  0DAB                     	;# 
   371  0DAC                     	;# 
   372  0DAC                     	;# 
   373  0DAD                     	;# 
   374  0DAD                     	;# 
   375  0DAE                     	;# 
   376  0DAF                     	;# 
   377  0DB0                     	;# 
   378  0DB1                     	;# 
   379  0DB1                     	;# 
   380  0DB2                     	;# 
   381  0DB3                     	;# 
   382  0DB3                     	;# 
   383  0DB4                     	;# 
   384  0DB5                     	;# 
   385  0DB5                     	;# 
   386  0DB6                     	;# 
   387  0DB7                     	;# 
   388  0DB7                     	;# 
   389  0DB8                     	;# 
   390  0DB9                     	;# 
   391  0DB9                     	;# 
   392  0DBA                     	;# 
   393  0DBB                     	;# 
   394  0DBC                     	;# 
   395  0DBC                     	;# 
   396  0DBD                     	;# 
   397  0DBD                     	;# 
   398  0DBE                     	;# 
   399  0DBF                     	;# 
   400  0DC0                     	;# 
   401  0FE4                     	;# 
   402  0FE5                     	;# 
   403  0FE6                     	;# 
   404  0FE7                     	;# 
   405  0FE8                     	;# 
   406  0FE8                     	;# 
   407  0FE9                     	;# 
   408  0FEA                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  008C                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  010C                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0115                     	;# 
   460  0116                     	;# 
   461  0117                     	;# 
   462  0118                     	;# 
   463  0119                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0194                     	;# 
   473  0195                     	;# 
   474  0196                     	;# 
   475  0197                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019E                     	;# 
   483  019F                     	;# 
   484  020C                     	;# 
   485  028C                     	;# 
   486  030C                     	;# 
   487  038C                     	;# 
   488  0391                     	;# 
   489  0392                     	;# 
   490  0393                     	;# 
   491  0691                     	;# 
   492  0692                     	;# 
   493  0693                     	;# 
   494  0694                     	;# 
   495  0695                     	;# 
   496  0D8E                     	;# 
   497  0D8F                     	;# 
   498  0D90                     	;# 
   499  0D91                     	;# 
   500  0D91                     	;# 
   501  0D92                     	;# 
   502  0D93                     	;# 
   503  0D93                     	;# 
   504  0D94                     	;# 
   505  0D95                     	;# 
   506  0D95                     	;# 
   507  0D96                     	;# 
   508  0D97                     	;# 
   509  0D97                     	;# 
   510  0D98                     	;# 
   511  0D99                     	;# 
   512  0D99                     	;# 
   513  0D9A                     	;# 
   514  0D9B                     	;# 
   515  0D9C                     	;# 
   516  0D9C                     	;# 
   517  0D9D                     	;# 
   518  0D9D                     	;# 
   519  0D9E                     	;# 
   520  0D9F                     	;# 
   521  0DA0                     	;# 
   522  0DA1                     	;# 
   523  0DA1                     	;# 
   524  0DA2                     	;# 
   525  0DA3                     	;# 
   526  0DA3                     	;# 
   527  0DA4                     	;# 
   528  0DA5                     	;# 
   529  0DA5                     	;# 
   530  0DA6                     	;# 
   531  0DA7                     	;# 
   532  0DA7                     	;# 
   533  0DA8                     	;# 
   534  0DA9                     	;# 
   535  0DA9                     	;# 
   536  0DAA                     	;# 
   537  0DAB                     	;# 
   538  0DAC                     	;# 
   539  0DAC                     	;# 
   540  0DAD                     	;# 
   541  0DAD                     	;# 
   542  0DAE                     	;# 
   543  0DAF                     	;# 
   544  0DB0                     	;# 
   545  0DB1                     	;# 
   546  0DB1                     	;# 
   547  0DB2                     	;# 
   548  0DB3                     	;# 
   549  0DB3                     	;# 
   550  0DB4                     	;# 
   551  0DB5                     	;# 
   552  0DB5                     	;# 
   553  0DB6                     	;# 
   554  0DB7                     	;# 
   555  0DB7                     	;# 
   556  0DB8                     	;# 
   557  0DB9                     	;# 
   558  0DB9                     	;# 
   559  0DBA                     	;# 
   560  0DBB                     	;# 
   561  0DBC                     	;# 
   562  0DBC                     	;# 
   563  0DBD                     	;# 
   564  0DBD                     	;# 
   565  0DBE                     	;# 
   566  0DBF                     	;# 
   567  0DC0                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE8                     	;# 
   574  0FE9                     	;# 
   575  0FEA                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEE                     	;# 
   581  0FEF                     	;# 
   582  0000                     	;# 
   583  0001                     	;# 
   584  0002                     	;# 
   585  0003                     	;# 
   586  0004                     	;# 
   587  0005                     	;# 
   588  0006                     	;# 
   589  0007                     	;# 
   590  0008                     	;# 
   591  0009                     	;# 
   592  000A                     	;# 
   593  000B                     	;# 
   594  000C                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0013                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0016                     	;# 
   601  0017                     	;# 
   602  0018                     	;# 
   603  0019                     	;# 
   604  001A                     	;# 
   605  001B                     	;# 
   606  001C                     	;# 
   607  008C                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  010C                     	;# 
   624  0111                     	;# 
   625  0112                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011D                     	;# 
   632  011D                     	;# 
   633  018C                     	;# 
   634  0191                     	;# 
   635  0191                     	;# 
   636  0192                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0194                     	;# 
   640  0195                     	;# 
   641  0196                     	;# 
   642  0197                     	;# 
   643  0199                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019C                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  020C                     	;# 
   652  028C                     	;# 
   653  030C                     	;# 
   654  038C                     	;# 
   655  0391                     	;# 
   656  0392                     	;# 
   657  0393                     	;# 
   658  0691                     	;# 
   659  0692                     	;# 
   660  0693                     	;# 
   661  0694                     	;# 
   662  0695                     	;# 
   663  0D8E                     	;# 
   664  0D8F                     	;# 
   665  0D90                     	;# 
   666  0D91                     	;# 
   667  0D91                     	;# 
   668  0D92                     	;# 
   669  0D93                     	;# 
   670  0D93                     	;# 
   671  0D94                     	;# 
   672  0D95                     	;# 
   673  0D95                     	;# 
   674  0D96                     	;# 
   675  0D97                     	;# 
   676  0D97                     	;# 
   677  0D98                     	;# 
   678  0D99                     	;# 
   679  0D99                     	;# 
   680  0D9A                     	;# 
   681  0D9B                     	;# 
   682  0D9C                     	;# 
   683  0D9C                     	;# 
   684  0D9D                     	;# 
   685  0D9D                     	;# 
   686  0D9E                     	;# 
   687  0D9F                     	;# 
   688  0DA0                     	;# 
   689  0DA1                     	;# 
   690  0DA1                     	;# 
   691  0DA2                     	;# 
   692  0DA3                     	;# 
   693  0DA3                     	;# 
   694  0DA4                     	;# 
   695  0DA5                     	;# 
   696  0DA5                     	;# 
   697  0DA6                     	;# 
   698  0DA7                     	;# 
   699  0DA7                     	;# 
   700  0DA8                     	;# 
   701  0DA9                     	;# 
   702  0DA9                     	;# 
   703  0DAA                     	;# 
   704  0DAB                     	;# 
   705  0DAC                     	;# 
   706  0DAC                     	;# 
   707  0DAD                     	;# 
   708  0DAD                     	;# 
   709  0DAE                     	;# 
   710  0DAF                     	;# 
   711  0DB0                     	;# 
   712  0DB1                     	;# 
   713  0DB1                     	;# 
   714  0DB2                     	;# 
   715  0DB3                     	;# 
   716  0DB3                     	;# 
   717  0DB4                     	;# 
   718  0DB5                     	;# 
   719  0DB5                     	;# 
   720  0DB6                     	;# 
   721  0DB7                     	;# 
   722  0DB7                     	;# 
   723  0DB8                     	;# 
   724  0DB9                     	;# 
   725  0DB9                     	;# 
   726  0DBA                     	;# 
   727  0DBB                     	;# 
   728  0DBC                     	;# 
   729  0DBC                     	;# 
   730  0DBD                     	;# 
   731  0DBD                     	;# 
   732  0DBE                     	;# 
   733  0DBF                     	;# 
   734  0DC0                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE8                     	;# 
   741  0FE9                     	;# 
   742  0FEA                     	;# 
   743  0FEA                     	;# 
   744  0FEB                     	;# 
   745  0FED                     	;# 
   746  0FEE                     	;# 
   747  0FEE                     	;# 
   748  0FEF                     	;# 
   749  0000                     	;# 
   750  0001                     	;# 
   751  0002                     	;# 
   752  0003                     	;# 
   753  0004                     	;# 
   754  0005                     	;# 
   755  0006                     	;# 
   756  0007                     	;# 
   757  0008                     	;# 
   758  0009                     	;# 
   759  000A                     	;# 
   760  000B                     	;# 
   761  000C                     	;# 
   762  0011                     	;# 
   763  0012                     	;# 
   764  0013                     	;# 
   765  0015                     	;# 
   766  0016                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001C                     	;# 
   774  008C                     	;# 
   775  0091                     	;# 
   776  0092                     	;# 
   777  0093                     	;# 
   778  0095                     	;# 
   779  0096                     	;# 
   780  0097                     	;# 
   781  0098                     	;# 
   782  0099                     	;# 
   783  009A                     	;# 
   784  009B                     	;# 
   785  009B                     	;# 
   786  009C                     	;# 
   787  009D                     	;# 
   788  009E                     	;# 
   789  009F                     	;# 
   790  010C                     	;# 
   791  0111                     	;# 
   792  0112                     	;# 
   793  0115                     	;# 
   794  0116                     	;# 
   795  0117                     	;# 
   796  0118                     	;# 
   797  0119                     	;# 
   798  011D                     	;# 
   799  011D                     	;# 
   800  018C                     	;# 
   801  0191                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0193                     	;# 
   805  0193                     	;# 
   806  0194                     	;# 
   807  0195                     	;# 
   808  0196                     	;# 
   809  0197                     	;# 
   810  0199                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019C                     	;# 
   815  019D                     	;# 
   816  019E                     	;# 
   817  019F                     	;# 
   818  020C                     	;# 
   819  028C                     	;# 
   820  030C                     	;# 
   821  038C                     	;# 
   822  0391                     	;# 
   823  0392                     	;# 
   824  0393                     	;# 
   825  0691                     	;# 
   826  0692                     	;# 
   827  0693                     	;# 
   828  0694                     	;# 
   829  0695                     	;# 
   830  0D8E                     	;# 
   831  0D8F                     	;# 
   832  0D90                     	;# 
   833  0D91                     	;# 
   834  0D91                     	;# 
   835  0D92                     	;# 
   836  0D93                     	;# 
   837  0D93                     	;# 
   838  0D94                     	;# 
   839  0D95                     	;# 
   840  0D95                     	;# 
   841  0D96                     	;# 
   842  0D97                     	;# 
   843  0D97                     	;# 
   844  0D98                     	;# 
   845  0D99                     	;# 
   846  0D99                     	;# 
   847  0D9A                     	;# 
   848  0D9B                     	;# 
   849  0D9C                     	;# 
   850  0D9C                     	;# 
   851  0D9D                     	;# 
   852  0D9D                     	;# 
   853  0D9E                     	;# 
   854  0D9F                     	;# 
   855  0DA0                     	;# 
   856  0DA1                     	;# 
   857  0DA1                     	;# 
   858  0DA2                     	;# 
   859  0DA3                     	;# 
   860  0DA3                     	;# 
   861  0DA4                     	;# 
   862  0DA5                     	;# 
   863  0DA5                     	;# 
   864  0DA6                     	;# 
   865  0DA7                     	;# 
   866  0DA7                     	;# 
   867  0DA8                     	;# 
   868  0DA9                     	;# 
   869  0DA9                     	;# 
   870  0DAA                     	;# 
   871  0DAB                     	;# 
   872  0DAC                     	;# 
   873  0DAC                     	;# 
   874  0DAD                     	;# 
   875  0DAD                     	;# 
   876  0DAE                     	;# 
   877  0DAF                     	;# 
   878  0DB0                     	;# 
   879  0DB1                     	;# 
   880  0DB1                     	;# 
   881  0DB2                     	;# 
   882  0DB3                     	;# 
   883  0DB3                     	;# 
   884  0DB4                     	;# 
   885  0DB5                     	;# 
   886  0DB5                     	;# 
   887  0DB6                     	;# 
   888  0DB7                     	;# 
   889  0DB7                     	;# 
   890  0DB8                     	;# 
   891  0DB9                     	;# 
   892  0DB9                     	;# 
   893  0DBA                     	;# 
   894  0DBB                     	;# 
   895  0DBC                     	;# 
   896  0DBC                     	;# 
   897  0DBD                     	;# 
   898  0DBD                     	;# 
   899  0DBE                     	;# 
   900  0DBF                     	;# 
   901  0DC0                     	;# 
   902  0FE4                     	;# 
   903  0FE5                     	;# 
   904  0FE6                     	;# 
   905  0FE7                     	;# 
   906  0FE8                     	;# 
   907  0FE8                     	;# 
   908  0FE9                     	;# 
   909  0FEA                     	;# 
   910  0FEA                     	;# 
   911  0FEB                     	;# 
   912  0FED                     	;# 
   913  0FEE                     	;# 
   914  0FEE                     	;# 
   915  0FEF                     	;# 
   916  0000                     	;# 
   917  0001                     	;# 
   918  0002                     	;# 
   919  0003                     	;# 
   920  0004                     	;# 
   921  0005                     	;# 
   922  0006                     	;# 
   923  0007                     	;# 
   924  0008                     	;# 
   925  0009                     	;# 
   926  000A                     	;# 
   927  000B                     	;# 
   928  000C                     	;# 
   929  0011                     	;# 
   930  0012                     	;# 
   931  0013                     	;# 
   932  0015                     	;# 
   933  0016                     	;# 
   934  0016                     	;# 
   935  0017                     	;# 
   936  0018                     	;# 
   937  0019                     	;# 
   938  001A                     	;# 
   939  001B                     	;# 
   940  001C                     	;# 
   941  008C                     	;# 
   942  0091                     	;# 
   943  0092                     	;# 
   944  0093                     	;# 
   945  0095                     	;# 
   946  0096                     	;# 
   947  0097                     	;# 
   948  0098                     	;# 
   949  0099                     	;# 
   950  009A                     	;# 
   951  009B                     	;# 
   952  009B                     	;# 
   953  009C                     	;# 
   954  009D                     	;# 
   955  009E                     	;# 
   956  009F                     	;# 
   957  010C                     	;# 
   958  0111                     	;# 
   959  0112                     	;# 
   960  0115                     	;# 
   961  0116                     	;# 
   962  0117                     	;# 
   963  0118                     	;# 
   964  0119                     	;# 
   965  011D                     	;# 
   966  011D                     	;# 
   967  018C                     	;# 
   968  0191                     	;# 
   969  0191                     	;# 
   970  0192                     	;# 
   971  0193                     	;# 
   972  0193                     	;# 
   973  0194                     	;# 
   974  0195                     	;# 
   975  0196                     	;# 
   976  0197                     	;# 
   977  0199                     	;# 
   978  019A                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019C                     	;# 
   982  019D                     	;# 
   983  019E                     	;# 
   984  019F                     	;# 
   985  020C                     	;# 
   986  028C                     	;# 
   987  030C                     	;# 
   988  038C                     	;# 
   989  0391                     	;# 
   990  0392                     	;# 
   991  0393                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0D8E                     	;# 
   998  0D8F                     	;# 
   999  0D90                     	;# 
  1000  0D91                     	;# 
  1001  0D91                     	;# 
  1002  0D92                     	;# 
  1003  0D93                     	;# 
  1004  0D93                     	;# 
  1005  0D94                     	;# 
  1006  0D95                     	;# 
  1007  0D95                     	;# 
  1008  0D96                     	;# 
  1009  0D97                     	;# 
  1010  0D97                     	;# 
  1011  0D98                     	;# 
  1012  0D99                     	;# 
  1013  0D99                     	;# 
  1014  0D9A                     	;# 
  1015  0D9B                     	;# 
  1016  0D9C                     	;# 
  1017  0D9C                     	;# 
  1018  0D9D                     	;# 
  1019  0D9D                     	;# 
  1020  0D9E                     	;# 
  1021  0D9F                     	;# 
  1022  0DA0                     	;# 
  1023  0DA1                     	;# 
  1024  0DA1                     	;# 
  1025  0DA2                     	;# 
  1026  0DA3                     	;# 
  1027  0DA3                     	;# 
  1028  0DA4                     	;# 
  1029  0DA5                     	;# 
  1030  0DA5                     	;# 
  1031  0DA6                     	;# 
  1032  0DA7                     	;# 
  1033  0DA7                     	;# 
  1034  0DA8                     	;# 
  1035  0DA9                     	;# 
  1036  0DA9                     	;# 
  1037  0DAA                     	;# 
  1038  0DAB                     	;# 
  1039  0DAC                     	;# 
  1040  0DAC                     	;# 
  1041  0DAD                     	;# 
  1042  0DAD                     	;# 
  1043  0DAE                     	;# 
  1044  0DAF                     	;# 
  1045  0DB0                     	;# 
  1046  0DB1                     	;# 
  1047  0DB1                     	;# 
  1048  0DB2                     	;# 
  1049  0DB3                     	;# 
  1050  0DB3                     	;# 
  1051  0DB4                     	;# 
  1052  0DB5                     	;# 
  1053  0DB5                     	;# 
  1054  0DB6                     	;# 
  1055  0DB7                     	;# 
  1056  0DB7                     	;# 
  1057  0DB8                     	;# 
  1058  0DB9                     	;# 
  1059  0DB9                     	;# 
  1060  0DBA                     	;# 
  1061  0DBB                     	;# 
  1062  0DBC                     	;# 
  1063  0DBC                     	;# 
  1064  0DBD                     	;# 
  1065  0DBD                     	;# 
  1066  0DBE                     	;# 
  1067  0DBF                     	;# 
  1068  0DC0                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEA                     	;# 
  1078  0FEB                     	;# 
  1079  0FED                     	;# 
  1080  0FEE                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083                           
  1084 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1085  0000                     
  1086 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1087  0000                     
  1088 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1089  0000                     
  1090                           	psect	stringtext1
  1091  07A3                     __pstringtext1:	
  1092  07A3                     main@DATA_MULT:	
  1093  07A3  3416               	retlw	22
  1094  07A4  34FB               	retlw	251
  1095  07A5  347A               	retlw	122
  1096  07A6  34C1               	retlw	193
  1097  07A7                     __end_ofmain@DATA_MULT:	
  1098                           
  1099                           	psect	stringtext2
  1100  07A7                     __pstringtext2:	
  1101  07A7                     main@DATA_OFFSET:	
  1102  07A7  3400               	retlw	0
  1103  07A8  343E               	retlw	62
  1104  07A9  3478               	retlw	120
  1105  07AA  3447               	retlw	71
  1106  07AB                     __end_ofmain@DATA_OFFSET:	
  1107                           
  1108                           	psect	stringtext3
  1109  07AB                     __pstringtext3:	
  1110  07AB                     _DATA_MULT:	
  1111  07AB  3416               	retlw	22
  1112  07AC  34FB               	retlw	251
  1113  07AD  347A               	retlw	122
  1114  07AE  34C1               	retlw	193
  1115  07AF                     __end_of_DATA_MULT:	
  1116                           
  1117                           	psect	stringtext4
  1118  07AF                     __pstringtext4:	
  1119  07AF                     _DATA_OFFSET:	
  1120  07AF  3400               	retlw	0
  1121  07B0  343E               	retlw	62
  1122  07B1  3478               	retlw	120
  1123  07B2  3447               	retlw	71
  1124  07B3                     __end_of_DATA_OFFSET:	
  1125                           
  1126                           	psect	nvBANK0
  1127  006E                     __pnvBANK0:	
  1128  006E                     _timer1ReloadVal:	
  1129  006E                     	ds	2
  1130                           
  1131                           	psect	nvBANK1
  1132  00E0                     __pnvBANK1:	
  1133  00E0                     _EUSART_ErrorHandler:	
  1134  00E0                     	ds	2
  1135  00E2                     _EUSART_OverrunErrorHandler:	
  1136  00E2                     	ds	2
  1137  00E4                     _EUSART_FramingErrorHandler:	
  1138  00E4                     	ds	2
  1139  00E6                     _TMR1_InterruptHandler:	
  1140  00E6                     	ds	2
  1141  0006                     _FSR1L	set	6
  1142  0007                     _FSR1H	set	7
  1143  0004                     _FSR0L	set	4
  1144  0005                     _FSR0H	set	5
  1145  0003                     _STATUS	set	3
  1146  0008                     _BSR	set	8
  1147  0009                     _WREG	set	9
  1148  000B                     _INTCONbits	set	11
  1149  0019                     _T1GCONbits	set	25
  1150  0018                     _T1CONbits	set	24
  1151  0018                     _T1CON	set	24
  1152  0011                     _PIR1bits	set	17
  1153  0016                     _TMR1L	set	22
  1154  0017                     _TMR1H	set	23
  1155  0019                     _T1GCON	set	25
  1156  0095                     _OPTION_REGbits	set	149
  1157  008C                     _TRISA	set	140
  1158  0097                     _WDTCON	set	151
  1159  0098                     _OSCTUNE	set	152
  1160  0099                     _OSCCON	set	153
  1161  0091                     _PIE1bits	set	145
  1162  011D                     _APFCON	set	285
  1163  010C                     _LATA	set	268
  1164  0116                     _BORCON	set	278
  1165  010C                     _LATAbits	set	268
  1166  018C                     _ANSELA	set	396
  1167  0199                     _RCREG	set	409
  1168  019D                     _RCSTAbits	set	413
  1169  019C                     _SPBRGH	set	412
  1170  019B                     _SPBRGL	set	411
  1171  019E                     _TXSTA	set	414
  1172  019D                     _RCSTA	set	413
  1173  019F                     _BAUDCON	set	415
  1174  020C                     _WPUA	set	524
  1175  028C                     _ODCONA	set	652
  1176  030C                     _SLRCONA	set	780
  1177                           
  1178                           ; #config settings
  1179  0000                     
  1180                           	psect	cinit
  1181  003E                     start_initialization:	
  1182  003E                     __initialization:	
  1183                           
  1184                           ; Clear objects allocated to COMMON
  1185  003E  01F6               	clrf	__pbssCOMMON& (0+127)
  1186  003F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1187  0040  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1188  0041  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1189                           
  1190                           ; Clear objects allocated to BANK0
  1191  0042  0020               	movlb	0	; select bank0
  1192  0043  01E8               	clrf	__pbssBANK0& (0+127)
  1193  0044  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1194  0045  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1195  0046  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1196  0047  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1197  0048  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  1198                           
  1199                           ; Clear objects allocated to BANK1
  1200  0049  30A0               	movlw	low __pbssBANK1
  1201  004A  0084               	movwf	4
  1202  004B  3000               	movlw	high __pbssBANK1
  1203  004C  0085               	movwf	5
  1204  004D  3040               	movlw	64
  1205  004E  277A               	fcall	clear_ram0
  1206  004F                     end_of_initialization:	
  1207                           ;End of C runtime variable initialization code
  1208                           
  1209  004F                     __end_of__initialization:	
  1210  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1211  0050  0020               	movlb	0
  1212  0051  2F5D               	ljmp	_main	;jump to C main() function
  1213                           
  1214                           	psect	bssCOMMON
  1215  0076                     __pbssCOMMON:	
  1216  0076                     _saveSTATUS:	
  1217  0076                     	ds	1
  1218  0077                     _saveBSR:	
  1219  0077                     	ds	1
  1220  0078                     _saveWREG:	
  1221  0078                     	ds	1
  1222  0079                     _ppmState:	
  1223  0079                     	ds	1
  1224                           
  1225                           	psect	bssBANK0
  1226  0068                     __pbssBANK0:	
  1227  0068                     _saveFSR1L:	
  1228  0068                     	ds	1
  1229  0069                     _saveFSR1H:	
  1230  0069                     	ds	1
  1231  006A                     _saveFSR0L:	
  1232  006A                     	ds	1
  1233  006B                     _saveFSR0H:	
  1234  006B                     	ds	1
  1235  006C                     _eusartRxLastError:	
  1236  006C                     	ds	1
  1237  006D                     _uartLoadState:	
  1238  006D                     	ds	1
  1239                           
  1240                           	psect	bssBANK1
  1241  00A0                     __pbssBANK1:	
  1242  00A0                     _ppmData:	
  1243  00A0                     	ds	42
  1244  00CA                     _uartData:	
  1245  00CA                     	ds	22
  1246                           
  1247                           	psect	clrtext
  1248  077A                     clear_ram0:	
  1249                           ;	Called with FSR0 containing the base address, and
  1250                           ;	WREG with the size to clear
  1251                           
  1252  077A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1253  077B                     clrloop0:	
  1254  077B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1255  077C  3101               	addfsr 0,1
  1256  077D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1257  077E  2F7B               	goto	clrloop0	;have we reached the end yet?
  1258  077F  3400               	retlw	0	;all done for this memory range, return
  1259                           
  1260                           	psect	cstackBANK1
  1261  00E8                     __pcstackBANK1:	
  1262  00E8                     ??_UARTUpdatePPM:	
  1263                           
  1264                           ; 1 bytes @ 0x0
  1265  00E8                     	ds	4
  1266  00EC                     ??_LoadByte:	
  1267                           
  1268                           ; 1 bytes @ 0x4
  1269  00EC                     	ds	1
  1270  00ED                     LoadByte@byte:	
  1271                           
  1272                           ; 1 bytes @ 0x5
  1273  00ED                     	ds	1
  1274                           
  1275                           	psect	cstackCOMMON
  1276  0070                     __pcstackCOMMON:	
  1277  0070                     ?_TMR1_DefaultInterruptHandler:	
  1278  0070                     ?_EUSART_Read:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_SYSTEM_Initialize:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_EUSART_is_rx_ready:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_PIN_MANAGER_Initialize:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_OSCILLATOR_Initialize:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_WDT_Initialize:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ?_TMR1_Initialize:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_TMR1_WriteTimer:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_TMR1_ISR:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_Init_PPM_Data:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_Init_UART_Data:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_UARTUpdatePPM:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_CheckCRC:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_LoadByte:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_main:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_EUSART_Initialize:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_INTERRUPT_InterruptManager:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     TMR1_WriteTimer@timerVal:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x0
  1334  0070                     	ds	2
  1335  0072                     ??_TMR1_DefaultInterruptHandler:	
  1336  0072                     ??_TMR1_WriteTimer:	
  1337                           ; 1 bytes @ 0x2
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x2
  1341  0072                     	ds	1
  1342  0073                     ??_TMR1_ISR:	
  1343  0073                     ??_INTERRUPT_InterruptManager:	
  1344                           ; 1 bytes @ 0x3
  1345                           
  1346                           
  1347                           ; 1 bytes @ 0x3
  1348  0073                     	ds	1
  1349  0074                     ?_TMR1_SetInterruptHandler:	
  1350  0074                     ??_EUSART_Read:	
  1351                           ; 1 bytes @ 0x4
  1352                           
  1353  0074                     ??_EUSART_is_rx_ready:	
  1354                           ; 1 bytes @ 0x4
  1355                           
  1356  0074                     ?_EUSART_SetFramingErrorHandler:	
  1357                           ; 1 bytes @ 0x4
  1358                           
  1359  0074                     ?_EUSART_SetOverrunErrorHandler:	
  1360                           ; 1 bytes @ 0x4
  1361                           
  1362  0074                     ?_EUSART_SetErrorHandler:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ??_PIN_MANAGER_Initialize:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     ??_OSCILLATOR_Initialize:	
  1369                           ; 1 bytes @ 0x4
  1370                           
  1371  0074                     ??_WDT_Initialize:	
  1372                           ; 1 bytes @ 0x4
  1373                           
  1374  0074                     ??_Init_PPM_Data:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0074                     ??_Init_UART_Data:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     ??_CheckCRC:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383  0074                     ?__Umul8_16:	
  1384                           ; 1 bytes @ 0x4
  1385                           
  1386  0074                     __Umul8_16@multiplicand:	
  1387                           ; 2 bytes @ 0x4
  1388                           
  1389  0074                     TMR1_SetInterruptHandler@InterruptHandler:	
  1390                           ; 1 bytes @ 0x4
  1391                           
  1392  0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1393                           ; 2 bytes @ 0x4
  1394                           
  1395  0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1396                           ; 2 bytes @ 0x4
  1397                           
  1398  0074                     EUSART_SetErrorHandler@interruptHandler:	
  1399                           ; 2 bytes @ 0x4
  1400                           
  1401                           
  1402                           ; 2 bytes @ 0x4
  1403  0074                     	ds	1
  1404  0075                     Init_UART_Data@i:	
  1405                           
  1406                           ; 1 bytes @ 0x5
  1407  0075                     	ds	1
  1408  0076                     ??_TMR1_SetInterruptHandler:	
  1409  0076                     ??_SYSTEM_Initialize:	
  1410                           ; 1 bytes @ 0x6
  1411                           
  1412  0076                     ??_EUSART_SetFramingErrorHandler:	
  1413                           ; 1 bytes @ 0x6
  1414                           
  1415  0076                     ??_EUSART_SetOverrunErrorHandler:	
  1416                           ; 1 bytes @ 0x6
  1417                           
  1418  0076                     ??_EUSART_SetErrorHandler:	
  1419                           ; 1 bytes @ 0x6
  1420                           
  1421  0076                     ??_TMR1_Initialize:	
  1422                           ; 1 bytes @ 0x6
  1423                           
  1424  0076                     ??_main:	
  1425                           ; 1 bytes @ 0x6
  1426                           
  1427  0076                     ??_EUSART_Initialize:	
  1428                           ; 1 bytes @ 0x6
  1429                           
  1430                           
  1431                           	psect	cstackBANK0
  1432  0020                     __pcstackBANK0:	
  1433                           ; 1 bytes @ 0x6
  1434                           
  1435  0020                     ??__Umul8_16:	
  1436  0020                     ?___xxtofl:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0020                     Init_PPM_Data@i:	
  1440                           ; 4 bytes @ 0x0
  1441                           
  1442  0020                     CheckCRC@inc:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     ___xxtofl@val:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448                           
  1449                           ; 4 bytes @ 0x0
  1450  0020                     	ds	1
  1451  0021                     CheckCRC@i:	
  1452                           
  1453                           ; 1 bytes @ 0x1
  1454  0021                     	ds	1
  1455  0022                     CheckCRC@j:	
  1456  0022                     __Umul8_16@product:	
  1457                           ; 1 bytes @ 0x2
  1458                           
  1459                           
  1460                           ; 2 bytes @ 0x2
  1461  0022                     	ds	2
  1462  0024                     ??___xxtofl:	
  1463  0024                     __Umul8_16@word_mpld:	
  1464                           ; 1 bytes @ 0x4
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x4
  1468  0024                     	ds	2
  1469  0026                     __Umul8_16@multiplier:	
  1470                           
  1471                           ; 1 bytes @ 0x6
  1472  0026                     	ds	2
  1473  0028                     ___xxtofl@sign:	
  1474                           
  1475                           ; 1 bytes @ 0x8
  1476  0028                     	ds	1
  1477  0029                     ___xxtofl@exp:	
  1478                           
  1479                           ; 1 bytes @ 0x9
  1480  0029                     	ds	1
  1481  002A                     ___xxtofl@arg:	
  1482                           
  1483                           ; 4 bytes @ 0xA
  1484  002A                     	ds	4
  1485  002E                     ?___flmul:	
  1486  002E                     ___flmul@b:	
  1487                           ; 4 bytes @ 0xE
  1488                           
  1489                           
  1490                           ; 4 bytes @ 0xE
  1491  002E                     	ds	4
  1492  0032                     ___flmul@a:	
  1493                           
  1494                           ; 4 bytes @ 0x12
  1495  0032                     	ds	4
  1496  0036                     ??___flmul:	
  1497                           
  1498                           ; 1 bytes @ 0x16
  1499  0036                     	ds	5
  1500  003B                     ___flmul@sign:	
  1501                           
  1502                           ; 1 bytes @ 0x1B
  1503  003B                     	ds	1
  1504  003C                     ___flmul@aexp:	
  1505                           
  1506                           ; 1 bytes @ 0x1C
  1507  003C                     	ds	1
  1508  003D                     ___flmul@grs:	
  1509                           
  1510                           ; 4 bytes @ 0x1D
  1511  003D                     	ds	4
  1512  0041                     ___flmul@bexp:	
  1513                           
  1514                           ; 1 bytes @ 0x21
  1515  0041                     	ds	1
  1516  0042                     ___flmul@prod:	
  1517                           
  1518                           ; 4 bytes @ 0x22
  1519  0042                     	ds	4
  1520  0046                     ___flmul@temp:	
  1521                           
  1522                           ; 2 bytes @ 0x26
  1523  0046                     	ds	2
  1524  0048                     ?___fladd:	
  1525  0048                     ___fladd@b:	
  1526                           ; 4 bytes @ 0x28
  1527                           
  1528                           
  1529                           ; 4 bytes @ 0x28
  1530  0048                     	ds	4
  1531  004C                     ___fladd@a:	
  1532                           
  1533                           ; 4 bytes @ 0x2C
  1534  004C                     	ds	4
  1535  0050                     ??___fladd:	
  1536                           
  1537                           ; 1 bytes @ 0x30
  1538  0050                     	ds	8
  1539  0058                     ___fladd@signs:	
  1540                           
  1541                           ; 1 bytes @ 0x38
  1542  0058                     	ds	1
  1543  0059                     ___fladd@aexp:	
  1544                           
  1545                           ; 1 bytes @ 0x39
  1546  0059                     	ds	1
  1547  005A                     ___fladd@bexp:	
  1548                           
  1549                           ; 1 bytes @ 0x3A
  1550  005A                     	ds	1
  1551  005B                     ___fladd@grs:	
  1552                           
  1553                           ; 1 bytes @ 0x3B
  1554  005B                     	ds	1
  1555  005C                     ?___fltol:	
  1556  005C                     ___fltol@f1:	
  1557                           ; 4 bytes @ 0x3C
  1558                           
  1559                           
  1560                           ; 4 bytes @ 0x3C
  1561  005C                     	ds	4
  1562  0060                     ??___fltol:	
  1563                           
  1564                           ; 1 bytes @ 0x40
  1565  0060                     	ds	5
  1566  0065                     ___fltol@sign1:	
  1567                           
  1568                           ; 1 bytes @ 0x45
  1569  0065                     	ds	1
  1570  0066                     ___fltol@exp1:	
  1571                           
  1572                           ; 1 bytes @ 0x46
  1573  0066                     	ds	1
  1574  0067                     UARTUpdatePPM@i:	
  1575                           
  1576                           ; 1 bytes @ 0x47
  1577  0067                     	ds	1
  1578                           
  1579                           	psect	maintext
  1580  075D                     __pmaintext:	
  1581 ;;
  1582 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1583 ;;
  1584 ;; *************** function _main *****************
  1585 ;; Defined at:
  1586 ;;		line 192 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : B1F/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1600 ;;      Params:         0       0       0       0
  1601 ;;      Locals:         0       0       0       0
  1602 ;;      Temps:          0       0       0       0
  1603 ;;      Totals:         0       0       0       0
  1604 ;;Total ram usage:        0 bytes
  1605 ;; Hardware stack levels required when called:    8
  1606 ;; This function calls:
  1607 ;;		_EUSART_is_rx_ready
  1608 ;;		_Init_PPM_Data
  1609 ;;		_Init_UART_Data
  1610 ;;		_LoadByte
  1611 ;;		_SYSTEM_Initialize
  1612 ;; This function is called by:
  1613 ;;		Startup code after reset
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _main
  1619  075D                     _main:	
  1620                           
  1621                           ;main.c: 195: SYSTEM_Initialize();
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1625  075D  2780               	fcall	_SYSTEM_Initialize
  1626                           
  1627                           ;main.c: 196: Init_UART_Data();
  1628  075E  26FD               	fcall	_Init_UART_Data
  1629                           
  1630                           ;main.c: 197: Init_PPM_Data();
  1631  075F  26A0               	fcall	_Init_PPM_Data
  1632                           
  1633                           ;main.c: 203: (INTCONbits.GIE = 1);
  1634  0760  178B               	bsf	11,7	;volatile
  1635                           
  1636                           ;main.c: 206: (INTCONbits.PEIE = 1);
  1637  0761  170B               	bsf	11,6	;volatile
  1638  0762                     l153:	
  1639                           ;main.c: 214: while (1)
  1640                           
  1641                           
  1642                           ;main.c: 215: {;main.c: 217: if(EUSART_is_rx_ready() == 1) {
  1643  0762  279E               	fcall	_EUSART_is_rx_ready
  1644  0763  3A01               	xorlw	1
  1645  0764  1D03               	skipz
  1646  0765  2F62               	goto	l153
  1647                           
  1648                           ;main.c: 218: LoadByte();
  1649  0766  24E4               	fcall	_LoadByte
  1650  0767  2F62               	goto	l153
  1651  0768                     __end_of_main:	
  1652                           
  1653                           	psect	text1
  1654  0780                     __ptext1:	
  1655 ;; *************** function _SYSTEM_Initialize *****************
  1656 ;; Defined at:
  1657 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       0       0       0
  1672 ;;      Locals:         0       0       0       0
  1673 ;;      Temps:          0       0       0       0
  1674 ;;      Totals:         0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    6
  1678 ;; This function calls:
  1679 ;;		_EUSART_Initialize
  1680 ;;		_OSCILLATOR_Initialize
  1681 ;;		_PIN_MANAGER_Initialize
  1682 ;;		_TMR1_Initialize
  1683 ;;		_WDT_Initialize
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _SYSTEM_Initialize
  1691  0780                     _SYSTEM_Initialize:	
  1692                           
  1693                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  1694                           
  1695                           ;incstack = 0
  1696                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1697  0780  2728               	fcall	_PIN_MANAGER_Initialize
  1698                           
  1699                           ;mcc.c: 54: OSCILLATOR_Initialize();
  1700  0781  2773               	fcall	_OSCILLATOR_Initialize
  1701                           
  1702                           ;mcc.c: 55: WDT_Initialize();
  1703  0782  27B3               	fcall	_WDT_Initialize
  1704                           
  1705                           ;mcc.c: 56: TMR1_Initialize();
  1706  0783  2713               	fcall	_TMR1_Initialize
  1707                           
  1708                           ;mcc.c: 57: EUSART_Initialize();
  1709  0784  26E1               	fcall	_EUSART_Initialize
  1710  0785  0008               	return
  1711  0786                     __end_of_SYSTEM_Initialize:	
  1712                           
  1713                           	psect	text2
  1714  07B3                     __ptext2:	
  1715 ;; *************** function _WDT_Initialize *****************
  1716 ;; Defined at:
  1717 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1731 ;;      Params:         0       0       0       0
  1732 ;;      Locals:         0       0       0       0
  1733 ;;      Temps:          0       0       0       0
  1734 ;;      Totals:         0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    4
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_SYSTEM_Initialize
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _WDT_Initialize
  1747  07B3                     _WDT_Initialize:	
  1748                           
  1749                           ;mcc.c: 73: WDTCON = 0x16;
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _WDT_Initialize: [wreg]
  1753  07B3  3016               	movlw	22
  1754  07B4  0021               	movlb	1	; select bank1
  1755  07B5  0097               	movwf	23	;volatile
  1756  07B6  0008               	return
  1757  07B7                     __end_of_WDT_Initialize:	
  1758                           
  1759                           	psect	text3
  1760  0713                     __ptext3:	
  1761 ;; *************** function _TMR1_Initialize *****************
  1762 ;; Defined at:
  1763 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, pclath, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1777 ;;      Params:         0       0       0       0
  1778 ;;      Locals:         0       0       0       0
  1779 ;;      Temps:          0       0       0       0
  1780 ;;      Totals:         0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    5
  1784 ;; This function calls:
  1785 ;;		_TMR1_SetInterruptHandler
  1786 ;; This function is called by:
  1787 ;;		_SYSTEM_Initialize
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function _TMR1_Initialize
  1793  0713                     _TMR1_Initialize:	
  1794                           
  1795                           ;tmr1.c: 101: T1GCON = 0x00;
  1796                           
  1797                           ;incstack = 0
  1798                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1799  0713  0020               	movlb	0	; select bank0
  1800  0714  0199               	clrf	25	;volatile
  1801                           
  1802                           ;tmr1.c: 104: TMR1H = 0x06;
  1803  0715  3006               	movlw	6
  1804  0716  0097               	movwf	23	;volatile
  1805                           
  1806                           ;tmr1.c: 107: TMR1L = 0x00;
  1807  0717  0196               	clrf	22	;volatile
  1808                           
  1809                           ;tmr1.c: 110: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1810  0718  0817               	movf	23,w	;volatile
  1811  0719  00EF               	movwf	_timer1ReloadVal+1	;volatile
  1812  071A  0816               	movf	22,w	;volatile
  1813  071B  00EE               	movwf	_timer1ReloadVal	;volatile
  1814                           
  1815                           ;tmr1.c: 113: PIR1bits.TMR1IF = 0;
  1816  071C  1011               	bcf	17,0	;volatile
  1817                           
  1818                           ;tmr1.c: 116: PIE1bits.TMR1IE = 1;
  1819  071D  0021               	movlb	1	; select bank1
  1820  071E  1411               	bsf	17,0	;volatile
  1821                           
  1822                           ;tmr1.c: 119: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1823  071F  3060               	movlw	low _TMR1_DefaultInterruptHandler
  1824  0720  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1825  0721  3006               	movlw	high _TMR1_DefaultInterruptHandler
  1826  0722  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1827  0723  2786               	fcall	_TMR1_SetInterruptHandler
  1828                           
  1829                           ;tmr1.c: 122: T1CON = 0x41;
  1830  0724  3041               	movlw	65
  1831  0725  0020               	movlb	0	; select bank0
  1832  0726  0098               	movwf	24	;volatile
  1833  0727  0008               	return
  1834  0728                     __end_of_TMR1_Initialize:	
  1835                           
  1836                           	psect	text4
  1837  0786                     __ptext4:	
  1838 ;; *************** function _TMR1_SetInterruptHandler *****************
  1839 ;; Defined at:
  1840 ;;		line 203 in file "mcc_generated_files/tmr1.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  1843 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1855 ;;      Params:         2       0       0       0
  1856 ;;      Locals:         0       0       0       0
  1857 ;;      Temps:          0       0       0       0
  1858 ;;      Totals:         2       0       0       0
  1859 ;;Total ram usage:        2 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    4
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_TMR1_Initialize
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _TMR1_SetInterruptHandler
  1871  0786                     _TMR1_SetInterruptHandler:	
  1872                           
  1873                           ;tmr1.c: 204: TMR1_InterruptHandler = InterruptHandler;
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  1877  0786  0875               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  1878  0787  0021               	movlb	1	; select bank1
  1879  0788  00E7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  1880  0789  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  1881  078A  00E6               	movwf	_TMR1_InterruptHandler^(0+128)
  1882  078B  0008               	return
  1883  078C                     __end_of_TMR1_SetInterruptHandler:	
  1884                           
  1885                           	psect	text5
  1886  0728                     __ptext5:	
  1887 ;; *************** function _PIN_MANAGER_Initialize *****************
  1888 ;; Defined at:
  1889 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1903 ;;      Params:         0       0       0       0
  1904 ;;      Locals:         0       0       0       0
  1905 ;;      Temps:          0       0       0       0
  1906 ;;      Totals:         0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    4
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_SYSTEM_Initialize
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _PIN_MANAGER_Initialize
  1919  0728                     _PIN_MANAGER_Initialize:	
  1920                           
  1921                           ;pin_manager.c: 60: LATA = 0x00;
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1925  0728  0022               	movlb	2	; select bank2
  1926  0729  018C               	clrf	12	;volatile
  1927                           
  1928                           ;pin_manager.c: 65: TRISA = 0x2F;
  1929  072A  302F               	movlw	47
  1930  072B  0021               	movlb	1	; select bank1
  1931  072C  008C               	movwf	12	;volatile
  1932                           
  1933                           ;pin_manager.c: 70: ANSELA = 0x15;
  1934  072D  3015               	movlw	21
  1935  072E  0023               	movlb	3	; select bank3
  1936  072F  008C               	movwf	12	;volatile
  1937                           
  1938                           ;pin_manager.c: 75: WPUA = 0x00;
  1939  0730  0024               	movlb	4	; select bank4
  1940  0731  018C               	clrf	12	;volatile
  1941                           
  1942                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 1;
  1943  0732  0021               	movlb	1	; select bank1
  1944  0733  1795               	bsf	21,7	;volatile
  1945                           
  1946                           ;pin_manager.c: 81: ODCONA = 0x00;
  1947  0734  0025               	movlb	5	; select bank5
  1948  0735  018C               	clrf	12	;volatile
  1949                           
  1950                           ;pin_manager.c: 86: SLRCONA = 0x37;
  1951  0736  3037               	movlw	55
  1952  0737  0026               	movlb	6	; select bank6
  1953  0738  008C               	movwf	12	;volatile
  1954                           
  1955                           ;pin_manager.c: 91: APFCON = 0x00;
  1956  0739  0022               	movlb	2	; select bank2
  1957  073A  019D               	clrf	29	;volatile
  1958  073B  0008               	return
  1959  073C                     __end_of_PIN_MANAGER_Initialize:	
  1960                           
  1961                           	psect	text6
  1962  0773                     __ptext6:	
  1963 ;; *************** function _OSCILLATOR_Initialize *****************
  1964 ;; Defined at:
  1965 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1979 ;;      Params:         0       0       0       0
  1980 ;;      Locals:         0       0       0       0
  1981 ;;      Temps:          0       0       0       0
  1982 ;;      Totals:         0       0       0       0
  1983 ;;Total ram usage:        0 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    4
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_SYSTEM_Initialize
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _OSCILLATOR_Initialize
  1995  0773                     _OSCILLATOR_Initialize:	
  1996                           
  1997                           ;mcc.c: 63: OSCCON = 0x6A;
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2001  0773  306A               	movlw	106
  2002  0774  0021               	movlb	1	; select bank1
  2003  0775  0099               	movwf	25	;volatile
  2004                           
  2005                           ;mcc.c: 65: OSCTUNE = 0x00;
  2006  0776  0198               	clrf	24	;volatile
  2007                           
  2008                           ;mcc.c: 67: BORCON = 0x00;
  2009  0777  0022               	movlb	2	; select bank2
  2010  0778  0196               	clrf	22	;volatile
  2011  0779  0008               	return
  2012  077A                     __end_of_OSCILLATOR_Initialize:	
  2013                           
  2014                           	psect	text7
  2015  06E1                     __ptext7:	
  2016 ;; *************** function _EUSART_Initialize *****************
  2017 ;; Defined at:
  2018 ;;		line 65 in file "mcc_generated_files/eusart.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2032 ;;      Params:         0       0       0       0
  2033 ;;      Locals:         0       0       0       0
  2034 ;;      Temps:          0       0       0       0
  2035 ;;      Totals:         0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    5
  2039 ;; This function calls:
  2040 ;;		_EUSART_SetErrorHandler
  2041 ;;		_EUSART_SetFramingErrorHandler
  2042 ;;		_EUSART_SetOverrunErrorHandler
  2043 ;; This function is called by:
  2044 ;;		_SYSTEM_Initialize
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _EUSART_Initialize
  2050  06E1                     _EUSART_Initialize:	
  2051                           
  2052                           ;eusart.c: 70: BAUDCON = 0x09;
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2056  06E1  3009               	movlw	9
  2057  06E2  0023               	movlb	3	; select bank3
  2058  06E3  009F               	movwf	31	;volatile
  2059                           
  2060                           ;eusart.c: 73: RCSTA = 0x90;
  2061  06E4  3090               	movlw	144
  2062  06E5  009D               	movwf	29	;volatile
  2063                           
  2064                           ;eusart.c: 76: TXSTA = 0x04;
  2065  06E6  3004               	movlw	4
  2066  06E7  009E               	movwf	30	;volatile
  2067                           
  2068                           ;eusart.c: 79: SPBRGL = 0x67;
  2069  06E8  3067               	movlw	103
  2070  06E9  009B               	movwf	27	;volatile
  2071                           
  2072                           ;eusart.c: 82: SPBRGH = 0x00;
  2073  06EA  019C               	clrf	28	;volatile
  2074                           
  2075                           ;eusart.c: 85: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  2076  06EB  3000               	movlw	0
  2077  06EC  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2078  06ED  3000               	movlw	0
  2079  06EE  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2080  06EF  2792               	fcall	_EUSART_SetFramingErrorHandler
  2081                           
  2082                           ;eusart.c: 86: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  2083  06F0  3000               	movlw	0
  2084  06F1  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2085  06F2  3000               	movlw	0
  2086  06F3  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2087  06F4  278C               	fcall	_EUSART_SetOverrunErrorHandler
  2088                           
  2089                           ;eusart.c: 87: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  2090  06F5  3000               	movlw	0
  2091  06F6  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
  2092  06F7  3000               	movlw	0
  2093  06F8  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2094  06F9  2798               	fcall	_EUSART_SetErrorHandler
  2095                           
  2096                           ;eusart.c: 89: eusartRxLastError.status = 0;
  2097  06FA  0020               	movlb	0	; select bank0
  2098  06FB  01EC               	clrf	_eusartRxLastError	;volatile
  2099  06FC  0008               	return
  2100  06FD                     __end_of_EUSART_Initialize:	
  2101                           
  2102                           	psect	text8
  2103  078C                     __ptext8:	
  2104 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2105 ;; Defined at:
  2106 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  2109 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2121 ;;      Params:         2       0       0       0
  2122 ;;      Locals:         0       0       0       0
  2123 ;;      Temps:          0       0       0       0
  2124 ;;      Totals:         2       0       0       0
  2125 ;;Total ram usage:        2 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    4
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_EUSART_Initialize
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _EUSART_SetOverrunErrorHandler
  2137  078C                     _EUSART_SetOverrunErrorHandler:	
  2138                           
  2139                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2143  078C  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2144  078D  0021               	movlb	1	; select bank1
  2145  078E  00E3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  2146  078F  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2147  0790  00E2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  2148  0791  0008               	return
  2149  0792                     __end_of_EUSART_SetOverrunErrorHandler:	
  2150                           
  2151                           	psect	text9
  2152  0792                     __ptext9:	
  2153 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2154 ;; Defined at:
  2155 ;;		line 157 in file "mcc_generated_files/eusart.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  2158 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2170 ;;      Params:         2       0       0       0
  2171 ;;      Locals:         0       0       0       0
  2172 ;;      Temps:          0       0       0       0
  2173 ;;      Totals:         2       0       0       0
  2174 ;;Total ram usage:        2 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		Nothing
  2179 ;; This function is called by:
  2180 ;;		_EUSART_Initialize
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _EUSART_SetFramingErrorHandler
  2186  0792                     _EUSART_SetFramingErrorHandler:	
  2187                           
  2188                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2192  0792  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2193  0793  0021               	movlb	1	; select bank1
  2194  0794  00E5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  2195  0795  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2196  0796  00E4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  2197  0797  0008               	return
  2198  0798                     __end_of_EUSART_SetFramingErrorHandler:	
  2199                           
  2200                           	psect	text10
  2201  0798                     __ptext10:	
  2202 ;; *************** function _EUSART_SetErrorHandler *****************
  2203 ;; Defined at:
  2204 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  2207 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2219 ;;      Params:         2       0       0       0
  2220 ;;      Locals:         0       0       0       0
  2221 ;;      Temps:          0       0       0       0
  2222 ;;      Totals:         2       0       0       0
  2223 ;;Total ram usage:        2 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:    4
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_EUSART_Initialize
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _EUSART_SetErrorHandler
  2235  0798                     _EUSART_SetErrorHandler:	
  2236                           
  2237                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2241  0798  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2242  0799  0021               	movlb	1	; select bank1
  2243  079A  00E1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  2244  079B  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2245  079C  00E0               	movwf	_EUSART_ErrorHandler^(0+128)
  2246  079D  0008               	return
  2247  079E                     __end_of_EUSART_SetErrorHandler:	
  2248                           
  2249                           	psect	text11
  2250  04E4                     __ptext11:	
  2251 ;; *************** function _LoadByte *****************
  2252 ;; Defined at:
  2253 ;;		line 111 in file "main.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  byte            1    5[BANK1 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2267 ;;      Params:         0       0       0       0
  2268 ;;      Locals:         0       0       1       0
  2269 ;;      Temps:          0       0       1       0
  2270 ;;      Totals:         0       0       2       0
  2271 ;;Total ram usage:        2 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    7
  2274 ;; This function calls:
  2275 ;;		_CheckCRC
  2276 ;;		_EUSART_Read
  2277 ;;		_UARTUpdatePPM
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _LoadByte
  2285  04E4                     _LoadByte:	
  2286                           
  2287                           ;main.c: 112: if(PIR1bits.RCIF == 0) return;
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _LoadByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2291  04E4  0020               	movlb	0	; select bank0
  2292  04E5  1E91               	btfss	17,5	;volatile
  2293  04E6  0008               	return
  2294  04E7  2D3F               	goto	l2790
  2295  04E8                     l2748:	
  2296                           
  2297                           ;main.c: 124: byte = EUSART_Read();
  2298  04E8  2768               	fcall	_EUSART_Read
  2299  04E9  0021               	movlb	1	; select bank1
  2300  04EA  00EC               	movwf	??_LoadByte^(0+128)
  2301  04EB  086C               	movf	??_LoadByte^(0+128),w
  2302  04EC  00ED               	movwf	LoadByte@byte^(0+128)
  2303                           
  2304                           ;main.c: 125: if(byte == 'G') uartLoadState = G_RECEIVED;
  2305  04ED  3047               	movlw	71
  2306  04EE  066D               	xorwf	LoadByte@byte^(0+128),w
  2307  04EF  1D03               	btfss	3,2
  2308  04F0  0008               	return
  2309  04F1  3001               	movlw	1
  2310  04F2  00EC               	movwf	??_LoadByte^(0+128)
  2311  04F3  086C               	movf	??_LoadByte^(0+128),w
  2312  04F4  0020               	movlb	0	; select bank0
  2313  04F5  00ED               	movwf	_uartLoadState	;volatile
  2314  04F6  0008               	return
  2315  04F7                     l2754:	
  2316                           
  2317                           ;main.c: 129: if(EUSART_Read() == 'O') uartLoadState = O_RECEIVED;
  2318  04F7  2768               	fcall	_EUSART_Read
  2319  04F8  3A4F               	xorlw	79
  2320  04F9  1D03               	skipz
  2321  04FA  2D02               	goto	l2758
  2322  04FB  3002               	movlw	2
  2323  04FC  0021               	movlb	1	; select bank1
  2324  04FD  00EC               	movwf	??_LoadByte^(0+128)
  2325  04FE  086C               	movf	??_LoadByte^(0+128),w
  2326  04FF  0020               	movlb	0	; select bank0
  2327  0500  00ED               	movwf	_uartLoadState	;volatile
  2328  0501  0008               	return
  2329  0502                     l2758:	
  2330                           
  2331                           ;main.c: 130: else uartLoadState = UART_READY;
  2332  0502  0020               	movlb	0	; select bank0
  2333  0503  01ED               	clrf	_uartLoadState	;volatile
  2334  0504  0008               	return
  2335  0505                     l2760:	
  2336                           
  2337                           ;main.c: 133: if(EUSART_Read() == 0x00) {
  2338  0505  2768               	fcall	_EUSART_Read
  2339  0506  3A00               	xorlw	0
  2340  0507  1D03               	skipz
  2341  0508  0008               	return
  2342                           
  2343                           ;main.c: 134: uartLoadState = PID_GO_DRIVE_RECEIVED;
  2344  0509  3004               	movlw	4
  2345  050A  0021               	movlb	1	; select bank1
  2346  050B  00EC               	movwf	??_LoadByte^(0+128)
  2347  050C  086C               	movf	??_LoadByte^(0+128),w
  2348  050D  0020               	movlb	0	; select bank0
  2349  050E  00ED               	movwf	_uartLoadState	;volatile
  2350                           
  2351                           ;main.c: 135: }
  2352  050F  0008               	return
  2353  0510                     l2764:	
  2354                           
  2355                           ;main.c: 150: uartData.buf[0] = EUSART_Read();
  2356  0510  2768               	fcall	_EUSART_Read
  2357  0511  0021               	movlb	1	; select bank1
  2358  0512  00EC               	movwf	??_LoadByte^(0+128)
  2359  0513  086C               	movf	??_LoadByte^(0+128),w
  2360  0514  00CB               	movwf	(_uartData^(0+128)+1)	;volatile
  2361                           
  2362                           ;main.c: 151: if(uartData.buf[0] > (20 - (1 + 1))) uartLoadState = UART_READY;
  2363  0515  3013               	movlw	19
  2364  0516  024B               	subwf	(_uartData^(0+128)+1),w	;volatile
  2365  0517  1803               	btfsc	3,0
  2366  0518  2D02               	goto	l2758
  2367                           
  2368                           ;main.c: 152: else {;main.c: 154: uartData.uartBufSize = uartData.buf[0] + (1 + 1);
  2369  0519  084B               	movf	(_uartData^(0+128)+1),w	;volatile
  2370  051A  3E02               	addlw	2
  2371  051B  00EC               	movwf	??_LoadByte^(0+128)
  2372  051C  086C               	movf	??_LoadByte^(0+128),w
  2373  051D  00CA               	movwf	_uartData^(0+128)	;volatile
  2374                           
  2375                           ;main.c: 157: uartData.iBuf = 1;
  2376  051E  3001               	movlw	1
  2377  051F  00EC               	movwf	??_LoadByte^(0+128)
  2378  0520  086C               	movf	??_LoadByte^(0+128),w
  2379  0521  00DF               	movwf	(_uartData^(0+128)+21)	;volatile
  2380                           
  2381                           ;main.c: 158: uartLoadState = DATA_BYTE_NUMBER_RECEIVED;
  2382  0522  3003               	movlw	3
  2383  0523  00EC               	movwf	??_LoadByte^(0+128)
  2384  0524  086C               	movf	??_LoadByte^(0+128),w
  2385  0525  0020               	movlb	0	; select bank0
  2386  0526  00ED               	movwf	_uartLoadState	;volatile
  2387  0527  0008               	return
  2388  0528                     l2776:	
  2389                           
  2390                           ;main.c: 162: uartData.buf[uartData.iBuf] = EUSART_Read();
  2391  0528  2768               	fcall	_EUSART_Read
  2392  0529  0021               	movlb	1	; select bank1
  2393  052A  00EC               	movwf	??_LoadByte^(0+128)
  2394  052B  085F               	movf	(_uartData^(0+128)+21),w	;volatile
  2395  052C  3ECB               	addlw	(low ((_uartData| 0+1)))& (0+255)
  2396  052D  0086               	movwf	6
  2397  052E  0187               	clrf	7
  2398  052F  086C               	movf	??_LoadByte^(0+128),w
  2399  0530  0081               	movwf	1
  2400                           
  2401                           ;main.c: 163: uartData.iBuf++;
  2402  0531  3001               	movlw	1
  2403  0532  00EC               	movwf	??_LoadByte^(0+128)
  2404  0533  086C               	movf	??_LoadByte^(0+128),w
  2405  0534  07DF               	addwf	(_uartData^(0+128)+21),f	;volatile
  2406                           
  2407                           ;main.c: 164: if(uartData.iBuf >= uartData.uartBufSize) {
  2408  0535  084A               	movf	_uartData^(0+128),w	;volatile
  2409  0536  025F               	subwf	(_uartData^(0+128)+21),w	;volatile
  2410  0537  1C03               	skipc
  2411  0538  0008               	return
  2412                           
  2413                           ;main.c: 165: if(CheckCRC() == 1) UARTUpdatePPM();
  2414  0539  261D               	fcall	_CheckCRC
  2415  053A  3A01               	xorlw	1
  2416  053B  1D03               	skipz
  2417  053C  2D02               	goto	l2758
  2418  053D  2551               	fcall	_UARTUpdatePPM
  2419  053E  2D02               	goto	l2758
  2420  053F                     l2790:	
  2421  053F  086D               	movf	_uartLoadState,w	;volatile
  2422                           
  2423                           ; Switch size 1, requested type "simple"
  2424                           ; Number of cases is 5, Range of values is 0 to 4
  2425                           ; switch strategies available:
  2426                           ; Name         Instructions Cycles
  2427                           ; direct_byte           16     6 (fixed)
  2428                           ; simple_byte           16     9 (average)
  2429                           ; jumptable            260     6 (fixed)
  2430                           ;	Chosen strategy is simple_byte
  2431  0540  3A00               	xorlw	0	; case 0
  2432  0541  1903               	skipnz
  2433  0542  2CE8               	goto	l2748
  2434  0543  3A01               	xorlw	1	; case 1
  2435  0544  1903               	skipnz
  2436  0545  2CF7               	goto	l2754
  2437  0546  3A03               	xorlw	3	; case 2
  2438  0547  1903               	skipnz
  2439  0548  2D05               	goto	l2760
  2440  0549  3A01               	xorlw	1	; case 3
  2441  054A  1903               	skipnz
  2442  054B  2D28               	goto	l2776
  2443  054C  3A07               	xorlw	7	; case 4
  2444  054D  1903               	skipnz
  2445  054E  2D10               	goto	l2764
  2446  054F  2D02               	goto	l2758
  2447  0550  0008               	return
  2448  0551                     __end_of_LoadByte:	
  2449                           
  2450                           	psect	text12
  2451  0551                     __ptext12:	
  2452 ;; *************** function _UARTUpdatePPM *****************
  2453 ;; Defined at:
  2454 ;;		line 92 in file "main.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  i               1   71[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2468 ;;      Params:         0       0       0       0
  2469 ;;      Locals:         0       1       0       0
  2470 ;;      Temps:          0       0       4       0
  2471 ;;      Totals:         0       1       4       0
  2472 ;;Total ram usage:        5 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    6
  2475 ;; This function calls:
  2476 ;;		___fladd
  2477 ;;		___flmul
  2478 ;;		___fltol
  2479 ;;		___xxtofl
  2480 ;; This function is called by:
  2481 ;;		_LoadByte
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _UARTUpdatePPM
  2487  0551                     _UARTUpdatePPM:	
  2488                           
  2489                           ;main.c: 93: ppmData.ppmRegSize = uartData.buf[0];
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in _UARTUpdatePPM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2493  0551  0021               	movlb	1	; select bank1
  2494  0552  084B               	movf	(_uartData^(0+128)+1),w	;volatile
  2495  0553  00E8               	movwf	??_UARTUpdatePPM^(0+128)
  2496  0554  0868               	movf	??_UARTUpdatePPM^(0+128),w
  2497  0555  00A0               	movwf	_ppmData^(0+128)	;volatile
  2498                           
  2499                           ;main.c: 95: for(uint8_t i = 0; i < ppmData.ppmRegSize; i++) {
  2500  0556  0020               	movlb	0	; select bank0
  2501  0557  01E7               	clrf	UARTUpdatePPM@i
  2502  0558                     l2688:	
  2503  0558  0021               	movlb	1	; select bank1
  2504  0559  0820               	movf	_ppmData^(0+128),w	;volatile
  2505  055A  0020               	movlb	0	; select bank0
  2506  055B  0267               	subwf	UARTUpdatePPM@i,w
  2507  055C  1803               	btfsc	3,0
  2508  055D  0008               	return
  2509  055E  0867               	movf	UARTUpdatePPM@i,w
  2510  055F  3ECC               	addlw	(low ((_uartData| 0+2)))& (0+255)
  2511  0560  0086               	movwf	6
  2512  0561  0187               	clrf	7
  2513  0562  0801               	movf	1,w
  2514  0563  0021               	movlb	1	; select bank1
  2515  0564  00E8               	movwf	??_UARTUpdatePPM^(0+128)
  2516  0565  01E9               	clrf	(??_UARTUpdatePPM^(0+128)+1)
  2517  0566  01EA               	clrf	(??_UARTUpdatePPM^(0+128)+2)
  2518  0567  01EB               	clrf	(??_UARTUpdatePPM^(0+128)+3)
  2519  0568  086B               	movf	(??_UARTUpdatePPM+3)^(0+128),w
  2520  0569  0020               	movlb	0	; select bank0
  2521  056A  00A3               	movwf	___xxtofl@val+3
  2522  056B  0021               	movlb	1	; select bank1
  2523  056C  086A               	movf	(??_UARTUpdatePPM+2)^(0+128),w
  2524  056D  0020               	movlb	0	; select bank0
  2525  056E  00A2               	movwf	___xxtofl@val+2
  2526  056F  0021               	movlb	1	; select bank1
  2527  0570  0869               	movf	(??_UARTUpdatePPM+1)^(0+128),w
  2528  0571  0020               	movlb	0	; select bank0
  2529  0572  00A1               	movwf	___xxtofl@val+1
  2530  0573  0021               	movlb	1	; select bank1
  2531  0574  0868               	movf	??_UARTUpdatePPM^(0+128),w
  2532  0575  0020               	movlb	0	; select bank0
  2533  0576  00A0               	movwf	___xxtofl@val
  2534  0577  3000               	movlw	0
  2535  0578  244E               	fcall	___xxtofl
  2536  0579  0020               	movlb	0	; select bank0
  2537  057A  0823               	movf	?___xxtofl+3,w
  2538  057B  00B5               	movwf	___flmul@a+3
  2539  057C  0822               	movf	?___xxtofl+2,w
  2540  057D  00B4               	movwf	___flmul@a+2
  2541  057E  0821               	movf	?___xxtofl+1,w
  2542  057F  00B3               	movwf	___flmul@a+1
  2543  0580  0820               	movf	?___xxtofl,w
  2544  0581  00B2               	movwf	___flmul@a
  2545  0582  30C1               	movlw	193
  2546  0583  00B1               	movwf	___flmul@b+3
  2547  0584  307A               	movlw	122
  2548  0585  00B0               	movwf	___flmul@b+2
  2549  0586  30FB               	movlw	251
  2550  0587  00AF               	movwf	___flmul@b+1
  2551  0588  3016               	movlw	22
  2552  0589  00AE               	movwf	___flmul@b
  2553  058A  2052               	fcall	___flmul
  2554  058B  0020               	movlb	0	; select bank0
  2555  058C  0831               	movf	?___flmul+3,w
  2556  058D  00CF               	movwf	___fladd@a+3
  2557  058E  0830               	movf	?___flmul+2,w
  2558  058F  00CE               	movwf	___fladd@a+2
  2559  0590  082F               	movf	?___flmul+1,w
  2560  0591  00CD               	movwf	___fladd@a+1
  2561  0592  082E               	movf	?___flmul,w
  2562  0593  00CC               	movwf	___fladd@a
  2563  0594  3047               	movlw	71
  2564  0595  00CB               	movwf	___fladd@b+3
  2565  0596  3078               	movlw	120
  2566  0597  00CA               	movwf	___fladd@b+2
  2567  0598  303E               	movlw	62
  2568  0599  00C9               	movwf	___fladd@b+1
  2569  059A  3000               	movlw	0
  2570  059B  00C8               	movwf	___fladd@b
  2571  059C  226C               	fcall	___fladd
  2572  059D  0020               	movlb	0	; select bank0
  2573  059E  084B               	movf	?___fladd+3,w
  2574  059F  00DF               	movwf	___fltol@f1+3
  2575  05A0  084A               	movf	?___fladd+2,w
  2576  05A1  00DE               	movwf	___fltol@f1+2
  2577  05A2  0849               	movf	?___fladd+1,w
  2578  05A3  00DD               	movwf	___fltol@f1+1
  2579  05A4  0848               	movf	?___fladd,w
  2580  05A5  00DC               	movwf	___fltol@f1
  2581  05A6  25B7               	fcall	___fltol
  2582  05A7  0020               	movlb	0	; select bank0
  2583  05A8  3567               	lslf	UARTUpdatePPM@i,w
  2584  05A9  3EA1               	addlw	(low ((_ppmData| 0+1)))& (0+255)
  2585  05AA  0086               	movwf	6
  2586  05AB  0187               	clrf	7
  2587  05AC  085C               	movf	?___fltol,w
  2588  05AD  3FC0               	movwi [0]fsr1
  2589  05AE  085D               	movf	?___fltol+1,w
  2590  05AF  3FC1               	movwi [1]fsr1
  2591  05B0  3001               	movlw	1
  2592  05B1  0021               	movlb	1	; select bank1
  2593  05B2  00E8               	movwf	??_UARTUpdatePPM^(0+128)
  2594  05B3  0868               	movf	??_UARTUpdatePPM^(0+128),w
  2595  05B4  0020               	movlb	0	; select bank0
  2596  05B5  07E7               	addwf	UARTUpdatePPM@i,f
  2597  05B6  2D58               	goto	l2688
  2598  05B7                     __end_of_UARTUpdatePPM:	
  2599                           
  2600                           	psect	text13
  2601  044E                     __ptext13:	
  2602 ;; *************** function ___xxtofl *****************
  2603 ;; Defined at:
  2604 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/xxtofl.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  sign            1    wreg     unsigned char 
  2607 ;;  val             4    0[BANK0 ] long 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  sign            1    8[BANK0 ] unsigned char 
  2610 ;;  arg             4   10[BANK0 ] unsigned long 
  2611 ;;  exp             1    9[BANK0 ] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  4    0[BANK0 ] unsigned char 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2621 ;;      Params:         0       4       0       0
  2622 ;;      Locals:         0       6       0       0
  2623 ;;      Temps:          0       4       0       0
  2624 ;;      Totals:         0      14       0       0
  2625 ;;Total ram usage:       14 bytes
  2626 ;; Hardware stack levels used:    1
  2627 ;; Hardware stack levels required when called:    4
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_UARTUpdatePPM
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function ___xxtofl
  2637  044E                     ___xxtofl:	
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2641                           ;___xxtofl@sign stored from wreg
  2642  044E  0020               	movlb	0	; select bank0
  2643  044F  00A8               	movwf	___xxtofl@sign
  2644  0450  0828               	movf	___xxtofl@sign,w
  2645  0451  1D03               	btfss	3,2
  2646  0452  1FA3               	btfss	___xxtofl@val+3,7
  2647  0453  2C64               	goto	l2642
  2648  0454  0920               	comf	___xxtofl@val,w
  2649  0455  00AA               	movwf	___xxtofl@arg
  2650  0456  0921               	comf	___xxtofl@val+1,w
  2651  0457  00AB               	movwf	___xxtofl@arg+1
  2652  0458  0922               	comf	___xxtofl@val+2,w
  2653  0459  00AC               	movwf	___xxtofl@arg+2
  2654  045A  0923               	comf	___xxtofl@val+3,w
  2655  045B  00AD               	movwf	___xxtofl@arg+3
  2656  045C  0AAA               	incf	___xxtofl@arg,f
  2657  045D  1903               	skipnz
  2658  045E  0AAB               	incf	___xxtofl@arg+1,f
  2659  045F  1903               	skipnz
  2660  0460  0AAC               	incf	___xxtofl@arg+2,f
  2661  0461  1903               	skipnz
  2662  0462  0AAD               	incf	___xxtofl@arg+3,f
  2663  0463  2C6C               	goto	l813
  2664  0464                     l2642:	
  2665  0464  0823               	movf	___xxtofl@val+3,w
  2666  0465  00AD               	movwf	___xxtofl@arg+3
  2667  0466  0822               	movf	___xxtofl@val+2,w
  2668  0467  00AC               	movwf	___xxtofl@arg+2
  2669  0468  0821               	movf	___xxtofl@val+1,w
  2670  0469  00AB               	movwf	___xxtofl@arg+1
  2671  046A  0820               	movf	___xxtofl@val,w
  2672  046B  00AA               	movwf	___xxtofl@arg
  2673  046C                     l813:	
  2674  046C  0823               	movf	___xxtofl@val+3,w
  2675  046D  0422               	iorwf	___xxtofl@val+2,w
  2676  046E  0421               	iorwf	___xxtofl@val+1,w
  2677  046F  0420               	iorwf	___xxtofl@val,w
  2678  0470  1D03               	skipz
  2679  0471  2C7B               	goto	l2648
  2680  0472  3000               	movlw	0
  2681  0473  00A3               	movwf	?___xxtofl+3
  2682  0474  3000               	movlw	0
  2683  0475  00A2               	movwf	?___xxtofl+2
  2684  0476  3000               	movlw	0
  2685  0477  00A1               	movwf	?___xxtofl+1
  2686  0478  3000               	movlw	0
  2687  0479  00A0               	movwf	?___xxtofl
  2688  047A  0008               	return
  2689  047B                     l2648:	
  2690  047B  3096               	movlw	150
  2691  047C  00A4               	movwf	??___xxtofl
  2692  047D  0824               	movf	??___xxtofl,w
  2693  047E  00A9               	movwf	___xxtofl@exp
  2694  047F                     l2652:	
  2695  047F  30FE               	movlw	254
  2696  0480  052D               	andwf	___xxtofl@arg+3,w
  2697  0481  1903               	btfsc	3,2
  2698  0482  2CA2               	goto	l819
  2699  0483  3001               	movlw	1
  2700  0484  00A4               	movwf	??___xxtofl
  2701  0485  0824               	movf	??___xxtofl,w
  2702  0486  07A9               	addwf	___xxtofl@exp,f
  2703  0487  3001               	movlw	1
  2704  0488                     u3245:	
  2705  0488  36AD               	lsrf	___xxtofl@arg+3,f
  2706  0489  0CAC               	rrf	___xxtofl@arg+2,f
  2707  048A  0CAB               	rrf	___xxtofl@arg+1,f
  2708  048B  0CAA               	rrf	___xxtofl@arg,f
  2709  048C  0B89               	decfsz	9,f
  2710  048D  2C88               	goto	u3245
  2711  048E  2C7F               	goto	l2652
  2712  048F                     l2654:	
  2713  048F  3001               	movlw	1
  2714  0490  00A4               	movwf	??___xxtofl
  2715  0491  0824               	movf	??___xxtofl,w
  2716  0492  07A9               	addwf	___xxtofl@exp,f
  2717  0493  3001               	movlw	1
  2718  0494  07AA               	addwf	___xxtofl@arg,f
  2719  0495  3000               	movlw	0
  2720  0496  3DAB               	addwfc	___xxtofl@arg+1,f
  2721  0497  3000               	movlw	0
  2722  0498  3DAC               	addwfc	___xxtofl@arg+2,f
  2723  0499  3000               	movlw	0
  2724  049A  3DAD               	addwfc	___xxtofl@arg+3,f
  2725  049B  3001               	movlw	1
  2726  049C                     u3265:	
  2727  049C  36AD               	lsrf	___xxtofl@arg+3,f
  2728  049D  0CAC               	rrf	___xxtofl@arg+2,f
  2729  049E  0CAB               	rrf	___xxtofl@arg+1,f
  2730  049F  0CAA               	rrf	___xxtofl@arg,f
  2731  04A0  0B89               	decfsz	9,f
  2732  04A1  2C9C               	goto	u3265
  2733  04A2                     l819:	
  2734  04A2  30FF               	movlw	255
  2735  04A3  052D               	andwf	___xxtofl@arg+3,w
  2736  04A4  1903               	btfsc	3,2
  2737  04A5  2CB4               	goto	l2662
  2738  04A6  2C8F               	goto	l2654
  2739  04A7                     l2664:	
  2740  04A7  3002               	movlw	2
  2741  04A8  0229               	subwf	___xxtofl@exp,w
  2742  04A9  1C03               	btfss	3,0
  2743  04AA  2CB6               	goto	l826
  2744  04AB  3001               	movlw	1
  2745  04AC  02A9               	subwf	___xxtofl@exp,f
  2746  04AD  3001               	movlw	1
  2747  04AE                     u3285:	
  2748  04AE  35AA               	lslf	___xxtofl@arg,f
  2749  04AF  0DAB               	rlf	___xxtofl@arg+1,f
  2750  04B0  0DAC               	rlf	___xxtofl@arg+2,f
  2751  04B1  0DAD               	rlf	___xxtofl@arg+3,f
  2752  04B2  0B89               	decfsz	9,f
  2753  04B3  2CAE               	goto	u3285
  2754  04B4                     l2662:	
  2755  04B4  1FAC               	btfss	___xxtofl@arg+2,7
  2756  04B5  2CA7               	goto	l2664
  2757  04B6                     l826:	
  2758  04B6  1829               	btfsc	___xxtofl@exp,0
  2759  04B7  2CC0               	goto	l827
  2760  04B8  30FF               	movlw	255
  2761  04B9  05AA               	andwf	___xxtofl@arg,f
  2762  04BA  30FF               	movlw	255
  2763  04BB  05AB               	andwf	___xxtofl@arg+1,f
  2764  04BC  307F               	movlw	127
  2765  04BD  05AC               	andwf	___xxtofl@arg+2,f
  2766  04BE  30FF               	movlw	255
  2767  04BF  05AD               	andwf	___xxtofl@arg+3,f
  2768  04C0                     l827:	
  2769  04C0  1003               	clrc
  2770  04C1  0CA9               	rrf	___xxtofl@exp,f
  2771  04C2  0829               	movf	___xxtofl@exp,w
  2772  04C3  00A4               	movwf	??___xxtofl
  2773  04C4  01A5               	clrf	??___xxtofl+1
  2774  04C5  01A6               	clrf	??___xxtofl+2
  2775  04C6  01A7               	clrf	??___xxtofl+3
  2776  04C7  3018               	movlw	24
  2777  04C8                     u3325:	
  2778  04C8  35A4               	lslf	??___xxtofl,f
  2779  04C9  0DA5               	rlf	??___xxtofl+1,f
  2780  04CA  0DA6               	rlf	??___xxtofl+2,f
  2781  04CB  0DA7               	rlf	??___xxtofl+3,f
  2782  04CC  0B89               	decfsz	9,f
  2783  04CD  2CC8               	goto	u3325
  2784  04CE  0824               	movf	??___xxtofl,w
  2785  04CF  04AA               	iorwf	___xxtofl@arg,f
  2786  04D0  0825               	movf	??___xxtofl+1,w
  2787  04D1  04AB               	iorwf	___xxtofl@arg+1,f
  2788  04D2  0826               	movf	??___xxtofl+2,w
  2789  04D3  04AC               	iorwf	___xxtofl@arg+2,f
  2790  04D4  0827               	movf	??___xxtofl+3,w
  2791  04D5  04AD               	iorwf	___xxtofl@arg+3,f
  2792  04D6  0828               	movf	___xxtofl@sign,w
  2793  04D7  1D03               	btfss	3,2
  2794  04D8  1FA3               	btfss	___xxtofl@val+3,7
  2795  04D9  2CDB               	goto	l2676
  2796  04DA  17AD               	bsf	___xxtofl@arg+3,7
  2797  04DB                     l2676:	
  2798  04DB  082D               	movf	___xxtofl@arg+3,w
  2799  04DC  00A3               	movwf	?___xxtofl+3
  2800  04DD  082C               	movf	___xxtofl@arg+2,w
  2801  04DE  00A2               	movwf	?___xxtofl+2
  2802  04DF  082B               	movf	___xxtofl@arg+1,w
  2803  04E0  00A1               	movwf	?___xxtofl+1
  2804  04E1  082A               	movf	___xxtofl@arg,w
  2805  04E2  00A0               	movwf	?___xxtofl
  2806  04E3  0008               	return
  2807  04E4                     __end_of___xxtofl:	
  2808                           
  2809                           	psect	text14
  2810  05B7                     __ptext14:	
  2811 ;; *************** function ___fltol *****************
  2812 ;; Defined at:
  2813 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/fltol.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  f1              4   60[BANK0 ] unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  exp1            1   70[BANK0 ] unsigned char 
  2818 ;;  sign1           1   69[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  4   60[BANK0 ] long 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2828 ;;      Params:         0       4       0       0
  2829 ;;      Locals:         0       2       0       0
  2830 ;;      Temps:          0       5       0       0
  2831 ;;      Totals:         0      11       0       0
  2832 ;;Total ram usage:       11 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    4
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_UARTUpdatePPM
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___fltol
  2844  05B7                     ___fltol:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2848  05B7  1003               	clrc
  2849  05B8  0020               	movlb	0	; select bank0
  2850  05B9  0D5E               	rlf	___fltol@f1+2,w
  2851  05BA  0D5F               	rlf	___fltol@f1+3,w
  2852  05BB  00E0               	movwf	??___fltol
  2853  05BC  0860               	movf	??___fltol,w
  2854  05BD  00E6               	movwf	___fltol@exp1
  2855  05BE  0866               	movf	___fltol@exp1,w
  2856  05BF  1D03               	btfss	3,2
  2857  05C0  2DCA               	goto	l2272
  2858  05C1                     l2268:	
  2859  05C1  3000               	movlw	0
  2860  05C2  00DF               	movwf	?___fltol+3
  2861  05C3  3000               	movlw	0
  2862  05C4  00DE               	movwf	?___fltol+2
  2863  05C5  3000               	movlw	0
  2864  05C6  00DD               	movwf	?___fltol+1
  2865  05C7  3000               	movlw	0
  2866  05C8  00DC               	movwf	?___fltol
  2867  05C9  0008               	return
  2868  05CA                     l2272:	
  2869  05CA  085C               	movf	___fltol@f1,w
  2870  05CB  00E0               	movwf	??___fltol
  2871  05CC  085D               	movf	___fltol@f1+1,w
  2872  05CD  00E1               	movwf	??___fltol+1
  2873  05CE  085E               	movf	___fltol@f1+2,w
  2874  05CF  00E2               	movwf	??___fltol+2
  2875  05D0  085F               	movf	___fltol@f1+3,w
  2876  05D1  00E3               	movwf	??___fltol+3
  2877  05D2  301F               	movlw	31
  2878  05D3                     u2435:	
  2879  05D3  36E3               	lsrf	??___fltol+3,f
  2880  05D4  0CE2               	rrf	??___fltol+2,f
  2881  05D5  0CE1               	rrf	??___fltol+1,f
  2882  05D6  0CE0               	rrf	??___fltol,f
  2883  05D7  0B89               	decfsz	9,f
  2884  05D8  2DD3               	goto	u2435
  2885  05D9  0860               	movf	??___fltol,w
  2886  05DA  00E4               	movwf	??___fltol+4
  2887  05DB  0864               	movf	??___fltol+4,w
  2888  05DC  00E5               	movwf	___fltol@sign1
  2889  05DD  17DE               	bsf	___fltol@f1+2,7
  2890  05DE  30FF               	movlw	255
  2891  05DF  05DC               	andwf	___fltol@f1,f
  2892  05E0  30FF               	movlw	255
  2893  05E1  05DD               	andwf	___fltol@f1+1,f
  2894  05E2  30FF               	movlw	255
  2895  05E3  05DE               	andwf	___fltol@f1+2,f
  2896  05E4  3000               	movlw	0
  2897  05E5  05DF               	andwf	___fltol@f1+3,f
  2898  05E6  3096               	movlw	150
  2899  05E7  02E6               	subwf	___fltol@exp1,f
  2900  05E8  1FE6               	btfss	___fltol@exp1,7
  2901  05E9  2DFD               	goto	l2290
  2902  05EA  0866               	movf	___fltol@exp1,w
  2903  05EB  3A80               	xorlw	128
  2904  05EC  3E97               	addlw	151
  2905  05ED  1C03               	btfss	3,0
  2906  05EE  2DC1               	goto	l2268
  2907  05EF                     l2288:	
  2908  05EF  3001               	movlw	1
  2909  05F0                     u2465:	
  2910  05F0  36DF               	lsrf	___fltol@f1+3,f
  2911  05F1  0CDE               	rrf	___fltol@f1+2,f
  2912  05F2  0CDD               	rrf	___fltol@f1+1,f
  2913  05F3  0CDC               	rrf	___fltol@f1,f
  2914  05F4  0B89               	decfsz	9,f
  2915  05F5  2DF0               	goto	u2465
  2916  05F6  3001               	movlw	1
  2917  05F7  00E0               	movwf	??___fltol
  2918  05F8  0860               	movf	??___fltol,w
  2919  05F9  07E6               	addwf	___fltol@exp1,f
  2920  05FA  1903               	btfsc	3,2
  2921  05FB  2E0E               	goto	l2298
  2922  05FC  2DEF               	goto	l2288
  2923  05FD                     l2290:	
  2924  05FD  3020               	movlw	32
  2925  05FE  0266               	subwf	___fltol@exp1,w
  2926  05FF  1803               	btfsc	3,0
  2927  0600  2DC1               	goto	l2268
  2928  0601                     l579:	
  2929  0601  0866               	movf	___fltol@exp1,w
  2930  0602  1903               	btfsc	3,2
  2931  0603  2E0E               	goto	l2298
  2932  0604  3001               	movlw	1
  2933  0605                     u2495:	
  2934  0605  35DC               	lslf	___fltol@f1,f
  2935  0606  0DDD               	rlf	___fltol@f1+1,f
  2936  0607  0DDE               	rlf	___fltol@f1+2,f
  2937  0608  0DDF               	rlf	___fltol@f1+3,f
  2938  0609  0B89               	decfsz	9,f
  2939  060A  2E05               	goto	u2495
  2940  060B  3001               	movlw	1
  2941  060C  02E6               	subwf	___fltol@exp1,f
  2942  060D  2E01               	goto	l579
  2943  060E                     l2298:	
  2944  060E  0865               	movf	___fltol@sign1,w
  2945  060F  1903               	btfsc	3,2
  2946  0610  0008               	return
  2947  0611  09DC               	comf	___fltol@f1,f
  2948  0612  09DD               	comf	___fltol@f1+1,f
  2949  0613  09DE               	comf	___fltol@f1+2,f
  2950  0614  09DF               	comf	___fltol@f1+3,f
  2951  0615  0ADC               	incf	___fltol@f1,f
  2952  0616  1903               	skipnz
  2953  0617  0ADD               	incf	___fltol@f1+1,f
  2954  0618  1903               	skipnz
  2955  0619  0ADE               	incf	___fltol@f1+2,f
  2956  061A  1903               	skipnz
  2957  061B  0ADF               	incf	___fltol@f1+3,f
  2958  061C  0008               	return
  2959  061D                     __end_of___fltol:	
  2960                           
  2961                           	psect	text15
  2962  0052                     __ptext15:	
  2963 ;; *************** function ___flmul *****************
  2964 ;; Defined at:
  2965 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcmul.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  b               4   14[BANK0 ] long 
  2968 ;;  a               4   18[BANK0 ] long 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  prod            4   34[BANK0 ] struct .
  2971 ;;  grs             4   29[BANK0 ] unsigned long 
  2972 ;;  temp            2   38[BANK0 ] struct .
  2973 ;;  bexp            1   33[BANK0 ] unsigned char 
  2974 ;;  aexp            1   28[BANK0 ] unsigned char 
  2975 ;;  sign            1   27[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  4   14[BANK0 ] unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2985 ;;      Params:         0       8       0       0
  2986 ;;      Locals:         0      13       0       0
  2987 ;;      Temps:          0       5       0       0
  2988 ;;      Totals:         0      26       0       0
  2989 ;;Total ram usage:       26 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    5
  2992 ;; This function calls:
  2993 ;;		__Umul8_16
  2994 ;; This function is called by:
  2995 ;;		_UARTUpdatePPM
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function ___flmul
  3001  0052                     ___flmul:	
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3005  0052  0020               	movlb	0	; select bank0
  3006  0053  0831               	movf	___flmul@b+3,w
  3007  0054  3980               	andlw	128
  3008  0055  00B6               	movwf	??___flmul
  3009  0056  0836               	movf	??___flmul,w
  3010  0057  00BB               	movwf	___flmul@sign
  3011  0058  3531               	lslf	___flmul@b+3,w
  3012  0059  00B6               	movwf	??___flmul
  3013  005A  0836               	movf	??___flmul,w
  3014  005B  00C1               	movwf	___flmul@bexp
  3015  005C  1BB0               	btfsc	___flmul@b+2,7
  3016  005D  1441               	bsf	___flmul@bexp,0
  3017  005E  0841               	movf	___flmul@bexp,w
  3018  005F  1903               	btfsc	3,2
  3019  0060  286E               	goto	l2512
  3020  0061  0A41               	incf	___flmul@bexp,w
  3021  0062  1D03               	btfss	3,2
  3022  0063  286C               	goto	l2510
  3023  0064  3000               	movlw	0
  3024  0065  00B1               	movwf	___flmul@b+3
  3025  0066  3000               	movlw	0
  3026  0067  00B0               	movwf	___flmul@b+2
  3027  0068  3000               	movlw	0
  3028  0069  00AF               	movwf	___flmul@b+1
  3029  006A  3000               	movlw	0
  3030  006B  00AE               	movwf	___flmul@b
  3031  006C                     l2510:	
  3032  006C  17B0               	bsf	___flmul@b+2,7
  3033  006D  2876               	goto	l2514
  3034  006E                     l2512:	
  3035  006E  3000               	movlw	0
  3036  006F  00B1               	movwf	___flmul@b+3
  3037  0070  3000               	movlw	0
  3038  0071  00B0               	movwf	___flmul@b+2
  3039  0072  3000               	movlw	0
  3040  0073  00AF               	movwf	___flmul@b+1
  3041  0074  3000               	movlw	0
  3042  0075  00AE               	movwf	___flmul@b
  3043  0076                     l2514:	
  3044  0076  0835               	movf	___flmul@a+3,w
  3045  0077  3980               	andlw	128
  3046  0078  00B6               	movwf	??___flmul
  3047  0079  0836               	movf	??___flmul,w
  3048  007A  06BB               	xorwf	___flmul@sign,f
  3049  007B  3535               	lslf	___flmul@a+3,w
  3050  007C  00B6               	movwf	??___flmul
  3051  007D  0836               	movf	??___flmul,w
  3052  007E  00BC               	movwf	___flmul@aexp
  3053  007F  1BB4               	btfsc	___flmul@a+2,7
  3054  0080  143C               	bsf	___flmul@aexp,0
  3055  0081  083C               	movf	___flmul@aexp,w
  3056  0082  1903               	btfsc	3,2
  3057  0083  2891               	goto	l2530
  3058  0084  0A3C               	incf	___flmul@aexp,w
  3059  0085  1D03               	btfss	3,2
  3060  0086  288F               	goto	l2528
  3061  0087  3000               	movlw	0
  3062  0088  00B5               	movwf	___flmul@a+3
  3063  0089  3000               	movlw	0
  3064  008A  00B4               	movwf	___flmul@a+2
  3065  008B  3000               	movlw	0
  3066  008C  00B3               	movwf	___flmul@a+1
  3067  008D  3000               	movlw	0
  3068  008E  00B2               	movwf	___flmul@a
  3069  008F                     l2528:	
  3070  008F  17B4               	bsf	___flmul@a+2,7
  3071  0090  2899               	goto	l2532
  3072  0091                     l2530:	
  3073  0091  3000               	movlw	0
  3074  0092  00B5               	movwf	___flmul@a+3
  3075  0093  3000               	movlw	0
  3076  0094  00B4               	movwf	___flmul@a+2
  3077  0095  3000               	movlw	0
  3078  0096  00B3               	movwf	___flmul@a+1
  3079  0097  3000               	movlw	0
  3080  0098  00B2               	movwf	___flmul@a
  3081  0099                     l2532:	
  3082  0099  083C               	movf	___flmul@aexp,w
  3083  009A  1D03               	btfss	3,2
  3084  009B  0841               	movf	___flmul@bexp,w
  3085  009C  1D03               	btfss	3,2
  3086  009D  28A7               	goto	l2540
  3087  009E  3000               	movlw	0
  3088  009F  00B1               	movwf	?___flmul+3
  3089  00A0  3000               	movlw	0
  3090  00A1  00B0               	movwf	?___flmul+2
  3091  00A2  3000               	movlw	0
  3092  00A3  00AF               	movwf	?___flmul+1
  3093  00A4  3000               	movlw	0
  3094  00A5  00AE               	movwf	?___flmul
  3095  00A6  0008               	return
  3096  00A7                     l2540:	
  3097  00A7  082E               	movf	___flmul@b,w
  3098  00A8  00B6               	movwf	??___flmul
  3099  00A9  0836               	movf	??___flmul,w
  3100  00AA  00F4               	movwf	__Umul8_16@multiplicand
  3101  00AB  0834               	movf	___flmul@a+2,w
  3102  00AC  26C1               	fcall	__Umul8_16
  3103  00AD  0875               	movf	?__Umul8_16+1,w
  3104  00AE  0020               	movlb	0	; select bank0
  3105  00AF  00C7               	movwf	___flmul@temp+1
  3106  00B0  0874               	movf	?__Umul8_16,w
  3107  00B1  00C6               	movwf	___flmul@temp
  3108  00B2  0846               	movf	___flmul@temp,w
  3109  00B3  00B6               	movwf	??___flmul
  3110  00B4  01B7               	clrf	??___flmul+1
  3111  00B5  01B8               	clrf	??___flmul+2
  3112  00B6  01B9               	clrf	??___flmul+3
  3113  00B7  0839               	movf	??___flmul+3,w
  3114  00B8  00C0               	movwf	___flmul@grs+3
  3115  00B9  0838               	movf	??___flmul+2,w
  3116  00BA  00BF               	movwf	___flmul@grs+2
  3117  00BB  0837               	movf	??___flmul+1,w
  3118  00BC  00BE               	movwf	___flmul@grs+1
  3119  00BD  0836               	movf	??___flmul,w
  3120  00BE  00BD               	movwf	___flmul@grs
  3121  00BF  0847               	movf	___flmul@temp+1,w
  3122  00C0  00B6               	movwf	??___flmul
  3123  00C1  01B7               	clrf	??___flmul+1
  3124  00C2  01B8               	clrf	??___flmul+2
  3125  00C3  01B9               	clrf	??___flmul+3
  3126  00C4  0839               	movf	??___flmul+3,w
  3127  00C5  00C5               	movwf	___flmul@prod+3
  3128  00C6  0838               	movf	??___flmul+2,w
  3129  00C7  00C4               	movwf	___flmul@prod+2
  3130  00C8  0837               	movf	??___flmul+1,w
  3131  00C9  00C3               	movwf	___flmul@prod+1
  3132  00CA  0836               	movf	??___flmul,w
  3133  00CB  00C2               	movwf	___flmul@prod
  3134  00CC  082F               	movf	___flmul@b+1,w
  3135  00CD  00B6               	movwf	??___flmul
  3136  00CE  0836               	movf	??___flmul,w
  3137  00CF  00F4               	movwf	__Umul8_16@multiplicand
  3138  00D0  0833               	movf	___flmul@a+1,w
  3139  00D1  26C1               	fcall	__Umul8_16
  3140  00D2  0875               	movf	?__Umul8_16+1,w
  3141  00D3  0020               	movlb	0	; select bank0
  3142  00D4  00C7               	movwf	___flmul@temp+1
  3143  00D5  0874               	movf	?__Umul8_16,w
  3144  00D6  00C6               	movwf	___flmul@temp
  3145  00D7  0846               	movf	___flmul@temp,w
  3146  00D8  00B6               	movwf	??___flmul
  3147  00D9  01B7               	clrf	??___flmul+1
  3148  00DA  01B8               	clrf	??___flmul+2
  3149  00DB  01B9               	clrf	??___flmul+3
  3150  00DC  0836               	movf	??___flmul,w
  3151  00DD  07BD               	addwf	___flmul@grs,f
  3152  00DE  0837               	movf	??___flmul+1,w
  3153  00DF  3DBE               	addwfc	___flmul@grs+1,f
  3154  00E0  0838               	movf	??___flmul+2,w
  3155  00E1  3DBF               	addwfc	___flmul@grs+2,f
  3156  00E2  0839               	movf	??___flmul+3,w
  3157  00E3  3DC0               	addwfc	___flmul@grs+3,f
  3158  00E4  0847               	movf	___flmul@temp+1,w
  3159  00E5  00B6               	movwf	??___flmul
  3160  00E6  01B7               	clrf	??___flmul+1
  3161  00E7  01B8               	clrf	??___flmul+2
  3162  00E8  01B9               	clrf	??___flmul+3
  3163  00E9  0836               	movf	??___flmul,w
  3164  00EA  07C2               	addwf	___flmul@prod,f
  3165  00EB  0837               	movf	??___flmul+1,w
  3166  00EC  3DC3               	addwfc	___flmul@prod+1,f
  3167  00ED  0838               	movf	??___flmul+2,w
  3168  00EE  3DC4               	addwfc	___flmul@prod+2,f
  3169  00EF  0839               	movf	??___flmul+3,w
  3170  00F0  3DC5               	addwfc	___flmul@prod+3,f
  3171  00F1  0830               	movf	___flmul@b+2,w
  3172  00F2  00B6               	movwf	??___flmul
  3173  00F3  0836               	movf	??___flmul,w
  3174  00F4  00F4               	movwf	__Umul8_16@multiplicand
  3175  00F5  0832               	movf	___flmul@a,w
  3176  00F6  26C1               	fcall	__Umul8_16
  3177  00F7  0875               	movf	?__Umul8_16+1,w
  3178  00F8  0020               	movlb	0	; select bank0
  3179  00F9  00C7               	movwf	___flmul@temp+1
  3180  00FA  0874               	movf	?__Umul8_16,w
  3181  00FB  00C6               	movwf	___flmul@temp
  3182  00FC  0846               	movf	___flmul@temp,w
  3183  00FD  00B6               	movwf	??___flmul
  3184  00FE  01B7               	clrf	??___flmul+1
  3185  00FF  01B8               	clrf	??___flmul+2
  3186  0100  01B9               	clrf	??___flmul+3
  3187  0101  0836               	movf	??___flmul,w
  3188  0102  07BD               	addwf	___flmul@grs,f
  3189  0103  0837               	movf	??___flmul+1,w
  3190  0104  3DBE               	addwfc	___flmul@grs+1,f
  3191  0105  0838               	movf	??___flmul+2,w
  3192  0106  3DBF               	addwfc	___flmul@grs+2,f
  3193  0107  0839               	movf	??___flmul+3,w
  3194  0108  3DC0               	addwfc	___flmul@grs+3,f
  3195  0109  0847               	movf	___flmul@temp+1,w
  3196  010A  00B6               	movwf	??___flmul
  3197  010B  01B7               	clrf	??___flmul+1
  3198  010C  01B8               	clrf	??___flmul+2
  3199  010D  01B9               	clrf	??___flmul+3
  3200  010E  0836               	movf	??___flmul,w
  3201  010F  07C2               	addwf	___flmul@prod,f
  3202  0110  0837               	movf	??___flmul+1,w
  3203  0111  3DC3               	addwfc	___flmul@prod+1,f
  3204  0112  0838               	movf	??___flmul+2,w
  3205  0113  3DC4               	addwfc	___flmul@prod+2,f
  3206  0114  0839               	movf	??___flmul+3,w
  3207  0115  3DC5               	addwfc	___flmul@prod+3,f
  3208  0116  3008               	movlw	8
  3209  0117                     u3035:	
  3210  0117  35BD               	lslf	___flmul@grs,f
  3211  0118  0DBE               	rlf	___flmul@grs+1,f
  3212  0119  0DBF               	rlf	___flmul@grs+2,f
  3213  011A  0DC0               	rlf	___flmul@grs+3,f
  3214  011B  0B89               	decfsz	9,f
  3215  011C  2917               	goto	u3035
  3216  011D  082F               	movf	___flmul@b+1,w
  3217  011E  00B6               	movwf	??___flmul
  3218  011F  0836               	movf	??___flmul,w
  3219  0120  00F4               	movwf	__Umul8_16@multiplicand
  3220  0121  0832               	movf	___flmul@a,w
  3221  0122  26C1               	fcall	__Umul8_16
  3222  0123  0875               	movf	?__Umul8_16+1,w
  3223  0124  0020               	movlb	0	; select bank0
  3224  0125  00C7               	movwf	___flmul@temp+1
  3225  0126  0874               	movf	?__Umul8_16,w
  3226  0127  00C6               	movwf	___flmul@temp
  3227  0128  0846               	movf	___flmul@temp,w
  3228  0129  07BD               	addwf	___flmul@grs,f
  3229  012A  0847               	movf	___flmul@temp+1,w
  3230  012B  3DBE               	addwfc	___flmul@grs+1,f
  3231  012C  3000               	movlw	0
  3232  012D  3DBF               	addwfc	___flmul@grs+2,f
  3233  012E  3DC0               	addwfc	___flmul@grs+3,f
  3234  012F  082E               	movf	___flmul@b,w
  3235  0130  00B6               	movwf	??___flmul
  3236  0131  0836               	movf	??___flmul,w
  3237  0132  00F4               	movwf	__Umul8_16@multiplicand
  3238  0133  0833               	movf	___flmul@a+1,w
  3239  0134  26C1               	fcall	__Umul8_16
  3240  0135  0875               	movf	?__Umul8_16+1,w
  3241  0136  0020               	movlb	0	; select bank0
  3242  0137  00C7               	movwf	___flmul@temp+1
  3243  0138  0874               	movf	?__Umul8_16,w
  3244  0139  00C6               	movwf	___flmul@temp
  3245  013A  0846               	movf	___flmul@temp,w
  3246  013B  07BD               	addwf	___flmul@grs,f
  3247  013C  0847               	movf	___flmul@temp+1,w
  3248  013D  3DBE               	addwfc	___flmul@grs+1,f
  3249  013E  3000               	movlw	0
  3250  013F  3DBF               	addwfc	___flmul@grs+2,f
  3251  0140  3DC0               	addwfc	___flmul@grs+3,f
  3252  0141  3008               	movlw	8
  3253  0142                     u3045:	
  3254  0142  35BD               	lslf	___flmul@grs,f
  3255  0143  0DBE               	rlf	___flmul@grs+1,f
  3256  0144  0DBF               	rlf	___flmul@grs+2,f
  3257  0145  0DC0               	rlf	___flmul@grs+3,f
  3258  0146  0B89               	decfsz	9,f
  3259  0147  2942               	goto	u3045
  3260  0148  082E               	movf	___flmul@b,w
  3261  0149  00B6               	movwf	??___flmul
  3262  014A  0836               	movf	??___flmul,w
  3263  014B  00F4               	movwf	__Umul8_16@multiplicand
  3264  014C  0832               	movf	___flmul@a,w
  3265  014D  26C1               	fcall	__Umul8_16
  3266  014E  0875               	movf	?__Umul8_16+1,w
  3267  014F  0020               	movlb	0	; select bank0
  3268  0150  00C7               	movwf	___flmul@temp+1
  3269  0151  0874               	movf	?__Umul8_16,w
  3270  0152  00C6               	movwf	___flmul@temp
  3271  0153  0846               	movf	___flmul@temp,w
  3272  0154  07BD               	addwf	___flmul@grs,f
  3273  0155  0847               	movf	___flmul@temp+1,w
  3274  0156  3DBE               	addwfc	___flmul@grs+1,f
  3275  0157  3000               	movlw	0
  3276  0158  3DBF               	addwfc	___flmul@grs+2,f
  3277  0159  3DC0               	addwfc	___flmul@grs+3,f
  3278  015A  082F               	movf	___flmul@b+1,w
  3279  015B  00B6               	movwf	??___flmul
  3280  015C  0836               	movf	??___flmul,w
  3281  015D  00F4               	movwf	__Umul8_16@multiplicand
  3282  015E  0834               	movf	___flmul@a+2,w
  3283  015F  26C1               	fcall	__Umul8_16
  3284  0160  0875               	movf	?__Umul8_16+1,w
  3285  0161  0020               	movlb	0	; select bank0
  3286  0162  00C7               	movwf	___flmul@temp+1
  3287  0163  0874               	movf	?__Umul8_16,w
  3288  0164  00C6               	movwf	___flmul@temp
  3289  0165  0846               	movf	___flmul@temp,w
  3290  0166  07C2               	addwf	___flmul@prod,f
  3291  0167  0847               	movf	___flmul@temp+1,w
  3292  0168  3DC3               	addwfc	___flmul@prod+1,f
  3293  0169  3000               	movlw	0
  3294  016A  3DC4               	addwfc	___flmul@prod+2,f
  3295  016B  3DC5               	addwfc	___flmul@prod+3,f
  3296  016C  0830               	movf	___flmul@b+2,w
  3297  016D  00B6               	movwf	??___flmul
  3298  016E  0836               	movf	??___flmul,w
  3299  016F  00F4               	movwf	__Umul8_16@multiplicand
  3300  0170  0833               	movf	___flmul@a+1,w
  3301  0171  26C1               	fcall	__Umul8_16
  3302  0172  0875               	movf	?__Umul8_16+1,w
  3303  0173  0020               	movlb	0	; select bank0
  3304  0174  00C7               	movwf	___flmul@temp+1
  3305  0175  0874               	movf	?__Umul8_16,w
  3306  0176  00C6               	movwf	___flmul@temp
  3307  0177  0846               	movf	___flmul@temp,w
  3308  0178  07C2               	addwf	___flmul@prod,f
  3309  0179  0847               	movf	___flmul@temp+1,w
  3310  017A  3DC3               	addwfc	___flmul@prod+1,f
  3311  017B  3000               	movlw	0
  3312  017C  3DC4               	addwfc	___flmul@prod+2,f
  3313  017D  3DC5               	addwfc	___flmul@prod+3,f
  3314  017E  0830               	movf	___flmul@b+2,w
  3315  017F  00B6               	movwf	??___flmul
  3316  0180  0836               	movf	??___flmul,w
  3317  0181  00F4               	movwf	__Umul8_16@multiplicand
  3318  0182  0834               	movf	___flmul@a+2,w
  3319  0183  26C1               	fcall	__Umul8_16
  3320  0184  0875               	movf	?__Umul8_16+1,w
  3321  0185  0020               	movlb	0	; select bank0
  3322  0186  00C7               	movwf	___flmul@temp+1
  3323  0187  0874               	movf	?__Umul8_16,w
  3324  0188  00C6               	movwf	___flmul@temp
  3325  0189  0846               	movf	___flmul@temp,w
  3326  018A  00B6               	movwf	??___flmul
  3327  018B  0847               	movf	___flmul@temp+1,w
  3328  018C  00B7               	movwf	??___flmul+1
  3329  018D  01B8               	clrf	??___flmul+2
  3330  018E  01B9               	clrf	??___flmul+3
  3331  018F  3008               	movlw	8
  3332  0190                     u3055:	
  3333  0190  35B6               	lslf	??___flmul,f
  3334  0191  0DB7               	rlf	??___flmul+1,f
  3335  0192  0DB8               	rlf	??___flmul+2,f
  3336  0193  0DB9               	rlf	??___flmul+3,f
  3337  0194  0B89               	decfsz	9,f
  3338  0195  2990               	goto	u3055
  3339  0196  0836               	movf	??___flmul,w
  3340  0197  07C2               	addwf	___flmul@prod,f
  3341  0198  0837               	movf	??___flmul+1,w
  3342  0199  3DC3               	addwfc	___flmul@prod+1,f
  3343  019A  0838               	movf	??___flmul+2,w
  3344  019B  3DC4               	addwfc	___flmul@prod+2,f
  3345  019C  0839               	movf	??___flmul+3,w
  3346  019D  3DC5               	addwfc	___flmul@prod+3,f
  3347  019E  083D               	movf	___flmul@grs,w
  3348  019F  00B6               	movwf	??___flmul
  3349  01A0  083E               	movf	___flmul@grs+1,w
  3350  01A1  00B7               	movwf	??___flmul+1
  3351  01A2  083F               	movf	___flmul@grs+2,w
  3352  01A3  00B8               	movwf	??___flmul+2
  3353  01A4  0840               	movf	___flmul@grs+3,w
  3354  01A5  00B9               	movwf	??___flmul+3
  3355  01A6  3018               	movlw	24
  3356  01A7                     u3065:	
  3357  01A7  36B9               	lsrf	??___flmul+3,f
  3358  01A8  0CB8               	rrf	??___flmul+2,f
  3359  01A9  0CB7               	rrf	??___flmul+1,f
  3360  01AA  0CB6               	rrf	??___flmul,f
  3361  01AB  0B89               	decfsz	9,f
  3362  01AC  29A7               	goto	u3065
  3363  01AD  0836               	movf	??___flmul,w
  3364  01AE  07C2               	addwf	___flmul@prod,f
  3365  01AF  0837               	movf	??___flmul+1,w
  3366  01B0  3DC3               	addwfc	___flmul@prod+1,f
  3367  01B1  0838               	movf	??___flmul+2,w
  3368  01B2  3DC4               	addwfc	___flmul@prod+2,f
  3369  01B3  0839               	movf	??___flmul+3,w
  3370  01B4  3DC5               	addwfc	___flmul@prod+3,f
  3371  01B5  3008               	movlw	8
  3372  01B6                     u3075:	
  3373  01B6  35BD               	lslf	___flmul@grs,f
  3374  01B7  0DBE               	rlf	___flmul@grs+1,f
  3375  01B8  0DBF               	rlf	___flmul@grs+2,f
  3376  01B9  0DC0               	rlf	___flmul@grs+3,f
  3377  01BA  0B89               	decfsz	9,f
  3378  01BB  29B6               	goto	u3075
  3379  01BC  0841               	movf	___flmul@bexp,w
  3380  01BD  073C               	addwf	___flmul@aexp,w
  3381  01BE  00B6               	movwf	??___flmul
  3382  01BF  01B7               	clrf	??___flmul+1
  3383  01C0  0DB7               	rlf	??___flmul+1,f
  3384  01C1  0836               	movf	??___flmul,w
  3385  01C2  3E82               	addlw	130
  3386  01C3  00C6               	movwf	___flmul@temp
  3387  01C4  30FF               	movlw	255
  3388  01C5  3D37               	addwfc	??___flmul+1,w
  3389  01C6  00C7               	movwf	___flmul@temp+1
  3390  01C7                     l2592:	
  3391  01C7  1BC4               	btfsc	___flmul@prod+2,7
  3392  01C8  29DE               	goto	l2594
  3393  01C9  3001               	movlw	1
  3394  01CA                     u3085:	
  3395  01CA  35C2               	lslf	___flmul@prod,f
  3396  01CB  0DC3               	rlf	___flmul@prod+1,f
  3397  01CC  0DC4               	rlf	___flmul@prod+2,f
  3398  01CD  0DC5               	rlf	___flmul@prod+3,f
  3399  01CE  0B89               	decfsz	9,f
  3400  01CF  29CA               	goto	u3085
  3401  01D0  1BC0               	btfsc	___flmul@grs+3,7
  3402  01D1  1442               	bsf	___flmul@prod,0
  3403  01D2  3001               	movlw	1
  3404  01D3                     u3105:	
  3405  01D3  35BD               	lslf	___flmul@grs,f
  3406  01D4  0DBE               	rlf	___flmul@grs+1,f
  3407  01D5  0DBF               	rlf	___flmul@grs+2,f
  3408  01D6  0DC0               	rlf	___flmul@grs+3,f
  3409  01D7  0B89               	decfsz	9,f
  3410  01D8  29D3               	goto	u3105
  3411  01D9  30FF               	movlw	255
  3412  01DA  07C6               	addwf	___flmul@temp,f
  3413  01DB  30FF               	movlw	255
  3414  01DC  3DC7               	addwfc	___flmul@temp+1,f
  3415  01DD  29C7               	goto	l2592
  3416  01DE                     l2594:	
  3417  01DE  01BC               	clrf	___flmul@aexp
  3418  01DF  1FC0               	btfss	___flmul@grs+3,7
  3419  01E0  29F7               	goto	l2604
  3420  01E1  30FF               	movlw	255
  3421  01E2  053D               	andwf	___flmul@grs,w
  3422  01E3  00B6               	movwf	??___flmul
  3423  01E4  30FF               	movlw	255
  3424  01E5  053E               	andwf	___flmul@grs+1,w
  3425  01E6  00B7               	movwf	??___flmul+1
  3426  01E7  30FF               	movlw	255
  3427  01E8  053F               	andwf	___flmul@grs+2,w
  3428  01E9  00B8               	movwf	??___flmul+2
  3429  01EA  307F               	movlw	127
  3430  01EB  0540               	andwf	___flmul@grs+3,w
  3431  01EC  00B9               	movwf	??___flmul+3
  3432  01ED  0839               	movf	??___flmul+3,w
  3433  01EE  0438               	iorwf	??___flmul+2,w
  3434  01EF  0437               	iorwf	??___flmul+1,w
  3435  01F0  0436               	iorwf	??___flmul,w
  3436  01F1  1903               	skipnz
  3437  01F2  1842               	btfsc	___flmul@prod,0
  3438  01F3  29F5               	goto	l2600
  3439  01F4  29F7               	goto	l2604
  3440  01F5                     l2600:	
  3441  01F5  01BC               	clrf	___flmul@aexp
  3442  01F6  0ABC               	incf	___flmul@aexp,f
  3443  01F7                     l2604:	
  3444  01F7  083C               	movf	___flmul@aexp,w
  3445  01F8  1903               	btfsc	3,2
  3446  01F9  2A20               	goto	l2614
  3447  01FA  3001               	movlw	1
  3448  01FB  07C2               	addwf	___flmul@prod,f
  3449  01FC  3000               	movlw	0
  3450  01FD  3DC3               	addwfc	___flmul@prod+1,f
  3451  01FE  3000               	movlw	0
  3452  01FF  3DC4               	addwfc	___flmul@prod+2,f
  3453  0200  3000               	movlw	0
  3454  0201  3DC5               	addwfc	___flmul@prod+3,f
  3455  0202  1C45               	btfss	___flmul@prod+3,0
  3456  0203  2A20               	goto	l2614
  3457  0204  0842               	movf	___flmul@prod,w
  3458  0205  00B6               	movwf	??___flmul
  3459  0206  0843               	movf	___flmul@prod+1,w
  3460  0207  00B7               	movwf	??___flmul+1
  3461  0208  0844               	movf	___flmul@prod+2,w
  3462  0209  00B8               	movwf	??___flmul+2
  3463  020A  0845               	movf	___flmul@prod+3,w
  3464  020B  00B9               	movwf	??___flmul+3
  3465  020C  3001               	movlw	1
  3466  020D  00BA               	movwf	??___flmul+4
  3467  020E                     u3175:	
  3468  020E  37B9               	asrf	??___flmul+3,f
  3469  020F  0CB8               	rrf	??___flmul+2,f
  3470  0210  0CB7               	rrf	??___flmul+1,f
  3471  0211  0CB6               	rrf	??___flmul,f
  3472  0212  0BBA               	decfsz	??___flmul+4,f
  3473  0213  2A0E               	goto	u3175
  3474  0214  0839               	movf	??___flmul+3,w
  3475  0215  00C5               	movwf	___flmul@prod+3
  3476  0216  0838               	movf	??___flmul+2,w
  3477  0217  00C4               	movwf	___flmul@prod+2
  3478  0218  0837               	movf	??___flmul+1,w
  3479  0219  00C3               	movwf	___flmul@prod+1
  3480  021A  0836               	movf	??___flmul,w
  3481  021B  00C2               	movwf	___flmul@prod
  3482  021C  3001               	movlw	1
  3483  021D  07C6               	addwf	___flmul@temp,f
  3484  021E  3000               	movlw	0
  3485  021F  3DC7               	addwfc	___flmul@temp+1,f
  3486  0220                     l2614:	
  3487  0220  0847               	movf	___flmul@temp+1,w
  3488  0221  3A80               	xorlw	128
  3489  0222  00B6               	movwf	??___flmul
  3490  0223  3080               	movlw	128
  3491  0224  0236               	subwf	??___flmul,w
  3492  0225  1D03               	skipz
  3493  0226  2A29               	goto	u3185
  3494  0227  30FF               	movlw	255
  3495  0228  0246               	subwf	___flmul@temp,w
  3496  0229                     u3185:	
  3497  0229  1C03               	skipc
  3498  022A  2A35               	goto	l2618
  3499  022B  307F               	movlw	127
  3500  022C  0020               	movlb	0	; select bank0
  3501  022D  00C5               	movwf	___flmul@prod+3
  3502  022E  3080               	movlw	128
  3503  022F  00C4               	movwf	___flmul@prod+2
  3504  0230  3000               	movlw	0
  3505  0231  00C3               	movwf	___flmul@prod+1
  3506  0232  3000               	movlw	0
  3507  0233  00C2               	movwf	___flmul@prod
  3508  0234  2A5F               	goto	l787
  3509  0235                     l2618:	
  3510  0235  0020               	movlb	0	; select bank0
  3511  0236  0847               	movf	___flmul@temp+1,w
  3512  0237  3A80               	xorlw	128
  3513  0238  00B6               	movwf	??___flmul
  3514  0239  3080               	movlw	128
  3515  023A  0236               	subwf	??___flmul,w
  3516  023B  1D03               	skipz
  3517  023C  2A3F               	goto	u3195
  3518  023D  3001               	movlw	1
  3519  023E  0246               	subwf	___flmul@temp,w
  3520  023F                     u3195:	
  3521  023F  1803               	skipnc
  3522  0240  2A4C               	goto	l2624
  3523  0241  3000               	movlw	0
  3524  0242  0020               	movlb	0	; select bank0
  3525  0243  00C5               	movwf	___flmul@prod+3
  3526  0244  3000               	movlw	0
  3527  0245  00C4               	movwf	___flmul@prod+2
  3528  0246  3000               	movlw	0
  3529  0247  00C3               	movwf	___flmul@prod+1
  3530  0248  3000               	movlw	0
  3531  0249  00C2               	movwf	___flmul@prod
  3532  024A  01BB               	clrf	___flmul@sign
  3533  024B  2A5F               	goto	l787
  3534  024C                     l2624:	
  3535  024C  0020               	movlb	0	; select bank0
  3536  024D  0846               	movf	___flmul@temp,w
  3537  024E  00B6               	movwf	??___flmul
  3538  024F  0836               	movf	??___flmul,w
  3539  0250  00C1               	movwf	___flmul@bexp
  3540  0251  30FF               	movlw	255
  3541  0252  05C2               	andwf	___flmul@prod,f
  3542  0253  30FF               	movlw	255
  3543  0254  05C3               	andwf	___flmul@prod+1,f
  3544  0255  307F               	movlw	127
  3545  0256  05C4               	andwf	___flmul@prod+2,f
  3546  0257  3000               	movlw	0
  3547  0258  05C5               	andwf	___flmul@prod+3,f
  3548  0259  1841               	btfsc	___flmul@bexp,0
  3549  025A  17C4               	bsf	___flmul@prod+2,7
  3550  025B  3641               	lsrf	___flmul@bexp,w
  3551  025C  00B6               	movwf	??___flmul
  3552  025D  0836               	movf	??___flmul,w
  3553  025E  00C5               	movwf	___flmul@prod+3
  3554  025F                     l787:	
  3555  025F  083B               	movf	___flmul@sign,w
  3556  0260  00B6               	movwf	??___flmul
  3557  0261  0836               	movf	??___flmul,w
  3558  0262  04C5               	iorwf	___flmul@prod+3,f
  3559  0263  0845               	movf	___flmul@prod+3,w
  3560  0264  00B1               	movwf	?___flmul+3
  3561  0265  0844               	movf	___flmul@prod+2,w
  3562  0266  00B0               	movwf	?___flmul+2
  3563  0267  0843               	movf	___flmul@prod+1,w
  3564  0268  00AF               	movwf	?___flmul+1
  3565  0269  0842               	movf	___flmul@prod,w
  3566  026A  00AE               	movwf	?___flmul
  3567  026B  0008               	return
  3568  026C                     __end_of___flmul:	
  3569                           
  3570                           	psect	text16
  3571  06C1                     __ptext16:	
  3572 ;; *************** function __Umul8_16 *****************
  3573 ;; Defined at:
  3574 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/Umul8_16.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  multiplier      1    wreg     unsigned char 
  3577 ;;  multiplicand    1    4[COMMON] unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  multiplier      1    6[BANK0 ] unsigned char 
  3580 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  3581 ;;  product         2    2[BANK0 ] unsigned int 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    4[COMMON] unsigned int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3591 ;;      Params:         2       0       0       0
  3592 ;;      Locals:         0       5       0       0
  3593 ;;      Temps:          0       2       0       0
  3594 ;;      Totals:         2       7       0       0
  3595 ;;Total ram usage:        9 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    4
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		___flmul
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function __Umul8_16
  3607  06C1                     __Umul8_16:	
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3611                           ;__Umul8_16@multiplier stored from wreg
  3612  06C1  0020               	movlb	0	; select bank0
  3613  06C2  00A6               	movwf	__Umul8_16@multiplier
  3614  06C3  01A2               	clrf	__Umul8_16@product
  3615  06C4  01A3               	clrf	__Umul8_16@product+1
  3616  06C5  0874               	movf	__Umul8_16@multiplicand,w
  3617  06C6  00A0               	movwf	??__Umul8_16
  3618  06C7  01A1               	clrf	??__Umul8_16+1
  3619  06C8  0820               	movf	??__Umul8_16,w
  3620  06C9  00A4               	movwf	__Umul8_16@word_mpld
  3621  06CA  0821               	movf	??__Umul8_16+1,w
  3622  06CB  00A5               	movwf	__Umul8_16@word_mpld+1
  3623  06CC                     l2256:	
  3624  06CC  1C26               	btfss	__Umul8_16@multiplier,0
  3625  06CD  2ED2               	goto	l832
  3626  06CE  0824               	movf	__Umul8_16@word_mpld,w
  3627  06CF  07A2               	addwf	__Umul8_16@product,f
  3628  06D0  0825               	movf	__Umul8_16@word_mpld+1,w
  3629  06D1  3DA3               	addwfc	__Umul8_16@product+1,f
  3630  06D2                     l832:	
  3631  06D2  3001               	movlw	1
  3632  06D3                     u2405:	
  3633  06D3  35A4               	lslf	__Umul8_16@word_mpld,f
  3634  06D4  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  3635  06D5  0B89               	decfsz	9,f
  3636  06D6  2ED3               	goto	u2405
  3637  06D7  1003               	clrc
  3638  06D8  0CA6               	rrf	__Umul8_16@multiplier,f
  3639  06D9  0826               	movf	__Umul8_16@multiplier,w
  3640  06DA  1D03               	btfss	3,2
  3641  06DB  2ECC               	goto	l2256
  3642  06DC  0823               	movf	__Umul8_16@product+1,w
  3643  06DD  00F5               	movwf	?__Umul8_16+1
  3644  06DE  0822               	movf	__Umul8_16@product,w
  3645  06DF  00F4               	movwf	?__Umul8_16
  3646  06E0  0008               	return
  3647  06E1                     __end_of__Umul8_16:	
  3648                           
  3649                           	psect	text17
  3650  026C                     __ptext17:	
  3651 ;; *************** function ___fladd *****************
  3652 ;; Defined at:
  3653 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/sprcadd.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  b               4   40[BANK0 ] unsigned int 
  3656 ;;  a               4   44[BANK0 ] unsigned int 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  grs             1   59[BANK0 ] unsigned char 
  3659 ;;  bexp            1   58[BANK0 ] unsigned char 
  3660 ;;  aexp            1   57[BANK0 ] unsigned char 
  3661 ;;  signs           1   56[BANK0 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  4   40[BANK0 ] unsigned char 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3671 ;;      Params:         0       8       0       0
  3672 ;;      Locals:         0       4       0       0
  3673 ;;      Temps:          0       8       0       0
  3674 ;;      Totals:         0      20       0       0
  3675 ;;Total ram usage:       20 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    4
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_UARTUpdatePPM
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function ___fladd
  3687  026C                     ___fladd:	
  3688                           
  3689                           ;incstack = 0
  3690                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3691  026C  0020               	movlb	0	; select bank0
  3692  026D  084B               	movf	___fladd@b+3,w
  3693  026E  3980               	andlw	128
  3694  026F  00D0               	movwf	??___fladd
  3695  0270  0850               	movf	??___fladd,w
  3696  0271  00D8               	movwf	___fladd@signs
  3697  0272  354B               	lslf	___fladd@b+3,w
  3698  0273  00D0               	movwf	??___fladd
  3699  0274  0850               	movf	??___fladd,w
  3700  0275  00DA               	movwf	___fladd@bexp
  3701  0276  1BCA               	btfsc	___fladd@b+2,7
  3702  0277  145A               	bsf	___fladd@bexp,0
  3703  0278  085A               	movf	___fladd@bexp,w
  3704  0279  1903               	btfsc	3,2
  3705  027A  2A89               	goto	l2320
  3706  027B  0A5A               	incf	___fladd@bexp,w
  3707  027C  1D03               	btfss	3,2
  3708  027D  2A86               	goto	l2316
  3709  027E  3000               	movlw	0
  3710  027F  00CB               	movwf	___fladd@b+3
  3711  0280  3000               	movlw	0
  3712  0281  00CA               	movwf	___fladd@b+2
  3713  0282  3000               	movlw	0
  3714  0283  00C9               	movwf	___fladd@b+1
  3715  0284  3000               	movlw	0
  3716  0285  00C8               	movwf	___fladd@b
  3717  0286                     l2316:	
  3718  0286  17CA               	bsf	___fladd@b+2,7
  3719  0287  01CB               	clrf	___fladd@b+3
  3720  0288  2A91               	goto	l2322
  3721  0289                     l2320:	
  3722  0289  3000               	movlw	0
  3723  028A  00CB               	movwf	___fladd@b+3
  3724  028B  3000               	movlw	0
  3725  028C  00CA               	movwf	___fladd@b+2
  3726  028D  3000               	movlw	0
  3727  028E  00C9               	movwf	___fladd@b+1
  3728  028F  3000               	movlw	0
  3729  0290  00C8               	movwf	___fladd@b
  3730  0291                     l2322:	
  3731  0291  084F               	movf	___fladd@a+3,w
  3732  0292  3980               	andlw	128
  3733  0293  00D0               	movwf	??___fladd
  3734  0294  0850               	movf	??___fladd,w
  3735  0295  00D9               	movwf	___fladd@aexp
  3736  0296  0859               	movf	___fladd@aexp,w
  3737  0297  0658               	xorwf	___fladd@signs,w
  3738  0298  1D03               	btfss	3,2
  3739  0299  1758               	bsf	___fladd@signs,6
  3740  029A  354F               	lslf	___fladd@a+3,w
  3741  029B  00D0               	movwf	??___fladd
  3742  029C  0850               	movf	??___fladd,w
  3743  029D  00D9               	movwf	___fladd@aexp
  3744  029E  1BCE               	btfsc	___fladd@a+2,7
  3745  029F  1459               	bsf	___fladd@aexp,0
  3746  02A0  0859               	movf	___fladd@aexp,w
  3747  02A1  1903               	btfsc	3,2
  3748  02A2  2AB1               	goto	l2344
  3749  02A3  0A59               	incf	___fladd@aexp,w
  3750  02A4  1D03               	btfss	3,2
  3751  02A5  2AAE               	goto	l2340
  3752  02A6  3000               	movlw	0
  3753  02A7  00CF               	movwf	___fladd@a+3
  3754  02A8  3000               	movlw	0
  3755  02A9  00CE               	movwf	___fladd@a+2
  3756  02AA  3000               	movlw	0
  3757  02AB  00CD               	movwf	___fladd@a+1
  3758  02AC  3000               	movlw	0
  3759  02AD  00CC               	movwf	___fladd@a
  3760  02AE                     l2340:	
  3761  02AE  17CE               	bsf	___fladd@a+2,7
  3762  02AF  01CF               	clrf	___fladd@a+3
  3763  02B0  2AB9               	goto	l679
  3764  02B1                     l2344:	
  3765  02B1  3000               	movlw	0
  3766  02B2  00CF               	movwf	___fladd@a+3
  3767  02B3  3000               	movlw	0
  3768  02B4  00CE               	movwf	___fladd@a+2
  3769  02B5  3000               	movlw	0
  3770  02B6  00CD               	movwf	___fladd@a+1
  3771  02B7  3000               	movlw	0
  3772  02B8  00CC               	movwf	___fladd@a
  3773  02B9                     l679:	
  3774  02B9  085A               	movf	___fladd@bexp,w
  3775  02BA  0259               	subwf	___fladd@aexp,w
  3776  02BB  1803               	skipnc
  3777  02BC  2AFF               	goto	l2380
  3778  02BD  1F58               	btfss	___fladd@signs,6
  3779  02BE  2AC3               	goto	l2350
  3780  02BF  3080               	movlw	128
  3781  02C0  00D0               	movwf	??___fladd
  3782  02C1  0850               	movf	??___fladd,w
  3783  02C2  06D8               	xorwf	___fladd@signs,f
  3784  02C3                     l2350:	
  3785  02C3  085A               	movf	___fladd@bexp,w
  3786  02C4  00D0               	movwf	??___fladd
  3787  02C5  0850               	movf	??___fladd,w
  3788  02C6  00DB               	movwf	___fladd@grs
  3789  02C7  0859               	movf	___fladd@aexp,w
  3790  02C8  00D0               	movwf	??___fladd
  3791  02C9  0850               	movf	??___fladd,w
  3792  02CA  00DA               	movwf	___fladd@bexp
  3793  02CB  085B               	movf	___fladd@grs,w
  3794  02CC  00D0               	movwf	??___fladd
  3795  02CD  0850               	movf	??___fladd,w
  3796  02CE  00D9               	movwf	___fladd@aexp
  3797  02CF  0848               	movf	___fladd@b,w
  3798  02D0  00D0               	movwf	??___fladd
  3799  02D1  0850               	movf	??___fladd,w
  3800  02D2  00DB               	movwf	___fladd@grs
  3801  02D3  084C               	movf	___fladd@a,w
  3802  02D4  00D0               	movwf	??___fladd
  3803  02D5  0850               	movf	??___fladd,w
  3804  02D6  00C8               	movwf	___fladd@b
  3805  02D7  085B               	movf	___fladd@grs,w
  3806  02D8  00D0               	movwf	??___fladd
  3807  02D9  0850               	movf	??___fladd,w
  3808  02DA  00CC               	movwf	___fladd@a
  3809  02DB  0849               	movf	___fladd@b+1,w
  3810  02DC  00D0               	movwf	??___fladd
  3811  02DD  0850               	movf	??___fladd,w
  3812  02DE  00DB               	movwf	___fladd@grs
  3813  02DF  084D               	movf	___fladd@a+1,w
  3814  02E0  00D0               	movwf	??___fladd
  3815  02E1  0850               	movf	??___fladd,w
  3816  02E2  00C9               	movwf	___fladd@b+1
  3817  02E3  085B               	movf	___fladd@grs,w
  3818  02E4  00D0               	movwf	??___fladd
  3819  02E5  0850               	movf	??___fladd,w
  3820  02E6  00CD               	movwf	___fladd@a+1
  3821  02E7  084A               	movf	___fladd@b+2,w
  3822  02E8  00D0               	movwf	??___fladd
  3823  02E9  0850               	movf	??___fladd,w
  3824  02EA  00DB               	movwf	___fladd@grs
  3825  02EB  084E               	movf	___fladd@a+2,w
  3826  02EC  00D0               	movwf	??___fladd
  3827  02ED  0850               	movf	??___fladd,w
  3828  02EE  00CA               	movwf	___fladd@b+2
  3829  02EF  085B               	movf	___fladd@grs,w
  3830  02F0  00D0               	movwf	??___fladd
  3831  02F1  0850               	movf	??___fladd,w
  3832  02F2  00CE               	movwf	___fladd@a+2
  3833  02F3  084B               	movf	___fladd@b+3,w
  3834  02F4  00D0               	movwf	??___fladd
  3835  02F5  0850               	movf	??___fladd,w
  3836  02F6  00DB               	movwf	___fladd@grs
  3837  02F7  084F               	movf	___fladd@a+3,w
  3838  02F8  00D0               	movwf	??___fladd
  3839  02F9  0850               	movf	??___fladd,w
  3840  02FA  00CB               	movwf	___fladd@b+3
  3841  02FB  085B               	movf	___fladd@grs,w
  3842  02FC  00D0               	movwf	??___fladd
  3843  02FD  0850               	movf	??___fladd,w
  3844  02FE  00CF               	movwf	___fladd@a+3
  3845  02FF                     l2380:	
  3846  02FF  01DB               	clrf	___fladd@grs
  3847  0300  0859               	movf	___fladd@aexp,w
  3848  0301  00D0               	movwf	??___fladd
  3849  0302  01D1               	clrf	??___fladd+1
  3850  0303  0851               	movf	??___fladd+1,w
  3851  0304  00D3               	movwf	??___fladd+3
  3852  0305  085A               	movf	___fladd@bexp,w
  3853  0306  0250               	subwf	??___fladd,w
  3854  0307  00D2               	movwf	??___fladd+2
  3855  0308  1C03               	skipc
  3856  0309  03D3               	decf	??___fladd+3,f
  3857  030A  0853               	movf	??___fladd+3,w
  3858  030B  3A80               	xorlw	128
  3859  030C  00D4               	movwf	??___fladd+4
  3860  030D  3080               	movlw	128
  3861  030E  0254               	subwf	??___fladd+4,w
  3862  030F  1D03               	skipz
  3863  0310  2B13               	goto	u2615
  3864  0311  301A               	movlw	26
  3865  0312  0252               	subwf	??___fladd+2,w
  3866  0313                     u2615:	
  3867  0313  1C03               	skipc
  3868  0314  2B47               	goto	l2398
  3869  0315  0020               	movlb	0	; select bank0
  3870  0316  084B               	movf	___fladd@b+3,w
  3871  0317  044A               	iorwf	___fladd@b+2,w
  3872  0318  0449               	iorwf	___fladd@b+1,w
  3873  0319  0448               	iorwf	___fladd@b,w
  3874  031A  1903               	btfsc	3,2
  3875  031B  2B1E               	goto	u2620
  3876  031C  3001               	movlw	1
  3877  031D  2B1F               	goto	u2630
  3878  031E                     u2620:	
  3879  031E  3000               	movlw	0
  3880  031F                     u2630:	
  3881  031F  00D0               	movwf	??___fladd
  3882  0320  0850               	movf	??___fladd,w
  3883  0321  00DB               	movwf	___fladd@grs
  3884  0322  3000               	movlw	0
  3885  0323  00CB               	movwf	___fladd@b+3
  3886  0324  3000               	movlw	0
  3887  0325  00CA               	movwf	___fladd@b+2
  3888  0326  3000               	movlw	0
  3889  0327  00C9               	movwf	___fladd@b+1
  3890  0328  3000               	movlw	0
  3891  0329  00C8               	movwf	___fladd@b
  3892  032A  0859               	movf	___fladd@aexp,w
  3893  032B  00D0               	movwf	??___fladd
  3894  032C  0850               	movf	??___fladd,w
  3895  032D  00DA               	movwf	___fladd@bexp
  3896  032E  2B4C               	goto	l683
  3897  032F                     l685:	
  3898  032F  1C5B               	btfss	___fladd@grs,0
  3899  0330  2B37               	goto	l2388
  3900  0331  365B               	lsrf	___fladd@grs,w
  3901  0332  3801               	iorlw	1
  3902  0333  00D0               	movwf	??___fladd
  3903  0334  0850               	movf	??___fladd,w
  3904  0335  00DB               	movwf	___fladd@grs
  3905  0336  2B39               	goto	l2390
  3906  0337                     l2388:	
  3907  0337  1003               	clrc
  3908  0338  0CDB               	rrf	___fladd@grs,f
  3909  0339                     l2390:	
  3910  0339  1848               	btfsc	___fladd@b,0
  3911  033A  17DB               	bsf	___fladd@grs,7
  3912  033B  3001               	movlw	1
  3913  033C  00D0               	movwf	??___fladd
  3914  033D                     u2665:	
  3915  033D  37CB               	asrf	___fladd@b+3,f
  3916  033E  0CCA               	rrf	___fladd@b+2,f
  3917  033F  0CC9               	rrf	___fladd@b+1,f
  3918  0340  0CC8               	rrf	___fladd@b,f
  3919  0341  0BD0               	decfsz	??___fladd& (0+127),f
  3920  0342  2B3D               	goto	u2665
  3921  0343  3001               	movlw	1
  3922  0344  00D0               	movwf	??___fladd
  3923  0345  0850               	movf	??___fladd,w
  3924  0346  07DA               	addwf	___fladd@bexp,f
  3925  0347                     l2398:	
  3926  0347  0020               	movlb	0	; select bank0
  3927  0348  0859               	movf	___fladd@aexp,w
  3928  0349  025A               	subwf	___fladd@bexp,w
  3929  034A  1C03               	skipc
  3930  034B  2B2F               	goto	l685
  3931  034C                     l683:	
  3932  034C  1B58               	btfsc	___fladd@signs,6
  3933  034D  2B7D               	goto	l2424
  3934  034E  085A               	movf	___fladd@bexp,w
  3935  034F  1D03               	btfss	3,2
  3936  0350  2B5A               	goto	l2406
  3937  0351  3000               	movlw	0
  3938  0352  00CB               	movwf	?___fladd+3
  3939  0353  3000               	movlw	0
  3940  0354  00CA               	movwf	?___fladd+2
  3941  0355  3000               	movlw	0
  3942  0356  00C9               	movwf	?___fladd+1
  3943  0357  3000               	movlw	0
  3944  0358  00C8               	movwf	?___fladd
  3945  0359  0008               	return
  3946  035A                     l2406:	
  3947  035A  084C               	movf	___fladd@a,w
  3948  035B  07C8               	addwf	___fladd@b,f
  3949  035C  084D               	movf	___fladd@a+1,w
  3950  035D  3DC9               	addwfc	___fladd@b+1,f
  3951  035E  084E               	movf	___fladd@a+2,w
  3952  035F  3DCA               	addwfc	___fladd@b+2,f
  3953  0360  084F               	movf	___fladd@a+3,w
  3954  0361  3DCB               	addwfc	___fladd@b+3,f
  3955  0362  1C4B               	btfss	___fladd@b+3,0
  3956  0363  2BF7               	goto	l2458
  3957  0364  1C5B               	btfss	___fladd@grs,0
  3958  0365  2B6C               	goto	l2414
  3959  0366  365B               	lsrf	___fladd@grs,w
  3960  0367  3801               	iorlw	1
  3961  0368  00D0               	movwf	??___fladd
  3962  0369  0850               	movf	??___fladd,w
  3963  036A  00DB               	movwf	___fladd@grs
  3964  036B  2B6E               	goto	l2416
  3965  036C                     l2414:	
  3966  036C  1003               	clrc
  3967  036D  0CDB               	rrf	___fladd@grs,f
  3968  036E                     l2416:	
  3969  036E  1848               	btfsc	___fladd@b,0
  3970  036F  17DB               	bsf	___fladd@grs,7
  3971  0370  3001               	movlw	1
  3972  0371  00D0               	movwf	??___fladd
  3973  0372                     u2735:	
  3974  0372  37CB               	asrf	___fladd@b+3,f
  3975  0373  0CCA               	rrf	___fladd@b+2,f
  3976  0374  0CC9               	rrf	___fladd@b+1,f
  3977  0375  0CC8               	rrf	___fladd@b,f
  3978  0376  0BD0               	decfsz	??___fladd& (0+127),f
  3979  0377  2B72               	goto	u2735
  3980  0378  3001               	movlw	1
  3981  0379  00D0               	movwf	??___fladd
  3982  037A  0850               	movf	??___fladd,w
  3983  037B  07DA               	addwf	___fladd@bexp,f
  3984  037C  2BF7               	goto	l2458
  3985  037D                     l2424:	
  3986  037D  084B               	movf	___fladd@b+3,w
  3987  037E  3A80               	xorlw	128
  3988  037F  00D0               	movwf	??___fladd
  3989  0380  084F               	movf	___fladd@a+3,w
  3990  0381  3A80               	xorlw	128
  3991  0382  0250               	subwf	??___fladd,w
  3992  0383  1D03               	skipz
  3993  0384  2B8F               	goto	u2743
  3994  0385  084E               	movf	___fladd@a+2,w
  3995  0386  024A               	subwf	___fladd@b+2,w
  3996  0387  1D03               	skipz
  3997  0388  2B8F               	goto	u2743
  3998  0389  084D               	movf	___fladd@a+1,w
  3999  038A  0249               	subwf	___fladd@b+1,w
  4000  038B  1D03               	skipz
  4001  038C  2B8F               	goto	u2743
  4002  038D  084C               	movf	___fladd@a,w
  4003  038E  0248               	subwf	___fladd@b,w
  4004  038F                     u2743:	
  4005  038F  1803               	skipnc
  4006  0390  2BC7               	goto	l2434
  4007  0391  30FF               	movlw	255
  4008  0392  00D0               	movwf	??___fladd
  4009  0393  30FF               	movlw	255
  4010  0394  00D1               	movwf	??___fladd+1
  4011  0395  30FF               	movlw	255
  4012  0396  00D2               	movwf	??___fladd+2
  4013  0397  30FF               	movlw	255
  4014  0398  00D3               	movwf	??___fladd+3
  4015  0399  0848               	movf	___fladd@b,w
  4016  039A  024C               	subwf	___fladd@a,w
  4017  039B  00D4               	movwf	??___fladd+4
  4018  039C  0849               	movf	___fladd@b+1,w
  4019  039D  3B4D               	subwfb	___fladd@a+1,w
  4020  039E  00D5               	movwf	??___fladd+5
  4021  039F  084A               	movf	___fladd@b+2,w
  4022  03A0  3B4E               	subwfb	___fladd@a+2,w
  4023  03A1  00D6               	movwf	??___fladd+6
  4024  03A2  084B               	movf	___fladd@b+3,w
  4025  03A3  3B4F               	subwfb	___fladd@a+3,w
  4026  03A4  00D7               	movwf	??___fladd+7
  4027  03A5  0854               	movf	??___fladd+4,w
  4028  03A6  07D0               	addwf	??___fladd,f
  4029  03A7  0855               	movf	??___fladd+5,w
  4030  03A8  3DD1               	addwfc	??___fladd+1,f
  4031  03A9  0856               	movf	??___fladd+6,w
  4032  03AA  3DD2               	addwfc	??___fladd+2,f
  4033  03AB  0857               	movf	??___fladd+7,w
  4034  03AC  3DD3               	addwfc	??___fladd+3,f
  4035  03AD  0853               	movf	??___fladd+3,w
  4036  03AE  00CB               	movwf	___fladd@b+3
  4037  03AF  0852               	movf	??___fladd+2,w
  4038  03B0  00CA               	movwf	___fladd@b+2
  4039  03B1  0851               	movf	??___fladd+1,w
  4040  03B2  00C9               	movwf	___fladd@b+1
  4041  03B3  0850               	movf	??___fladd,w
  4042  03B4  00C8               	movwf	___fladd@b
  4043  03B5  3080               	movlw	128
  4044  03B6  00D0               	movwf	??___fladd
  4045  03B7  0850               	movf	??___fladd,w
  4046  03B8  06D8               	xorwf	___fladd@signs,f
  4047  03B9  09DB               	comf	___fladd@grs,f
  4048  03BA  0ADB               	incf	___fladd@grs,f
  4049  03BB  085B               	movf	___fladd@grs,w
  4050  03BC  1D03               	btfss	3,2
  4051  03BD  2BCF               	goto	l700
  4052  03BE  3001               	movlw	1
  4053  03BF  07C8               	addwf	___fladd@b,f
  4054  03C0  3000               	movlw	0
  4055  03C1  3DC9               	addwfc	___fladd@b+1,f
  4056  03C2  3000               	movlw	0
  4057  03C3  3DCA               	addwfc	___fladd@b+2,f
  4058  03C4  3000               	movlw	0
  4059  03C5  3DCB               	addwfc	___fladd@b+3,f
  4060  03C6  2BCF               	goto	l700
  4061  03C7                     l2434:	
  4062  03C7  084C               	movf	___fladd@a,w
  4063  03C8  02C8               	subwf	___fladd@b,f
  4064  03C9  084D               	movf	___fladd@a+1,w
  4065  03CA  3BC9               	subwfb	___fladd@b+1,f
  4066  03CB  084E               	movf	___fladd@a+2,w
  4067  03CC  3BCA               	subwfb	___fladd@b+2,f
  4068  03CD  084F               	movf	___fladd@a+3,w
  4069  03CE  3BCB               	subwfb	___fladd@b+3,f
  4070  03CF                     l700:	
  4071  03CF  084B               	movf	___fladd@b+3,w
  4072  03D0  044A               	iorwf	___fladd@b+2,w
  4073  03D1  0449               	iorwf	___fladd@b+1,w
  4074  03D2  0448               	iorwf	___fladd@b,w
  4075  03D3  1D03               	skipz
  4076  03D4  2BF5               	goto	l2456
  4077  03D5  085B               	movf	___fladd@grs,w
  4078  03D6  1D03               	btfss	3,2
  4079  03D7  2BF5               	goto	l2456
  4080  03D8  3000               	movlw	0
  4081  03D9  00CB               	movwf	?___fladd+3
  4082  03DA  3000               	movlw	0
  4083  03DB  00CA               	movwf	?___fladd+2
  4084  03DC  3000               	movlw	0
  4085  03DD  00C9               	movwf	?___fladd+1
  4086  03DE  3000               	movlw	0
  4087  03DF  00C8               	movwf	?___fladd
  4088  03E0  0008               	return
  4089  03E1                     l2442:	
  4090  03E1  3001               	movlw	1
  4091  03E2                     u2785:	
  4092  03E2  35C8               	lslf	___fladd@b,f
  4093  03E3  0DC9               	rlf	___fladd@b+1,f
  4094  03E4  0DCA               	rlf	___fladd@b+2,f
  4095  03E5  0DCB               	rlf	___fladd@b+3,f
  4096  03E6  0B89               	decfsz	9,f
  4097  03E7  2BE2               	goto	u2785
  4098  03E8  1BDB               	btfsc	___fladd@grs,7
  4099  03E9  1448               	bsf	___fladd@b,0
  4100  03EA  1C5B               	btfss	___fladd@grs,0
  4101  03EB  2BEE               	goto	l2450
  4102  03EC  1403               	setc
  4103  03ED  2BEF               	goto	L1
  4104  03EE                     l2450:	
  4105  03EE  1003               	clrc
  4106  03EF                     L1:	
  4107  03EF  0DDB               	rlf	___fladd@grs,f
  4108  03F0  085A               	movf	___fladd@bexp,w
  4109  03F1  1903               	btfsc	3,2
  4110  03F2  2BF5               	goto	l2456
  4111  03F3  3001               	movlw	1
  4112  03F4  02DA               	subwf	___fladd@bexp,f
  4113  03F5                     l2456:	
  4114  03F5  1FCA               	btfss	___fladd@b+2,7
  4115  03F6  2BE1               	goto	l2442
  4116  03F7                     l2458:	
  4117  03F7  01D9               	clrf	___fladd@aexp
  4118  03F8  1FDB               	btfss	___fladd@grs,7
  4119  03F9  2C02               	goto	l2468
  4120  03FA  085B               	movf	___fladd@grs,w
  4121  03FB  397F               	andlw	127
  4122  03FC  1903               	btfsc	3,2
  4123  03FD  1848               	btfsc	___fladd@b,0
  4124  03FE  2C00               	goto	l2464
  4125  03FF  2C02               	goto	l2468
  4126  0400                     l2464:	
  4127  0400  01D9               	clrf	___fladd@aexp
  4128  0401  0AD9               	incf	___fladd@aexp,f
  4129  0402                     l2468:	
  4130  0402  0859               	movf	___fladd@aexp,w
  4131  0403  1903               	btfsc	3,2
  4132  0404  2C2E               	goto	l713
  4133  0405  3001               	movlw	1
  4134  0406  07C8               	addwf	___fladd@b,f
  4135  0407  3000               	movlw	0
  4136  0408  3DC9               	addwfc	___fladd@b+1,f
  4137  0409  3000               	movlw	0
  4138  040A  3DCA               	addwfc	___fladd@b+2,f
  4139  040B  3000               	movlw	0
  4140  040C  3DCB               	addwfc	___fladd@b+3,f
  4141  040D  1C4B               	btfss	___fladd@b+3,0
  4142  040E  2C2E               	goto	l713
  4143  040F  0848               	movf	___fladd@b,w
  4144  0410  00D0               	movwf	??___fladd
  4145  0411  0849               	movf	___fladd@b+1,w
  4146  0412  00D1               	movwf	??___fladd+1
  4147  0413  084A               	movf	___fladd@b+2,w
  4148  0414  00D2               	movwf	??___fladd+2
  4149  0415  084B               	movf	___fladd@b+3,w
  4150  0416  00D3               	movwf	??___fladd+3
  4151  0417  3001               	movlw	1
  4152  0418  00D4               	movwf	??___fladd+4
  4153  0419                     u2885:	
  4154  0419  37D3               	asrf	??___fladd+3,f
  4155  041A  0CD2               	rrf	??___fladd+2,f
  4156  041B  0CD1               	rrf	??___fladd+1,f
  4157  041C  0CD0               	rrf	??___fladd,f
  4158  041D  0BD4               	decfsz	??___fladd+4,f
  4159  041E  2C19               	goto	u2885
  4160  041F  0853               	movf	??___fladd+3,w
  4161  0420  00CB               	movwf	___fladd@b+3
  4162  0421  0852               	movf	??___fladd+2,w
  4163  0422  00CA               	movwf	___fladd@b+2
  4164  0423  0851               	movf	??___fladd+1,w
  4165  0424  00C9               	movwf	___fladd@b+1
  4166  0425  0850               	movf	??___fladd,w
  4167  0426  00C8               	movwf	___fladd@b
  4168  0427  0A5A               	incf	___fladd@bexp,w
  4169  0428  1903               	btfsc	3,2
  4170  0429  2C2E               	goto	l713
  4171  042A  3001               	movlw	1
  4172  042B  00D0               	movwf	??___fladd
  4173  042C  0850               	movf	??___fladd,w
  4174  042D  07DA               	addwf	___fladd@bexp,f
  4175  042E                     l713:	
  4176  042E  0A5A               	incf	___fladd@bexp,w
  4177  042F  1D03               	btfss	3,2
  4178  0430  085A               	movf	___fladd@bexp,w
  4179  0431  1D03               	btfss	3,2
  4180  0432  2C3E               	goto	l2486
  4181  0433  3000               	movlw	0
  4182  0434  00CB               	movwf	___fladd@b+3
  4183  0435  3000               	movlw	0
  4184  0436  00CA               	movwf	___fladd@b+2
  4185  0437  3000               	movlw	0
  4186  0438  00C9               	movwf	___fladd@b+1
  4187  0439  3000               	movlw	0
  4188  043A  00C8               	movwf	___fladd@b
  4189  043B  085A               	movf	___fladd@bexp,w
  4190  043C  1903               	btfsc	3,2
  4191  043D  01D8               	clrf	___fladd@signs
  4192  043E                     l2486:	
  4193  043E  1C5A               	btfss	___fladd@bexp,0
  4194  043F  2C42               	goto	l2490
  4195  0440  17CA               	bsf	___fladd@b+2,7
  4196  0441  2C46               	goto	l721
  4197  0442                     l2490:	
  4198  0442  307F               	movlw	127
  4199  0443  00D0               	movwf	??___fladd
  4200  0444  0850               	movf	??___fladd,w
  4201  0445  05CA               	andwf	___fladd@b+2,f
  4202  0446                     l721:	
  4203  0446  365A               	lsrf	___fladd@bexp,w
  4204  0447  00D0               	movwf	??___fladd
  4205  0448  0850               	movf	??___fladd,w
  4206  0449  00CB               	movwf	___fladd@b+3
  4207  044A  1FD8               	btfss	___fladd@signs,7
  4208  044B  0008               	return
  4209  044C  17CB               	bsf	___fladd@b+3,7
  4210  044D  0008               	return
  4211  044E                     __end_of___fladd:	
  4212                           
  4213                           	psect	text18
  4214  0768                     __ptext18:	
  4215 ;; *************** function _EUSART_Read *****************
  4216 ;; Defined at:
  4217 ;;		line 113 in file "mcc_generated_files/eusart.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      unsigned char 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4231 ;;      Params:         0       0       0       0
  4232 ;;      Locals:         0       0       0       0
  4233 ;;      Temps:          0       0       0       0
  4234 ;;      Totals:         0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:    4
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_LoadByte
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           
  4246                           ;psect for function _EUSART_Read
  4247  0768                     _EUSART_Read:	
  4248  0768                     l202:	
  4249                           ;eusart.c: 116: {
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _EUSART_Read: [wreg+status,2]
  4253                           
  4254  0768  0020               	movlb	0	; select bank0
  4255  0769  1E91               	btfss	17,5	;volatile
  4256  076A  2F68               	goto	l202
  4257                           
  4258                           ;eusart.c: 117: };eusart.c: 119: eusartRxLastError.status = 0;
  4259  076B  01EC               	clrf	_eusartRxLastError	;volatile
  4260                           
  4261                           ;eusart.c: 121: if(1 == RCSTAbits.OERR)
  4262  076C  0023               	movlb	3	; select bank3
  4263  076D  1C9D               	btfss	29,1	;volatile
  4264  076E  2F71               	goto	l2728
  4265                           
  4266                           ;eusart.c: 122: {;eusart.c: 125: RCSTAbits.CREN = 0;
  4267  076F  121D               	bcf	29,4	;volatile
  4268                           
  4269                           ;eusart.c: 126: RCSTAbits.CREN = 1;
  4270  0770  161D               	bsf	29,4	;volatile
  4271  0771                     l2728:	
  4272                           
  4273                           ;eusart.c: 127: };eusart.c: 129: return RCREG;
  4274  0771  0819               	movf	25,w	;volatile
  4275  0772  0008               	return
  4276  0773                     __end_of_EUSART_Read:	
  4277                           
  4278                           	psect	text19
  4279  061D                     __ptext19:	
  4280 ;; *************** function _CheckCRC *****************
  4281 ;; Defined at:
  4282 ;;		line 100 in file "main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  j               1    2[BANK0 ] unsigned char 
  4287 ;;  i               1    1[BANK0 ] unsigned char 
  4288 ;;  inc             1    0[BANK0 ] unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      unsigned char 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4298 ;;      Params:         0       0       0       0
  4299 ;;      Locals:         0       3       0       0
  4300 ;;      Temps:          2       0       0       0
  4301 ;;      Totals:         2       3       0       0
  4302 ;;Total ram usage:        5 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    4
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		_LoadByte
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function _CheckCRC
  4314  061D                     _CheckCRC:	
  4315                           
  4316                           ;main.c: 101: uint8_t inc = 0;
  4317                           
  4318                           ;incstack = 0
  4319                           ; Regs used in _CheckCRC: [wreg+fsr1l+fsr1h+status,2+status,0]
  4320  061D  0020               	movlb	0	; select bank0
  4321  061E  01A0               	clrf	CheckCRC@inc
  4322                           
  4323                           ;main.c: 102: for(uint8_t i = 0; i < uartData.uartBufSize - 1; i++) {
  4324  061F  01A1               	clrf	CheckCRC@i
  4325  0620                     l2706:	
  4326  0620  0021               	movlb	1	; select bank1
  4327  0621  084A               	movf	_uartData^(0+128),w	;volatile
  4328  0622  3EFF               	addlw	255
  4329  0623  00F4               	movwf	??_CheckCRC
  4330  0624  30FF               	movlw	255
  4331  0625  1803               	skipnc
  4332  0626  3000               	movlw	0
  4333  0627  00F5               	movwf	??_CheckCRC+1
  4334  0628  0875               	movf	??_CheckCRC+1,w
  4335  0629  3A80               	xorlw	128
  4336  062A  3C80               	sublw	128
  4337  062B  1D03               	skipz
  4338  062C  2E30               	goto	u3385
  4339  062D  0874               	movf	??_CheckCRC,w
  4340  062E  0020               	movlb	0	; select bank0
  4341  062F  0221               	subwf	CheckCRC@i,w
  4342  0630                     u3385:	
  4343  0630  1803               	btfsc	3,0
  4344  0631  2E52               	goto	l2708
  4345                           
  4346                           ;main.c: 103: for(uint8_t j = 0; j < 8; j++) {
  4347  0632  0020               	movlb	0	; select bank0
  4348  0633  01A2               	clrf	CheckCRC@j
  4349  0634                     l2698:	
  4350                           
  4351                           ;main.c: 104: inc = inc + ((uartData.buf[i] >> j)&0x01);
  4352  0634  0821               	movf	CheckCRC@i,w
  4353  0635  3ECB               	addlw	(low ((_uartData| 0+1)))& (0+255)
  4354  0636  0086               	movwf	6
  4355  0637  0187               	clrf	7
  4356  0638  0801               	movf	1,w
  4357  0639  00F4               	movwf	??_CheckCRC
  4358  063A  0A22               	incf	CheckCRC@j,w
  4359  063B  2E3D               	goto	u3364
  4360  063C                     u3365:	
  4361  063C  36F4               	lsrf	??_CheckCRC,f
  4362  063D                     u3364:	
  4363  063D  0B89               	decfsz	9,f
  4364  063E  2E3C               	goto	u3365
  4365  063F  0874               	movf	??_CheckCRC,w
  4366  0640  3901               	andlw	1
  4367  0641  0720               	addwf	CheckCRC@inc,w
  4368  0642  00F5               	movwf	??_CheckCRC+1
  4369  0643  0875               	movf	??_CheckCRC+1,w
  4370  0644  00A0               	movwf	CheckCRC@inc
  4371  0645  3001               	movlw	1
  4372  0646  00F4               	movwf	??_CheckCRC
  4373  0647  0874               	movf	??_CheckCRC,w
  4374  0648  07A2               	addwf	CheckCRC@j,f
  4375  0649  3008               	movlw	8
  4376  064A  0222               	subwf	CheckCRC@j,w
  4377  064B  1C03               	skipc
  4378  064C  2E34               	goto	l2698
  4379  064D  3001               	movlw	1
  4380  064E  00F4               	movwf	??_CheckCRC
  4381  064F  0874               	movf	??_CheckCRC,w
  4382  0650  07A1               	addwf	CheckCRC@i,f
  4383  0651  2E20               	goto	l2706
  4384  0652                     l2708:	
  4385                           
  4386                           ;main.c: 105: };main.c: 106: };main.c: 107: if(inc == uartData.buf[uartData.uartBufSize 
      +                          - 1]) return 1;
  4387  0652  0021               	movlb	1	; select bank1
  4388  0653  084A               	movf	_uartData^(0+128),w
  4389  0654  3ECA               	addlw	(low (_uartData| 0))& (0+255)
  4390  0655  0086               	movwf	6
  4391  0656  0187               	clrf	7
  4392  0657  0801               	movf	1,w
  4393  0658  0020               	movlb	0	; select bank0
  4394  0659  0620               	xorwf	CheckCRC@inc,w
  4395  065A  1D03               	skipz
  4396  065B  2E5E               	goto	l2716
  4397  065C  3001               	movlw	1
  4398  065D  0008               	return
  4399  065E                     l2716:	
  4400                           
  4401                           ;main.c: 108: else return 0;
  4402  065E  3000               	movlw	0
  4403  065F  0008               	return
  4404  0660                     __end_of_CheckCRC:	
  4405                           
  4406                           	psect	text20
  4407  06FD                     __ptext20:	
  4408 ;; *************** function _Init_UART_Data *****************
  4409 ;; Defined at:
  4410 ;;		line 81 in file "main.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  i               1    5[COMMON] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4424 ;;      Params:         0       0       0       0
  4425 ;;      Locals:         1       0       0       0
  4426 ;;      Temps:          1       0       0       0
  4427 ;;      Totals:         2       0       0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _Init_UART_Data
  4440  06FD                     _Init_UART_Data:	
  4441                           
  4442                           ;main.c: 83: uartData.uartBufSize = 0;
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _Init_UART_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  4446  06FD  0021               	movlb	1	; select bank1
  4447  06FE  01CA               	clrf	_uartData^(0+128)	;volatile
  4448                           
  4449                           ;main.c: 86: for (uint8_t i = 0; i < uartData.uartBufSize; i++) {
  4450  06FF  01F5               	clrf	Init_UART_Data@i
  4451  0700                     l2172:	
  4452  0700  084A               	movf	_uartData^(0+128),w	;volatile
  4453  0701  0275               	subwf	Init_UART_Data@i,w
  4454  0702  1803               	btfsc	3,0
  4455  0703  2F11               	goto	l2174
  4456                           
  4457                           ;main.c: 87: uartData.buf[i] = 0x7F;
  4458  0704  307F               	movlw	127
  4459  0705  00F4               	movwf	??_Init_UART_Data
  4460  0706  0875               	movf	Init_UART_Data@i,w
  4461  0707  3ECB               	addlw	(low ((_uartData| 0+1)))& (0+255)
  4462  0708  0086               	movwf	6
  4463  0709  0187               	clrf	7
  4464  070A  0874               	movf	??_Init_UART_Data,w
  4465  070B  0081               	movwf	1
  4466  070C  3001               	movlw	1
  4467  070D  00F4               	movwf	??_Init_UART_Data
  4468  070E  0874               	movf	??_Init_UART_Data,w
  4469  070F  07F5               	addwf	Init_UART_Data@i,f
  4470  0710  2F00               	goto	l2172
  4471  0711                     l2174:	
  4472                           
  4473                           ;main.c: 88: };main.c: 89: uartData.iBuf = 0;
  4474  0711  01DF               	clrf	(_uartData^(0+128)+21)	;volatile
  4475  0712  0008               	return
  4476  0713                     __end_of_Init_UART_Data:	
  4477                           
  4478                           	psect	text21
  4479  06A0                     __ptext21:	
  4480 ;; *************** function _Init_PPM_Data *****************
  4481 ;; Defined at:
  4482 ;;		line 65 in file "main.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  i               1    0[BANK0 ] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      void 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4496 ;;      Params:         0       0       0       0
  4497 ;;      Locals:         0       1       0       0
  4498 ;;      Temps:          2       0       0       0
  4499 ;;      Totals:         2       1       0       0
  4500 ;;Total ram usage:        3 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    4
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_main
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _Init_PPM_Data
  4512  06A0                     _Init_PPM_Data:	
  4513                           
  4514                           ;main.c: 67: ppmData.ppmRegSize = 0;
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _Init_PPM_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  4518  06A0  0021               	movlb	1	; select bank1
  4519  06A1  01A0               	clrf	_ppmData^(0+128)	;volatile
  4520                           
  4521                           ;main.c: 69: ppmData.reg[0] = 0;
  4522  06A2  01A1               	clrf	(_ppmData^(0+128)+1)	;volatile
  4523  06A3  01A2               	clrf	((_ppmData+1)^(0+128)+1)	;volatile
  4524                           
  4525                           ;main.c: 70: for(uint8_t i = 1; i < ppmData.ppmRegSize; i++) {
  4526  06A4  0020               	movlb	0	; select bank0
  4527  06A5  01A0               	clrf	Init_PPM_Data@i
  4528  06A6  0AA0               	incf	Init_PPM_Data@i,f
  4529  06A7                     l2740:	
  4530  06A7  0021               	movlb	1	; select bank1
  4531  06A8  0820               	movf	_ppmData^(0+128),w	;volatile
  4532  06A9  0020               	movlb	0	; select bank0
  4533  06AA  0220               	subwf	Init_PPM_Data@i,w
  4534  06AB  1803               	btfsc	3,0
  4535  06AC  2EBE               	goto	l2742
  4536                           
  4537                           ;main.c: 71: ppmData.reg[i] = 0x7F;
  4538  06AD  307F               	movlw	127
  4539  06AE  00F4               	movwf	??_Init_PPM_Data
  4540  06AF  3000               	movlw	0
  4541  06B0  00F5               	movwf	??_Init_PPM_Data+1
  4542  06B1  3520               	lslf	Init_PPM_Data@i,w
  4543  06B2  3EA1               	addlw	(low ((_ppmData| 0+1)))& (0+255)
  4544  06B3  0086               	movwf	6
  4545  06B4  0187               	clrf	7
  4546  06B5  0874               	movf	??_Init_PPM_Data,w
  4547  06B6  3FC0               	movwi [0]fsr1
  4548  06B7  0875               	movf	??_Init_PPM_Data+1,w
  4549  06B8  3FC1               	movwi [1]fsr1
  4550  06B9  3001               	movlw	1
  4551  06BA  00F4               	movwf	??_Init_PPM_Data
  4552  06BB  0874               	movf	??_Init_PPM_Data,w
  4553  06BC  07A0               	addwf	Init_PPM_Data@i,f
  4554  06BD  2EA7               	goto	l2740
  4555  06BE                     l2742:	
  4556                           
  4557                           ;main.c: 72: };main.c: 73: ppmData.iReg = 0;
  4558  06BE  0021               	movlb	1	; select bank1
  4559  06BF  01C9               	clrf	(_ppmData^(0+128)+41)	;volatile
  4560  06C0  0008               	return
  4561  06C1                     __end_of_Init_PPM_Data:	
  4562                           
  4563                           	psect	text22
  4564  079E                     __ptext22:	
  4565 ;; *************** function _EUSART_is_rx_ready *****************
  4566 ;; Defined at:
  4567 ;;		line 98 in file "mcc_generated_files/eusart.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      unsigned char 
  4574 ;; Registers used:
  4575 ;;		wreg, status,2, status,0
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4581 ;;      Params:         0       0       0       0
  4582 ;;      Locals:         0       0       0       0
  4583 ;;      Temps:          0       0       0       0
  4584 ;;      Totals:         0       0       0       0
  4585 ;;Total ram usage:        0 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    4
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_main
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _EUSART_is_rx_ready
  4597  079E                     _EUSART_is_rx_ready:	
  4598                           
  4599                           ;eusart.c: 100: return PIR1bits.RCIF;
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  4603  079E  0020               	movlb	0	; select bank0
  4604  079F  0E11               	swapf	17,w	;volatile
  4605  07A0  0C89               	rrf	9,f
  4606  07A1  3901               	andlw	1
  4607  07A2  0008               	return
  4608  07A3                     __end_of_EUSART_is_rx_ready:	
  4609                           
  4610                           	psect	intentry
  4611  0004                     __pintentry:	
  4612 ;; *************** function _INTERRUPT_InterruptManager *****************
  4613 ;; Defined at:
  4614 ;;		line 61 in file "mcc_generated_files/interrupt_manager.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;		None
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  1    wreg      void 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4628 ;;      Params:         0       0       0       0
  4629 ;;      Locals:         0       0       0       0
  4630 ;;      Temps:          1       0       0       0
  4631 ;;      Totals:         1       0       0       0
  4632 ;;Total ram usage:        1 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    3
  4635 ;; This function calls:
  4636 ;;		_TMR1_ISR
  4637 ;; This function is called by:
  4638 ;;		Interrupt level 1
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642  0004                     _INTERRUPT_InterruptManager:	
  4643                           
  4644                           ;incstack = 0
  4645  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4646                           
  4647                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4648  0005  3180               	pagesel	$
  4649                           
  4650                           ;interrupt_manager.c: 64: saveWREG = WREG;
  4651  0006  0020               	movlb	0	; select bank0
  4652  0007  0809               	movf	9,w	;volatile
  4653  0008  00F3               	movwf	??_INTERRUPT_InterruptManager
  4654  0009  0873               	movf	??_INTERRUPT_InterruptManager,w
  4655  000A  00F8               	movwf	_saveWREG
  4656                           
  4657                           ;interrupt_manager.c: 65: saveBSR = BSR;
  4658  000B  0808               	movf	8,w	;volatile
  4659  000C  00F3               	movwf	??_INTERRUPT_InterruptManager
  4660  000D  0873               	movf	??_INTERRUPT_InterruptManager,w
  4661  000E  00F7               	movwf	_saveBSR
  4662                           
  4663                           ;interrupt_manager.c: 66: saveSTATUS = STATUS;
  4664  000F  0803               	movf	3,w	;volatile
  4665  0010  00F3               	movwf	??_INTERRUPT_InterruptManager
  4666  0011  0873               	movf	??_INTERRUPT_InterruptManager,w
  4667  0012  00F6               	movwf	_saveSTATUS
  4668                           
  4669                           ;interrupt_manager.c: 67: saveFSR0H = FSR0H;
  4670  0013  0805               	movf	5,w	;volatile
  4671  0014  00F3               	movwf	??_INTERRUPT_InterruptManager
  4672  0015  0873               	movf	??_INTERRUPT_InterruptManager,w
  4673  0016  00EB               	movwf	_saveFSR0H
  4674                           
  4675                           ;interrupt_manager.c: 68: saveFSR0L = FSR0L;
  4676  0017  0804               	movf	4,w	;volatile
  4677  0018  00F3               	movwf	??_INTERRUPT_InterruptManager
  4678  0019  0873               	movf	??_INTERRUPT_InterruptManager,w
  4679  001A  00EA               	movwf	_saveFSR0L
  4680                           
  4681                           ;interrupt_manager.c: 69: saveFSR1H = FSR1H;
  4682  001B  0807               	movf	7,w	;volatile
  4683  001C  00F3               	movwf	??_INTERRUPT_InterruptManager
  4684  001D  0873               	movf	??_INTERRUPT_InterruptManager,w
  4685  001E  00E9               	movwf	_saveFSR1H
  4686                           
  4687                           ;interrupt_manager.c: 70: saveFSR1L = FSR1L;
  4688  001F  0806               	movf	6,w	;volatile
  4689  0020  00F3               	movwf	??_INTERRUPT_InterruptManager
  4690  0021  0873               	movf	??_INTERRUPT_InterruptManager,w
  4691  0022  00E8               	movwf	_saveFSR1L
  4692                           
  4693                           ;interrupt_manager.c: 73: if(INTCONbits.PEIE == 1)
  4694  0023  1F0B               	btfss	11,6	;volatile
  4695  0024  282C               	goto	i1l2250
  4696                           
  4697                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: if(PIE1bits.TMR1IE == 1 && PIR1bits
      +                          .TMR1IF == 1)
  4698  0025  0021               	movlb	1	; select bank1
  4699  0026  1C11               	btfss	17,0	;volatile
  4700  0027  282C               	goto	i1l2250
  4701  0028  0020               	movlb	0	; select bank0
  4702  0029  1C11               	btfss	17,0	;volatile
  4703  002A  282C               	goto	i1l2250
  4704                           
  4705                           ;interrupt_manager.c: 76: {;interrupt_manager.c: 77: TMR1_ISR();
  4706  002B  273C               	fcall	_TMR1_ISR
  4707  002C                     i1l2250:	
  4708                           ;interrupt_manager.c: 78: }
  4709                           
  4710                           
  4711                           ;interrupt_manager.c: 87: };interrupt_manager.c: 90: FSR0H = saveFSR0H;
  4712  002C  0020               	movlb	0	; select bank0
  4713  002D  086B               	movf	_saveFSR0H,w
  4714  002E  0085               	movwf	5	;volatile
  4715                           
  4716                           ;interrupt_manager.c: 91: FSR0L = saveFSR0L;
  4717  002F  086A               	movf	_saveFSR0L,w
  4718  0030  0084               	movwf	4	;volatile
  4719                           
  4720                           ;interrupt_manager.c: 92: FSR1H = saveFSR1H;
  4721  0031  0869               	movf	_saveFSR1H,w
  4722  0032  0087               	movwf	7	;volatile
  4723                           
  4724                           ;interrupt_manager.c: 93: FSR1L = saveFSR1L;
  4725  0033  0868               	movf	_saveFSR1L,w
  4726  0034  0086               	movwf	6	;volatile
  4727                           
  4728                           ;interrupt_manager.c: 94: STATUS = saveSTATUS;
  4729  0035  0876               	movf	_saveSTATUS,w
  4730  0036  0083               	movwf	3	;volatile
  4731                           
  4732                           ;interrupt_manager.c: 95: BSR = saveBSR;
  4733  0037  0877               	movf	_saveBSR,w
  4734  0038  0088               	movwf	8	;volatile
  4735                           
  4736                           ;interrupt_manager.c: 96: WREG = saveWREG;
  4737  0039  0878               	movf	_saveWREG,w
  4738  003A  0089               	movwf	9	;volatile
  4739  003B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4740  003C  0009               	retfie
  4741  003D                     __end_of_INTERRUPT_InterruptManager:	
  4742                           
  4743                           	psect	text24
  4744  073C                     __ptext24:	
  4745 ;; *************** function _TMR1_ISR *****************
  4746 ;; Defined at:
  4747 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4761 ;;      Params:         0       0       0       0
  4762 ;;      Locals:         0       0       0       0
  4763 ;;      Temps:          0       0       0       0
  4764 ;;      Totals:         0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    2
  4768 ;; This function calls:
  4769 ;;		Absolute function
  4770 ;;		_TMR1_DefaultInterruptHandler
  4771 ;;		_TMR1_WriteTimer
  4772 ;; This function is called by:
  4773 ;;		_INTERRUPT_InterruptManager
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function _TMR1_ISR
  4779  073C                     _TMR1_ISR:	
  4780                           
  4781                           ;tmr1.c: 193: PIR1bits.TMR1IF = 0;
  4782                           
  4783                           ;incstack = 0
  4784                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4785  073C  0020               	movlb	0	; select bank0
  4786  073D  1011               	bcf	17,0	;volatile
  4787                           
  4788                           ;tmr1.c: 194: TMR1_WriteTimer(timer1ReloadVal);
  4789  073E  086F               	movf	_timer1ReloadVal+1,w	;volatile
  4790  073F  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4791  0740  086E               	movf	_timer1ReloadVal,w	;volatile
  4792  0741  00F0               	movwf	TMR1_WriteTimer@timerVal
  4793  0742  274E               	fcall	_TMR1_WriteTimer
  4794                           
  4795                           ;tmr1.c: 196: if(TMR1_InterruptHandler)
  4796  0743  0021               	movlb	1	; select bank1
  4797  0744  0866               	movf	_TMR1_InterruptHandler^(0+128),w
  4798  0745  0467               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  4799  0746  1903               	btfsc	3,2
  4800  0747  0008               	return
  4801                           
  4802                           ;tmr1.c: 197: {;tmr1.c: 198: TMR1_InterruptHandler();
  4803  0748  0867               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  4804  0749  008A               	movwf	10
  4805  074A  0866               	movf	_TMR1_InterruptHandler^(0+128),w
  4806  074B  000A               	callw
  4807  074C  3187               	pagesel	$
  4808  074D  0008               	return
  4809  074E                     __end_of_TMR1_ISR:	
  4810                           
  4811                           	psect	text25
  4812  0660                     __ptext25:	
  4813 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4814 ;; Defined at:
  4815 ;;		line 207 in file "mcc_generated_files/tmr1.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4829 ;;      Params:         0       0       0       0
  4830 ;;      Locals:         0       0       0       0
  4831 ;;      Temps:          1       0       0       0
  4832 ;;      Totals:         1       0       0       0
  4833 ;;Total ram usage:        1 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; Hardware stack levels required when called:    1
  4836 ;; This function calls:
  4837 ;;		_TMR1_WriteTimer
  4838 ;; This function is called by:
  4839 ;;		_TMR1_Initialize
  4840 ;;		_TMR1_ISR
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           
  4845                           ;psect for function _TMR1_DefaultInterruptHandler
  4846  0660                     _TMR1_DefaultInterruptHandler:	
  4847                           
  4848                           ;tmr1.c: 214: switch(ppmState) {
  4849                           
  4850                           ;incstack = 0
  4851                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg-fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4852  0660  2E94               	goto	i1l2080
  4853  0661                     i1l73:	
  4854                           ;tmr1.c: 215: case START:
  4855                           
  4856                           
  4857                           ;tmr1.c: 216: LATAbits.LATA4 = 0;
  4858  0661  0022               	movlb	2	; select bank2
  4859  0662  120C               	bcf	12,4	;volatile
  4860                           
  4861                           ;tmr1.c: 217: TMR1_WriteTimer(0x63C0 +~0xF9C0 + ~0xFE60);
  4862  0663  309E               	movlw	158
  4863  0664  00F0               	movwf	TMR1_WriteTimer@timerVal
  4864  0665  306B               	movlw	107
  4865  0666  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4866  0667  274E               	fcall	_TMR1_WriteTimer
  4867                           
  4868                           ;tmr1.c: 218: ppmData.iReg = 0;
  4869  0668  0021               	movlb	1	; select bank1
  4870  0669  01C9               	clrf	(_ppmData^(0+128)+41)	;volatile
  4871  066A                     i1l2062:	
  4872                           
  4873                           ;tmr1.c: 219: ppmState = END;
  4874  066A  3001               	movlw	1
  4875  066B  00F2               	movwf	??_TMR1_DefaultInterruptHandler
  4876  066C  0872               	movf	??_TMR1_DefaultInterruptHandler,w
  4877  066D  00F9               	movwf	_ppmState	;volatile
  4878                           
  4879                           ;tmr1.c: 220: break;
  4880  066E  0008               	return
  4881  066F                     i1l75:	
  4882                           ;tmr1.c: 221: case END:
  4883                           
  4884                           
  4885                           ;tmr1.c: 222: LATAbits.LATA4 = 1;
  4886  066F  0022               	movlb	2	; select bank2
  4887  0670  160C               	bsf	12,4	;volatile
  4888                           
  4889                           ;tmr1.c: 223: TMR1_WriteTimer(0xF9C0 + ~0xFE60);
  4890  0671  305F               	movlw	95
  4891  0672  00F0               	movwf	TMR1_WriteTimer@timerVal
  4892  0673  30FB               	movlw	251
  4893  0674  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4894  0675  274E               	fcall	_TMR1_WriteTimer
  4895                           
  4896                           ;tmr1.c: 224: if(ppmData.iReg < ppmData.ppmRegSize) {
  4897  0676  0021               	movlb	1	; select bank1
  4898  0677  0820               	movf	_ppmData^(0+128),w	;volatile
  4899  0678  0249               	subwf	(_ppmData^(0+128)+41),w	;volatile
  4900  0679  1803               	skipnc
  4901  067A  2E80               	goto	i1l2070
  4902                           
  4903                           ;tmr1.c: 225: ppmState = DATA;
  4904  067B  3002               	movlw	2
  4905  067C  00F2               	movwf	??_TMR1_DefaultInterruptHandler
  4906  067D  0872               	movf	??_TMR1_DefaultInterruptHandler,w
  4907  067E  00F9               	movwf	_ppmState	;volatile
  4908                           
  4909                           ;tmr1.c: 226: } else ppmState = START;
  4910  067F  0008               	return
  4911  0680                     i1l2070:	
  4912  0680  01F9               	clrf	_ppmState	;volatile
  4913  0681  0008               	return
  4914  0682                     i1l78:	
  4915                           ;tmr1.c: 228: case DATA:
  4916                           
  4917                           
  4918                           ;tmr1.c: 229: LATAbits.LATA4 = 0;
  4919  0682  0022               	movlb	2	; select bank2
  4920  0683  120C               	bcf	12,4	;volatile
  4921                           
  4922                           ;tmr1.c: 230: TMR1_WriteTimer(ppmData.reg[ppmData.iReg]);
  4923  0684  0021               	movlb	1	; select bank1
  4924  0685  3549               	lslf	(_ppmData^(0+128)+41),w	;volatile
  4925  0686  3EA1               	addlw	(low ((_ppmData| 0+1)))& (0+255)
  4926  0687  0086               	movwf	6
  4927  0688  0187               	clrf	7
  4928  0689  3F40               	moviw [0]fsr1
  4929  068A  00F0               	movwf	TMR1_WriteTimer@timerVal
  4930  068B  3F41               	moviw [1]fsr1
  4931  068C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  4932  068D  274E               	fcall	_TMR1_WriteTimer
  4933                           
  4934                           ;tmr1.c: 231: ppmData.iReg++;
  4935  068E  3001               	movlw	1
  4936  068F  00F2               	movwf	??_TMR1_DefaultInterruptHandler
  4937  0690  0872               	movf	??_TMR1_DefaultInterruptHandler,w
  4938  0691  0021               	movlb	1	; select bank1
  4939  0692  07C9               	addwf	(_ppmData^(0+128)+41),f	;volatile
  4940  0693  2E6A               	goto	i1l2062
  4941  0694                     i1l2080:	
  4942  0694  0879               	movf	_ppmState,w	;volatile
  4943                           
  4944                           ; Switch size 1, requested type "simple"
  4945                           ; Number of cases is 3, Range of values is 0 to 2
  4946                           ; switch strategies available:
  4947                           ; Name         Instructions Cycles
  4948                           ; simple_byte           10     6 (average)
  4949                           ; direct_byte           12     6 (fixed)
  4950                           ; jumptable            260     6 (fixed)
  4951                           ;	Chosen strategy is simple_byte
  4952  0695  3A00               	xorlw	0	; case 0
  4953  0696  1903               	skipnz
  4954  0697  2E61               	goto	i1l73
  4955  0698  3A01               	xorlw	1	; case 1
  4956  0699  1903               	skipnz
  4957  069A  2E6F               	goto	i1l75
  4958  069B  3A03               	xorlw	3	; case 2
  4959  069C  1903               	skipnz
  4960  069D  2E82               	goto	i1l78
  4961  069E  2E9F               	goto	i1l79
  4962  069F                     i1l79:	
  4963  069F  0008               	return
  4964  06A0                     __end_of_TMR1_DefaultInterruptHandler:	
  4965                           
  4966                           	psect	text26
  4967  074E                     __ptext26:	
  4968 ;; *************** function _TMR1_WriteTimer *****************
  4969 ;; Defined at:
  4970 ;;		line 152 in file "mcc_generated_files/tmr1.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  timerVal        2    0[COMMON] unsigned int 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4984 ;;      Params:         2       0       0       0
  4985 ;;      Locals:         0       0       0       0
  4986 ;;      Temps:          0       0       0       0
  4987 ;;      Totals:         2       0       0       0
  4988 ;;Total ram usage:        2 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_TMR1_ISR
  4994 ;;		_TMR1_DefaultInterruptHandler
  4995 ;;		_TMR1_Reload
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           
  5000                           ;psect for function _TMR1_WriteTimer
  5001  074E                     _TMR1_WriteTimer:	
  5002                           
  5003                           ;tmr1.c: 154: if (T1CONbits.nT1SYNC == 1)
  5004                           
  5005                           ;incstack = 0
  5006                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5007  074E  0020               	movlb	0	; select bank0
  5008  074F  1D18               	btfss	24,2	;volatile
  5009  0750  2F58               	goto	i1l1618
  5010                           
  5011                           ;tmr1.c: 155: {;tmr1.c: 157: T1CONbits.TMR1ON = 0;
  5012  0751  1018               	bcf	24,0	;volatile
  5013                           
  5014                           ;tmr1.c: 160: TMR1H = (timerVal >> 8);
  5015  0752  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5016  0753  0097               	movwf	23	;volatile
  5017                           
  5018                           ;tmr1.c: 161: TMR1L = timerVal;
  5019  0754  0870               	movf	TMR1_WriteTimer@timerVal,w
  5020  0755  0096               	movwf	22	;volatile
  5021                           
  5022                           ;tmr1.c: 164: T1CONbits.TMR1ON =1;
  5023  0756  1418               	bsf	24,0	;volatile
  5024                           
  5025                           ;tmr1.c: 165: }
  5026  0757  0008               	return
  5027  0758                     i1l1618:	
  5028                           
  5029                           ;tmr1.c: 166: else;tmr1.c: 167: {;tmr1.c: 169: TMR1H = (timerVal >> 8);
  5030  0758  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5031  0759  0097               	movwf	23	;volatile
  5032                           
  5033                           ;tmr1.c: 170: TMR1L = timerVal;
  5034  075A  0870               	movf	TMR1_WriteTimer@timerVal,w
  5035  075B  0096               	movwf	22	;volatile
  5036  075C  0008               	return
  5037  075D                     __end_of_TMR1_WriteTimer:	
  5038  007E                     btemp	set	126	;btemp
  5039  007E                     int$flags	set	126
  5040  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         74
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     72      80
    BANK1            80      6      78
    BANK2            80      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_Init_PPM_Data
    _main->_Init_UART_Data
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _LoadByte->_CheckCRC
    ___flmul->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_DefaultInterruptHandler
    _TMR1_DefaultInterruptHandler->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _LoadByte->_UARTUpdatePPM
    _UARTUpdatePPM->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LoadByte
    _LoadByte->_UARTUpdatePPM

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8482
                 _EUSART_is_rx_ready
                      _Init_PPM_Data
                     _Init_UART_Data
                           _LoadByte
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoadByte                                             2     2      0    7976
                                              4 BANK1      2     2      0
                           _CheckCRC
                        _EUSART_Read
                      _UARTUpdatePPM
 ---------------------------------------------------------------------------------
 (2) _UARTUpdatePPM                                        5     5      0    7707
                                             71 BANK0      1     1      0
                                              0 BANK1      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     566
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     427
                                             60 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3353
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3262
                                             40 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckCRC                                             5     5      0     235
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART_Data                                       2     2      0      46
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init_PPM_Data                                        3     3      0      68
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0     936
                                              3 COMMON     1     1      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     936
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         1     1      0     468
                                              2 COMMON     1     1      0
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     468
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _Init_PPM_Data
   _Init_UART_Data
   _LoadByte
     _CheckCRC
     _EUSART_Read
     _UARTUpdatePPM
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
       _TMR1_WriteTimer
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     48      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      6      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      A8      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 22 05:05:38 2019

                                  __CFG_CP$OFF 0000                            __Umul8_16@word_mpld 0024  
                                          l202 0768                                            l153 0762  
                                          l700 03CF                                            l721 0446  
                                          l713 042E                                            l813 046C  
                                          l832 06D2                                            l826 04B6  
                                          l683 034C                                            l579 0601  
                                          l827 04C0                                            l819 04A2  
                                          l685 032F                                            l679 02B9  
                                          l787 025F                                            _BSR 0008  
                              _timer1ReloadVal 006E                 ?_EUSART_SetFramingErrorHandler 0074  
                                 __CFG_BORV$HI 0000                                            wreg 0009  
                                 ___flmul@aexp 003C                                   ___flmul@bexp 0041  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                  _Init_PPM_Data 06A0  
                                 ?_EUSART_Read 0070                                   __CFG_LVP$OFF 0000  
                                 ___fltol@exp1 0066                                           l2320 0289  
                                         l2322 0291                                           l2172 0700  
                                         l2340 02AE                                           l2316 0286  
                                         l2174 0711                                           l2414 036C  
                                         l2406 035A                                           l2350 02C3  
                                         l2510 006C                                           l2416 036E  
                                         l2424 037D                                           l2344 02B1  
                                         l2256 06CC                                           l2600 01F5  
                                         l2512 006E                                           l2272 05CA  
                                         l2450 03EE                                           l2442 03E1  
                                         l2434 03C7                                           l2530 0091  
                                         l2514 0076                                           l2290 05FD  
                                         l2380 02FF                                           l2604 01F7  
                                         l2540 00A7                                           l2532 0099  
                                         l2268 05C1                                           l2390 0339  
                                         l2614 0220                                           l2464 0400  
                                         l2456 03F5                                           l2624 024C  
                                         l2528 008F                                           l2288 05EF  
                                         l2706 0620                                           l2490 0442  
                                         l2458 03F7                                           l2618 0235  
                                         l2298 060E                                           l2642 0464  
                                         l2740 06A7                                           l2716 065E  
                                         l2708 0652                                           l2468 0402  
                                         l2388 0337                                           l2652 047F  
                                         l2742 06BE                                           l2486 043E  
                                         l2398 0347                                           l2662 04B4  
                                         l2654 048F                                           l2728 0771  
                                         l2592 01C7                                           l2664 04A7  
                                         l2648 047B                                           l2760 0505  
                                         l2594 01DE                                           l2754 04F7  
                                         l2676 04DB                                           l2764 0510  
                                         l2748 04E8                                           l2758 0502  
                                         l2790 053F                                           l2688 0558  
                                         l2776 0528                                           l2698 0634  
                                         _LATA 010C                                           u3105 01D3  
                                         u3035 0117                                           u2405 06D3  
                                         u3045 0142                                           u3055 0190  
                                         u3065 01A7                                           u3075 01B6  
                                         u2435 05D3                                           u2620 031E  
                                         u3085 01CA                                           u3325 04C8  
                                         u3245 0488                                           u2630 031F  
                                         u2615 0313                                           u3175 020E  
                                         u3185 0229                                           u2465 05F0  
                                         u3265 049C                                           u3195 023F  
                                         u3364 063D                                           u3365 063C  
                                         u3285 04AE                                           u2743 038F  
                                         u2735 0372                                           u2495 0605  
                                         u3385 0630                                           u2665 033D  
                                         u2785 03E2                                           u2885 0419  
                                         i1l73 0661                                           i1l75 066F  
                                         i1l78 0682                                           i1l79 069F  
                                         _WREG 0009                                           _WPUA 020C  
                                 __CFG_WRT$OFF 0000                                           _main 075D  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                         start 003D                                 _Init_UART_Data 06FD  
                   ??_TMR1_SetInterruptHandler 0076                                  __CFG_PLLEN$ON 0000  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 077A  
                                ___fltol@sign1 0065                                __end_of___fladd 044E  
                                        ?_main 0070                                  __CFG_WDTE$OFF 0000  
                              __end_of___flmul 026C                                __end_of___fltol 061D  
                                        _T1CON 0018                                          _FSR0H 0005  
                                        _FSR1H 0007                                          _FSR0L 0004  
                                        _FSR1L 0006                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TXSTA 019E                                  __CFG_PWRTE$ON 0000  
                               ?_Init_PPM_Data 0070                               __end_of_TMR1_ISR 074E  
                               _WDT_Initialize 07B3                        __end_of_TMR1_Initialize 0728  
                                        pclath 000A                               __end_of_CheckCRC 0660  
                                        status 0003                              __end_of_DATA_MULT 07AF  
                                        wtemp0 007E                         __end_of_Init_UART_Data 0713  
                              _TMR1_WriteTimer 074E                                 __CFG_MCLRE$OFF 0000  
                              __initialization 003E                                   __end_of_main 0768  
                             __end_of_LoadByte 0551                    ?_INTERRUPT_InterruptManager 0070  
                                 LoadByte@byte 00ED                                         ??_main 0076  
                       __end_of_WDT_Initialize 07B7              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 00E2                                         _APFCON 011D  
                                       _ANSELA 018C                     __end_of_EUSART_is_rx_ready 07A3  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l2070 0680  
                                       i1l2062 066A                                         i1l2080 0694  
                                       _ODCONA 028C                                         i1l2250 002C  
                                       i1l1618 0758                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _STATUS 0003  
                              ?_Init_UART_Data 0070                               __end_of___xxtofl 04E4  
         __end_of_TMR1_DefaultInterruptHandler 06A0          __size_of_TMR1_DefaultInterruptHandler 0040  
                 _TMR1_DefaultInterruptHandler 0660                                      ??___fladd 0050  
                               __CFG_STVREN$ON 0000                                      ??___flmul 0036  
                                    ??___fltol 0060                                ??_Init_PPM_Data 0074  
                           __size_of__Umul8_16 0020                                ?_WDT_Initialize 0070  
     TMR1_SetInterruptHandler@InterruptHandler 0074                        __end_of_TMR1_WriteTimer 075D  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                         __size_of_EUSART_Read 000B                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 0780                                   ___xxtofl@val 0020  
                      __end_of__initialization 004F                             ?_SYSTEM_Initialize 0070  
                        __end_of_UARTUpdatePPM 05B7                                     ___fltol@f1 005C  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0076  
                                    ?_TMR1_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                                    ?_CheckCRC 0070                                 _OPTION_REGbits 0095  
                              __CFG_LPBOREN$ON 0000                ??_EUSART_SetOverrunErrorHandler 0076  
                    __end_of_SYSTEM_Initialize 0786                                     __pbssBANK0 0068  
                                   __pbssBANK1 00A0                                      ?_LoadByte 0070  
                              Init_UART_Data@i 0075                              __end_of__Umul8_16 06E1  
                                   __pmaintext 075D                                     ??_TMR1_ISR 0073  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                   ??_CheckCRC 0074                                      ?___xxtofl 0020  
                                      _OSCTUNE 0098                                        _SLRCONA 030C  
                     ??_EUSART_SetErrorHandler 0076                               ?_TMR1_WriteTimer 0070  
                                   ??_LoadByte 00EC                                      _DATA_MULT 07AB  
                                      ___fladd 026C                                        ___flmul 0052  
                                      ___fltol 05B7                          __end_ofmain@DATA_MULT 07A7  
                                      __ptext1 0780                                        __ptext2 07B3  
                                      __ptext3 0713                                        __ptext4 0786  
                                      __ptext5 0728                                        __ptext6 0773  
                                      __ptext7 06E1                                        __ptext8 078C  
                                      __ptext9 0792                                      CheckCRC@i 0021  
                                    CheckCRC@j 0022                 ??_TMR1_DefaultInterruptHandler 0072  
                                    _T1CONbits 0018                          _OSCILLATOR_Initialize 0773  
                                   ??___xxtofl 0024                                        _saveBSR 0077  
            __size_of_TMR1_SetInterruptHandler 0006                                        _ppmData 00A0  
                     ??_PIN_MANAGER_Initialize 0074                      ?_TMR1_SetInterruptHandler 0074  
                                   _saveSTATUS 0076                     __size_of_SYSTEM_Initialize 0006  
                             ??_Init_UART_Data 0074                                        clrloop0 077B  
                         end_of_initialization 004F          __end_of_EUSART_SetOverrunErrorHandler 0792  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 078C  
                               UARTUpdatePPM@i 0067                              _EUSART_Initialize 06E1  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 079E                            __end_of_DATA_OFFSET 07B3  
                          ??_EUSART_Initialize 0076                               ??_WDT_Initialize 0074  
                          ?_EUSART_is_rx_ready 0070                                    ___fladd@grs 005B  
                             __CFG_FOSC$INTOSC 0000                                  ___xxtofl@sign 0028  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 003D  
                    __end_of_EUSART_Initialize 06FD                           ??_EUSART_is_rx_ready 0074  
                              main@DATA_OFFSET 07A7                     _EUSART_DefaultErrorHandler 0000  
                            __size_of_TMR1_ISR 0012                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 003E                          __end_of_Init_PPM_Data 06C1  
                            __size_of_CheckCRC 0043                __size_of_PIN_MANAGER_Initialize 0014  
                                ??_EUSART_Read 0074                              __size_of_LoadByte 006D  
                                  _DATA_OFFSET 07AF                 ?_EUSART_SetOverrunErrorHandler 0074  
                     __size_of_TMR1_Initialize 0015                     _EUSART_FramingErrorHandler 00E4  
                       _EUSART_SetErrorHandler 0798                                      __Umul8_16 06C1  
                                    ___fladd@a 004C                                      ___fladd@b 0048  
                                    ___flmul@a 0032                                      ___flmul@b 002E  
                                  __pbssCOMMON 0076                         __size_of_UARTUpdatePPM 0066  
                                    ___latbits 0000                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00E8                              __size_of___xxtofl 0096  
                      __end_ofmain@DATA_OFFSET 07AB                     __size_of_EUSART_Initialize 001C  
                          __end_of_EUSART_Read 0773                                      __pnvBANK0 006E  
                                    __pnvBANK1 00E0                         _PIN_MANAGER_Initialize 0728  
             __end_of_TMR1_SetInterruptHandler 078C                                       ?___fladd 0048  
                                     ?___flmul 002E                                       ?___fltol 005C  
                                   ?__Umul8_16 0074                                 Init_PPM_Data@i 0020  
                                  CheckCRC@inc 0020                   ??_INTERRUPT_InterruptManager 0073  
                                    _saveFSR0H 006B                                      _saveFSR1H 0069  
                                    _saveFSR0L 006A                                      _saveFSR1L 0068  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0074  
                                    clear_ram0 077A                                       _PIE1bits 0091  
                            _eusartRxLastError 006C                                  _UARTUpdatePPM 0551  
                     __size_of_TMR1_WriteTimer 000F            __size_of_INTERRUPT_InterruptManager 0039  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0076  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 073C  
                                _uartLoadState 006D                              ??_TMR1_Initialize 0076  
                                     _CheckCRC 061D                                    _EUSART_Read 0768  
                                     _LoadByte 04E4                                 ?_UARTUpdatePPM 0070  
                      ??_OSCILLATOR_Initialize 0074                                    ??__Umul8_16 0020  
                          _EUSART_ErrorHandler 00E0                               __size_of___fladd 01E2  
                             __size_of___flmul 021A                               __size_of___fltol 0066  
                     _TMR1_SetInterruptHandler 0786                          _TMR1_InterruptHandler 00E6  
                                     ___xxtofl 044E                                       __ptext10 0798  
                                     __ptext11 04E4                                       __ptext20 06FD  
                                     __ptext12 0551                                       __ptext21 06A0  
                                     __ptext13 044E                                     _T1GCONbits 0019  
                                     __ptext22 079E                                       __ptext14 05B7  
                                     __ptext15 0052                                       __ptext24 073C  
                                     __ptext16 06C1                                       __ptext25 0660  
                                     __ptext17 026C                                       __ptext26 074E  
                                     __ptext18 0768                                       __ptext19 061D  
                  __size_of_EUSART_is_rx_ready 0005                                  __size_of_main 000B  
                                     _saveWREG 0078                        ?_EUSART_SetErrorHandler 0074  
                      __size_of_Init_UART_Data 0016                                       _uartData 00CA  
                                     _ppmState 0079  EUSART_SetOverrunErrorHandler@interruptHandler 0074  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 003D  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0798  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0792  
                            ??_TMR1_WriteTimer 0072                                  main@DATA_MULT 07A3  
                                   _INTCONbits 000B                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                ??_UARTUpdatePPM 00E8  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 079E  
                            __CFG_CLKOUTEN$OFF 0000                         __size_of_Init_PPM_Data 0021  
EUSART_SetFramingErrorHandler@interruptHandler 0074                                  __pstringtext1 07A3  
                                __pstringtext2 07A7                                  __pstringtext3 07AB  
                                __pstringtext4 07AF                         __Umul8_16@multiplicand 0074  
                                ___fladd@signs 0058                 __end_of_PIN_MANAGER_Initialize 073C  
                                 ___fladd@aexp 0059                                   ___fladd@bexp 005A  
                         __Umul8_16@multiplier 0026                                _TMR1_Initialize 0713  
                            __Umul8_16@product 0022  
